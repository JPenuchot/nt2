[section fast_ldexp]
This functor acts similarly as the standard `ldexp` function returning the combination 
of the mantissa (first parameter) and the exponent (second parameter) as `m*2^e`

In SIMD case the exponent and mantissa type must be related by as_integer meta function

That is `nt2::int32_t` for `float` and `nt2::int64_t` for `double`

As usual here the fast is paid by wrong limiting cases: for `nan`, `inf`, `-inf` value of mantissa and/or
to big an exponent the results will be undefined.
Use `ldexp` if your datas can be invalid and you still care in these cases.

[h5 Description]

[h5 Synonyms]

[h5 Synopsis]

[table Template Parameters
    [[Parameter] [Requirement] [Description]]
]

[table Parameters
    [[Parameter] [Description]]
]

[h5 Header]
   #include <boost/simd/toolbox/ieee/include/fast_ldexp.hpp>
[h5 Expression Semantics]

[*Return type: ]

[*Semantics:   ]

[h5 Example]

[endsect]
