                      /**/
    template<class This,class A0 , class A1> struct result<This(A0 , A1)> { static typename meta::strip<A0>::type& a0; static typename meta::strip<A1>::type& a1; BOOST_TYPEOF_NESTED_TYPEDEF_TPL ( nested , a0 + a1) typedef typename nested::type type; }; template<class This,class A0 , class A1 , class A2> struct result<This(A0 , A1 , A2)> { static typename meta::strip<A0>::type& a0; static typename meta::strip<A1>::type& a1; static typename meta::strip<A2>::type& a2; BOOST_TYPEOF_NESTED_TYPEDEF_TPL ( nested , a0 + a1 + a2) typedef typename nested::type type; }; template<class This,class A0 , class A1 , class A2 , class A3> struct result<This(A0 , A1 , A2 , A3)> { static typename meta::strip<A0>::type& a0; static typename meta::strip<A1>::type& a1; static typename meta::strip<A2>::type& a2; static typename meta::strip<A3>::type& a3; BOOST_TYPEOF_NESTED_TYPEDEF_TPL ( nested , a0 + a1 + a2 + a3) typedef typename nested::type type; }; template<class This,class A0 , class A1 , class A2 , class A3 , class A4> struct result<This(A0 , A1 , A2 , A3 , A4)> { static typename meta::strip<A0>::type& a0; static typename meta::strip<A1>::type& a1; static typename meta::strip<A2>::type& a2; static typename meta::strip<A3>::type& a3; static typename meta::strip<A4>::type& a4; BOOST_TYPEOF_NESTED_TYPEDEF_TPL ( nested , a0 + a1 + a2 + a3 + a4) typedef typename nested::type type; }; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5> struct result<This(A0 , A1 , A2 , A3 , A4 , A5)> { static typename meta::strip<A0>::type& a0; static typename meta::strip<A1>::type& a1; static typename meta::strip<A2>::type& a2; static typename meta::strip<A3>::type& a3; static typename meta::strip<A4>::type& a4; static typename meta::strip<A5>::type& a5; BOOST_TYPEOF_NESTED_TYPEDEF_TPL ( nested , a0 + a1 + a2 + a3 + a4 + a5) typedef typename nested::type type; }; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6)> { static typename meta::strip<A0>::type& a0; static typename meta::strip<A1>::type& a1; static typename meta::strip<A2>::type& a2; static typename meta::strip<A3>::type& a3; static typename meta::strip<A4>::type& a4; static typename meta::strip<A5>::type& a5; static typename meta::strip<A6>::type& a6; BOOST_TYPEOF_NESTED_TYPEDEF_TPL ( nested , a0 + a1 + a2 + a3 + a4 + a5 + a6) typedef typename nested::type type; }; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7)> { static typename meta::strip<A0>::type& a0; static typename meta::strip<A1>::type& a1; static typename meta::strip<A2>::type& a2; static typename meta::strip<A3>::type& a3; static typename meta::strip<A4>::type& a4; static typename meta::strip<A5>::type& a5; static typename meta::strip<A6>::type& a6; static typename meta::strip<A7>::type& a7; BOOST_TYPEOF_NESTED_TYPEDEF_TPL ( nested , a0 + a1 + a2 + a3 + a4 + a5 + a6 + a7) typedef typename nested::type type; }; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8)> { static typename meta::strip<A0>::type& a0; static typename meta::strip<A1>::type& a1; static typename meta::strip<A2>::type& a2; static typename meta::strip<A3>::type& a3; static typename meta::strip<A4>::type& a4; static typename meta::strip<A5>::type& a5; static typename meta::strip<A6>::type& a6; static typename meta::strip<A7>::type& a7; static typename meta::strip<A8>::type& a8; BOOST_TYPEOF_NESTED_TYPEDEF_TPL ( nested , a0 + a1 + a2 + a3 + a4 + a5 + a6 + a7 + a8) typedef typename nested::type type; }; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9)> { static typename meta::strip<A0>::type& a0; static typename meta::strip<A1>::type& a1; static typename meta::strip<A2>::type& a2; static typename meta::strip<A3>::type& a3; static typename meta::strip<A4>::type& a4; static typename meta::strip<A5>::type& a5; static typename meta::strip<A6>::type& a6; static typename meta::strip<A7>::type& a7; static typename meta::strip<A8>::type& a8; static typename meta::strip<A9>::type& a9; BOOST_TYPEOF_NESTED_TYPEDEF_TPL ( nested , a0 + a1 + a2 + a3 + a4 + a5 + a6 + a7 + a8 + a9) typedef typename nested::type type; }; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10)> { static typename meta::strip<A0>::type& a0; static typename meta::strip<A1>::type& a1; static typename meta::strip<A2>::type& a2; static typename meta::strip<A3>::type& a3; static typename meta::strip<A4>::type& a4; static typename meta::strip<A5>::type& a5; static typename meta::strip<A6>::type& a6; static typename meta::strip<A7>::type& a7; static typename meta::strip<A8>::type& a8; static typename meta::strip<A9>::type& a9; static typename meta::strip<A10>::type& a10; BOOST_TYPEOF_NESTED_TYPEDEF_TPL ( nested , a0 + a1 + a2 + a3 + a4 + a5 + a6 + a7 + a8 + a9 + a10) typedef typename nested::type type; }; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11)> { static typename meta::strip<A0>::type& a0; static typename meta::strip<A1>::type& a1; static typename meta::strip<A2>::type& a2; static typename meta::strip<A3>::type& a3; static typename meta::strip<A4>::type& a4; static typename meta::strip<A5>::type& a5; static typename meta::strip<A6>::type& a6; static typename meta::strip<A7>::type& a7; static typename meta::strip<A8>::type& a8; static typename meta::strip<A9>::type& a9; static typename meta::strip<A10>::type& a10; static typename meta::strip<A11>::type& a11; BOOST_TYPEOF_NESTED_TYPEDEF_TPL ( nested , a0 + a1 + a2 + a3 + a4 + a5 + a6 + a7 + a8 + a9 + a10 + a11) typedef typename nested::type type; }; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12)> { static typename meta::strip<A0>::type& a0; static typename meta::strip<A1>::type& a1; static typename meta::strip<A2>::type& a2; static typename meta::strip<A3>::type& a3; static typename meta::strip<A4>::type& a4; static typename meta::strip<A5>::type& a5; static typename meta::strip<A6>::type& a6; static typename meta::strip<A7>::type& a7; static typename meta::strip<A8>::type& a8; static typename meta::strip<A9>::type& a9; static typename meta::strip<A10>::type& a10; static typename meta::strip<A11>::type& a11; static typename meta::strip<A12>::type& a12; BOOST_TYPEOF_NESTED_TYPEDEF_TPL ( nested , a0 + a1 + a2 + a3 + a4 + a5 + a6 + a7 + a8 + a9 + a10 + a11 + a12) typedef typename nested::type type; }; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13)> { static typename meta::strip<A0>::type& a0; static typename meta::strip<A1>::type& a1; static typename meta::strip<A2>::type& a2; static typename meta::strip<A3>::type& a3; static typename meta::strip<A4>::type& a4; static typename meta::strip<A5>::type& a5; static typename meta::strip<A6>::type& a6; static typename meta::strip<A7>::type& a7; static typename meta::strip<A8>::type& a8; static typename meta::strip<A9>::type& a9; static typename meta::strip<A10>::type& a10; static typename meta::strip<A11>::type& a11; static typename meta::strip<A12>::type& a12; static typename meta::strip<A13>::type& a13; BOOST_TYPEOF_NESTED_TYPEDEF_TPL ( nested , a0 + a1 + a2 + a3 + a4 + a5 + a6 + a7 + a8 + a9 + a10 + a11 + a12 + a13) typedef typename nested::type type; }; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14)> { static typename meta::strip<A0>::type& a0; static typename meta::strip<A1>::type& a1; static typename meta::strip<A2>::type& a2; static typename meta::strip<A3>::type& a3; static typename meta::strip<A4>::type& a4; static typename meta::strip<A5>::type& a5; static typename meta::strip<A6>::type& a6; static typename meta::strip<A7>::type& a7; static typename meta::strip<A8>::type& a8; static typename meta::strip<A9>::type& a9; static typename meta::strip<A10>::type& a10; static typename meta::strip<A11>::type& a11; static typename meta::strip<A12>::type& a12; static typename meta::strip<A13>::type& a13; static typename meta::strip<A14>::type& a14; BOOST_TYPEOF_NESTED_TYPEDEF_TPL ( nested , a0 + a1 + a2 + a3 + a4 + a5 + a6 + a7 + a8 + a9 + a10 + a11 + a12 + a13 + a14) typedef typename nested::type type; }; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15)> { static typename meta::strip<A0>::type& a0; static typename meta::strip<A1>::type& a1; static typename meta::strip<A2>::type& a2; static typename meta::strip<A3>::type& a3; static typename meta::strip<A4>::type& a4; static typename meta::strip<A5>::type& a5; static typename meta::strip<A6>::type& a6; static typename meta::strip<A7>::type& a7; static typename meta::strip<A8>::type& a8; static typename meta::strip<A9>::type& a9; static typename meta::strip<A10>::type& a10; static typename meta::strip<A11>::type& a11; static typename meta::strip<A12>::type& a12; static typename meta::strip<A13>::type& a13; static typename meta::strip<A14>::type& a14; static typename meta::strip<A15>::type& a15; BOOST_TYPEOF_NESTED_TYPEDEF_TPL ( nested , a0 + a1 + a2 + a3 + a4 + a5 + a6 + a7 + a8 + a9 + a10 + a11 + a12 + a13 + a14 + a15) typedef typename nested::type type; }; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16)> { static typename meta::strip<A0>::type& a0; static typename meta::strip<A1>::type& a1; static typename meta::strip<A2>::type& a2; static typename meta::strip<A3>::type& a3; static typename meta::strip<A4>::type& a4; static typename meta::strip<A5>::type& a5; static typename meta::strip<A6>::type& a6; static typename meta::strip<A7>::type& a7; static typename meta::strip<A8>::type& a8; static typename meta::strip<A9>::type& a9; static typename meta::strip<A10>::type& a10; static typename meta::strip<A11>::type& a11; static typename meta::strip<A12>::type& a12; static typename meta::strip<A13>::type& a13; static typename meta::strip<A14>::type& a14; static typename meta::strip<A15>::type& a15; static typename meta::strip<A16>::type& a16; BOOST_TYPEOF_NESTED_TYPEDEF_TPL ( nested , a0 + a1 + a2 + a3 + a4 + a5 + a6 + a7 + a8 + a9 + a10 + a11 + a12 + a13 + a14 + a15 + a16) typedef typename nested::type type; }; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17)> { static typename meta::strip<A0>::type& a0; static typename meta::strip<A1>::type& a1; static typename meta::strip<A2>::type& a2; static typename meta::strip<A3>::type& a3; static typename meta::strip<A4>::type& a4; static typename meta::strip<A5>::type& a5; static typename meta::strip<A6>::type& a6; static typename meta::strip<A7>::type& a7; static typename meta::strip<A8>::type& a8; static typename meta::strip<A9>::type& a9; static typename meta::strip<A10>::type& a10; static typename meta::strip<A11>::type& a11; static typename meta::strip<A12>::type& a12; static typename meta::strip<A13>::type& a13; static typename meta::strip<A14>::type& a14; static typename meta::strip<A15>::type& a15; static typename meta::strip<A16>::type& a16; static typename meta::strip<A17>::type& a17; BOOST_TYPEOF_NESTED_TYPEDEF_TPL ( nested , a0 + a1 + a2 + a3 + a4 + a5 + a6 + a7 + a8 + a9 + a10 + a11 + a12 + a13 + a14 + a15 + a16 + a17) typedef typename nested::type type; }; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18)> { static typename meta::strip<A0>::type& a0; static typename meta::strip<A1>::type& a1; static typename meta::strip<A2>::type& a2; static typename meta::strip<A3>::type& a3; static typename meta::strip<A4>::type& a4; static typename meta::strip<A5>::type& a5; static typename meta::strip<A6>::type& a6; static typename meta::strip<A7>::type& a7; static typename meta::strip<A8>::type& a8; static typename meta::strip<A9>::type& a9; static typename meta::strip<A10>::type& a10; static typename meta::strip<A11>::type& a11; static typename meta::strip<A12>::type& a12; static typename meta::strip<A13>::type& a13; static typename meta::strip<A14>::type& a14; static typename meta::strip<A15>::type& a15; static typename meta::strip<A16>::type& a16; static typename meta::strip<A17>::type& a17; static typename meta::strip<A18>::type& a18; BOOST_TYPEOF_NESTED_TYPEDEF_TPL ( nested , a0 + a1 + a2 + a3 + a4 + a5 + a6 + a7 + a8 + a9 + a10 + a11 + a12 + a13 + a14 + a15 + a16 + a17 + a18) typedef typename nested::type type; }; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19)> { static typename meta::strip<A0>::type& a0; static typename meta::strip<A1>::type& a1; static typename meta::strip<A2>::type& a2; static typename meta::strip<A3>::type& a3; static typename meta::strip<A4>::type& a4; static typename meta::strip<A5>::type& a5; static typename meta::strip<A6>::type& a6; static typename meta::strip<A7>::type& a7; static typename meta::strip<A8>::type& a8; static typename meta::strip<A9>::type& a9; static typename meta::strip<A10>::type& a10; static typename meta::strip<A11>::type& a11; static typename meta::strip<A12>::type& a12; static typename meta::strip<A13>::type& a13; static typename meta::strip<A14>::type& a14; static typename meta::strip<A15>::type& a15; static typename meta::strip<A16>::type& a16; static typename meta::strip<A17>::type& a17; static typename meta::strip<A18>::type& a18; static typename meta::strip<A19>::type& a19; BOOST_TYPEOF_NESTED_TYPEDEF_TPL ( nested , a0 + a1 + a2 + a3 + a4 + a5 + a6 + a7 + a8 + a9 + a10 + a11 + a12 + a13 + a14 + a15 + a16 + a17 + a18 + a19) typedef typename nested::type type; }; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20)> { static typename meta::strip<A0>::type& a0; static typename meta::strip<A1>::type& a1; static typename meta::strip<A2>::type& a2; static typename meta::strip<A3>::type& a3; static typename meta::strip<A4>::type& a4; static typename meta::strip<A5>::type& a5; static typename meta::strip<A6>::type& a6; static typename meta::strip<A7>::type& a7; static typename meta::strip<A8>::type& a8; static typename meta::strip<A9>::type& a9; static typename meta::strip<A10>::type& a10; static typename meta::strip<A11>::type& a11; static typename meta::strip<A12>::type& a12; static typename meta::strip<A13>::type& a13; static typename meta::strip<A14>::type& a14; static typename meta::strip<A15>::type& a15; static typename meta::strip<A16>::type& a16; static typename meta::strip<A17>::type& a17; static typename meta::strip<A18>::type& a18; static typename meta::strip<A19>::type& a19; static typename meta::strip<A20>::type& a20; BOOST_TYPEOF_NESTED_TYPEDEF_TPL ( nested , a0 + a1 + a2 + a3 + a4 + a5 + a6 + a7 + a8 + a9 + a10 + a11 + a12 + a13 + a14 + a15 + a16 + a17 + a18 + a19 + a20) typedef typename nested::type type; }; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21)> { static typename meta::strip<A0>::type& a0; static typename meta::strip<A1>::type& a1; static typename meta::strip<A2>::type& a2; static typename meta::strip<A3>::type& a3; static typename meta::strip<A4>::type& a4; static typename meta::strip<A5>::type& a5; static typename meta::strip<A6>::type& a6; static typename meta::strip<A7>::type& a7; static typename meta::strip<A8>::type& a8; static typename meta::strip<A9>::type& a9; static typename meta::strip<A10>::type& a10; static typename meta::strip<A11>::type& a11; static typename meta::strip<A12>::type& a12; static typename meta::strip<A13>::type& a13; static typename meta::strip<A14>::type& a14; static typename meta::strip<A15>::type& a15; static typename meta::strip<A16>::type& a16; static typename meta::strip<A17>::type& a17; static typename meta::strip<A18>::type& a18; static typename meta::strip<A19>::type& a19; static typename meta::strip<A20>::type& a20; static typename meta::strip<A21>::type& a21; BOOST_TYPEOF_NESTED_TYPEDEF_TPL ( nested , a0 + a1 + a2 + a3 + a4 + a5 + a6 + a7 + a8 + a9 + a10 + a11 + a12 + a13 + a14 + a15 + a16 + a17 + a18 + a19 + a20 + a21) typedef typename nested::type type; }; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22)> { static typename meta::strip<A0>::type& a0; static typename meta::strip<A1>::type& a1; static typename meta::strip<A2>::type& a2; static typename meta::strip<A3>::type& a3; static typename meta::strip<A4>::type& a4; static typename meta::strip<A5>::type& a5; static typename meta::strip<A6>::type& a6; static typename meta::strip<A7>::type& a7; static typename meta::strip<A8>::type& a8; static typename meta::strip<A9>::type& a9; static typename meta::strip<A10>::type& a10; static typename meta::strip<A11>::type& a11; static typename meta::strip<A12>::type& a12; static typename meta::strip<A13>::type& a13; static typename meta::strip<A14>::type& a14; static typename meta::strip<A15>::type& a15; static typename meta::strip<A16>::type& a16; static typename meta::strip<A17>::type& a17; static typename meta::strip<A18>::type& a18; static typename meta::strip<A19>::type& a19; static typename meta::strip<A20>::type& a20; static typename meta::strip<A21>::type& a21; static typename meta::strip<A22>::type& a22; BOOST_TYPEOF_NESTED_TYPEDEF_TPL ( nested , a0 + a1 + a2 + a3 + a4 + a5 + a6 + a7 + a8 + a9 + a10 + a11 + a12 + a13 + a14 + a15 + a16 + a17 + a18 + a19 + a20 + a21 + a22) typedef typename nested::type type; }; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23)> { static typename meta::strip<A0>::type& a0; static typename meta::strip<A1>::type& a1; static typename meta::strip<A2>::type& a2; static typename meta::strip<A3>::type& a3; static typename meta::strip<A4>::type& a4; static typename meta::strip<A5>::type& a5; static typename meta::strip<A6>::type& a6; static typename meta::strip<A7>::type& a7; static typename meta::strip<A8>::type& a8; static typename meta::strip<A9>::type& a9; static typename meta::strip<A10>::type& a10; static typename meta::strip<A11>::type& a11; static typename meta::strip<A12>::type& a12; static typename meta::strip<A13>::type& a13; static typename meta::strip<A14>::type& a14; static typename meta::strip<A15>::type& a15; static typename meta::strip<A16>::type& a16; static typename meta::strip<A17>::type& a17; static typename meta::strip<A18>::type& a18; static typename meta::strip<A19>::type& a19; static typename meta::strip<A20>::type& a20; static typename meta::strip<A21>::type& a21; static typename meta::strip<A22>::type& a22; static typename meta::strip<A23>::type& a23; BOOST_TYPEOF_NESTED_TYPEDEF_TPL ( nested , a0 + a1 + a2 + a3 + a4 + a5 + a6 + a7 + a8 + a9 + a10 + a11 + a12 + a13 + a14 + a15 + a16 + a17 + a18 + a19 + a20 + a21 + a22 + a23) typedef typename nested::type type; }; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24)> { static typename meta::strip<A0>::type& a0; static typename meta::strip<A1>::type& a1; static typename meta::strip<A2>::type& a2; static typename meta::strip<A3>::type& a3; static typename meta::strip<A4>::type& a4; static typename meta::strip<A5>::type& a5; static typename meta::strip<A6>::type& a6; static typename meta::strip<A7>::type& a7; static typename meta::strip<A8>::type& a8; static typename meta::strip<A9>::type& a9; static typename meta::strip<A10>::type& a10; static typename meta::strip<A11>::type& a11; static typename meta::strip<A12>::type& a12; static typename meta::strip<A13>::type& a13; static typename meta::strip<A14>::type& a14; static typename meta::strip<A15>::type& a15; static typename meta::strip<A16>::type& a16; static typename meta::strip<A17>::type& a17; static typename meta::strip<A18>::type& a18; static typename meta::strip<A19>::type& a19; static typename meta::strip<A20>::type& a20; static typename meta::strip<A21>::type& a21; static typename meta::strip<A22>::type& a22; static typename meta::strip<A23>::type& a23; static typename meta::strip<A24>::type& a24; BOOST_TYPEOF_NESTED_TYPEDEF_TPL ( nested , a0 + a1 + a2 + a3 + a4 + a5 + a6 + a7 + a8 + a9 + a10 + a11 + a12 + a13 + a14 + a15 + a16 + a17 + a18 + a19 + a20 + a21 + a22 + a23 + a24) typedef typename nested::type type; }; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25)> { static typename meta::strip<A0>::type& a0; static typename meta::strip<A1>::type& a1; static typename meta::strip<A2>::type& a2; static typename meta::strip<A3>::type& a3; static typename meta::strip<A4>::type& a4; static typename meta::strip<A5>::type& a5; static typename meta::strip<A6>::type& a6; static typename meta::strip<A7>::type& a7; static typename meta::strip<A8>::type& a8; static typename meta::strip<A9>::type& a9; static typename meta::strip<A10>::type& a10; static typename meta::strip<A11>::type& a11; static typename meta::strip<A12>::type& a12; static typename meta::strip<A13>::type& a13; static typename meta::strip<A14>::type& a14; static typename meta::strip<A15>::type& a15; static typename meta::strip<A16>::type& a16; static typename meta::strip<A17>::type& a17; static typename meta::strip<A18>::type& a18; static typename meta::strip<A19>::type& a19; static typename meta::strip<A20>::type& a20; static typename meta::strip<A21>::type& a21; static typename meta::strip<A22>::type& a22; static typename meta::strip<A23>::type& a23; static typename meta::strip<A24>::type& a24; static typename meta::strip<A25>::type& a25; BOOST_TYPEOF_NESTED_TYPEDEF_TPL ( nested , a0 + a1 + a2 + a3 + a4 + a5 + a6 + a7 + a8 + a9 + a10 + a11 + a12 + a13 + a14 + a15 + a16 + a17 + a18 + a19 + a20 + a21 + a22 + a23 + a24 + a25) typedef typename nested::type type; }; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26)> { static typename meta::strip<A0>::type& a0; static typename meta::strip<A1>::type& a1; static typename meta::strip<A2>::type& a2; static typename meta::strip<A3>::type& a3; static typename meta::strip<A4>::type& a4; static typename meta::strip<A5>::type& a5; static typename meta::strip<A6>::type& a6; static typename meta::strip<A7>::type& a7; static typename meta::strip<A8>::type& a8; static typename meta::strip<A9>::type& a9; static typename meta::strip<A10>::type& a10; static typename meta::strip<A11>::type& a11; static typename meta::strip<A12>::type& a12; static typename meta::strip<A13>::type& a13; static typename meta::strip<A14>::type& a14; static typename meta::strip<A15>::type& a15; static typename meta::strip<A16>::type& a16; static typename meta::strip<A17>::type& a17; static typename meta::strip<A18>::type& a18; static typename meta::strip<A19>::type& a19; static typename meta::strip<A20>::type& a20; static typename meta::strip<A21>::type& a21; static typename meta::strip<A22>::type& a22; static typename meta::strip<A23>::type& a23; static typename meta::strip<A24>::type& a24; static typename meta::strip<A25>::type& a25; static typename meta::strip<A26>::type& a26; BOOST_TYPEOF_NESTED_TYPEDEF_TPL ( nested , a0 + a1 + a2 + a3 + a4 + a5 + a6 + a7 + a8 + a9 + a10 + a11 + a12 + a13 + a14 + a15 + a16 + a17 + a18 + a19 + a20 + a21 + a22 + a23 + a24 + a25 + a26) typedef typename nested::type type; }; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27)> { static typename meta::strip<A0>::type& a0; static typename meta::strip<A1>::type& a1; static typename meta::strip<A2>::type& a2; static typename meta::strip<A3>::type& a3; static typename meta::strip<A4>::type& a4; static typename meta::strip<A5>::type& a5; static typename meta::strip<A6>::type& a6; static typename meta::strip<A7>::type& a7; static typename meta::strip<A8>::type& a8; static typename meta::strip<A9>::type& a9; static typename meta::strip<A10>::type& a10; static typename meta::strip<A11>::type& a11; static typename meta::strip<A12>::type& a12; static typename meta::strip<A13>::type& a13; static typename meta::strip<A14>::type& a14; static typename meta::strip<A15>::type& a15; static typename meta::strip<A16>::type& a16; static typename meta::strip<A17>::type& a17; static typename meta::strip<A18>::type& a18; static typename meta::strip<A19>::type& a19; static typename meta::strip<A20>::type& a20; static typename meta::strip<A21>::type& a21; static typename meta::strip<A22>::type& a22; static typename meta::strip<A23>::type& a23; static typename meta::strip<A24>::type& a24; static typename meta::strip<A25>::type& a25; static typename meta::strip<A26>::type& a26; static typename meta::strip<A27>::type& a27; BOOST_TYPEOF_NESTED_TYPEDEF_TPL ( nested , a0 + a1 + a2 + a3 + a4 + a5 + a6 + a7 + a8 + a9 + a10 + a11 + a12 + a13 + a14 + a15 + a16 + a17 + a18 + a19 + a20 + a21 + a22 + a23 + a24 + a25 + a26 + a27) typedef typename nested::type type; }; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28)> { static typename meta::strip<A0>::type& a0; static typename meta::strip<A1>::type& a1; static typename meta::strip<A2>::type& a2; static typename meta::strip<A3>::type& a3; static typename meta::strip<A4>::type& a4; static typename meta::strip<A5>::type& a5; static typename meta::strip<A6>::type& a6; static typename meta::strip<A7>::type& a7; static typename meta::strip<A8>::type& a8; static typename meta::strip<A9>::type& a9; static typename meta::strip<A10>::type& a10; static typename meta::strip<A11>::type& a11; static typename meta::strip<A12>::type& a12; static typename meta::strip<A13>::type& a13; static typename meta::strip<A14>::type& a14; static typename meta::strip<A15>::type& a15; static typename meta::strip<A16>::type& a16; static typename meta::strip<A17>::type& a17; static typename meta::strip<A18>::type& a18; static typename meta::strip<A19>::type& a19; static typename meta::strip<A20>::type& a20; static typename meta::strip<A21>::type& a21; static typename meta::strip<A22>::type& a22; static typename meta::strip<A23>::type& a23; static typename meta::strip<A24>::type& a24; static typename meta::strip<A25>::type& a25; static typename meta::strip<A26>::type& a26; static typename meta::strip<A27>::type& a27; static typename meta::strip<A28>::type& a28; BOOST_TYPEOF_NESTED_TYPEDEF_TPL ( nested , a0 + a1 + a2 + a3 + a4 + a5 + a6 + a7 + a8 + a9 + a10 + a11 + a12 + a13 + a14 + a15 + a16 + a17 + a18 + a19 + a20 + a21 + a22 + a23 + a24 + a25 + a26 + a27 + a28) typedef typename nested::type type; }; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29)> { static typename meta::strip<A0>::type& a0; static typename meta::strip<A1>::type& a1; static typename meta::strip<A2>::type& a2; static typename meta::strip<A3>::type& a3; static typename meta::strip<A4>::type& a4; static typename meta::strip<A5>::type& a5; static typename meta::strip<A6>::type& a6; static typename meta::strip<A7>::type& a7; static typename meta::strip<A8>::type& a8; static typename meta::strip<A9>::type& a9; static typename meta::strip<A10>::type& a10; static typename meta::strip<A11>::type& a11; static typename meta::strip<A12>::type& a12; static typename meta::strip<A13>::type& a13; static typename meta::strip<A14>::type& a14; static typename meta::strip<A15>::type& a15; static typename meta::strip<A16>::type& a16; static typename meta::strip<A17>::type& a17; static typename meta::strip<A18>::type& a18; static typename meta::strip<A19>::type& a19; static typename meta::strip<A20>::type& a20; static typename meta::strip<A21>::type& a21; static typename meta::strip<A22>::type& a22; static typename meta::strip<A23>::type& a23; static typename meta::strip<A24>::type& a24; static typename meta::strip<A25>::type& a25; static typename meta::strip<A26>::type& a26; static typename meta::strip<A27>::type& a27; static typename meta::strip<A28>::type& a28; static typename meta::strip<A29>::type& a29; BOOST_TYPEOF_NESTED_TYPEDEF_TPL ( nested , a0 + a1 + a2 + a3 + a4 + a5 + a6 + a7 + a8 + a9 + a10 + a11 + a12 + a13 + a14 + a15 + a16 + a17 + a18 + a19 + a20 + a21 + a22 + a23 + a24 + a25 + a26 + a27 + a28 + a29) typedef typename nested::type type; }; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30)> { static typename meta::strip<A0>::type& a0; static typename meta::strip<A1>::type& a1; static typename meta::strip<A2>::type& a2; static typename meta::strip<A3>::type& a3; static typename meta::strip<A4>::type& a4; static typename meta::strip<A5>::type& a5; static typename meta::strip<A6>::type& a6; static typename meta::strip<A7>::type& a7; static typename meta::strip<A8>::type& a8; static typename meta::strip<A9>::type& a9; static typename meta::strip<A10>::type& a10; static typename meta::strip<A11>::type& a11; static typename meta::strip<A12>::type& a12; static typename meta::strip<A13>::type& a13; static typename meta::strip<A14>::type& a14; static typename meta::strip<A15>::type& a15; static typename meta::strip<A16>::type& a16; static typename meta::strip<A17>::type& a17; static typename meta::strip<A18>::type& a18; static typename meta::strip<A19>::type& a19; static typename meta::strip<A20>::type& a20; static typename meta::strip<A21>::type& a21; static typename meta::strip<A22>::type& a22; static typename meta::strip<A23>::type& a23; static typename meta::strip<A24>::type& a24; static typename meta::strip<A25>::type& a25; static typename meta::strip<A26>::type& a26; static typename meta::strip<A27>::type& a27; static typename meta::strip<A28>::type& a28; static typename meta::strip<A29>::type& a29; static typename meta::strip<A30>::type& a30; BOOST_TYPEOF_NESTED_TYPEDEF_TPL ( nested , a0 + a1 + a2 + a3 + a4 + a5 + a6 + a7 + a8 + a9 + a10 + a11 + a12 + a13 + a14 + a15 + a16 + a17 + a18 + a19 + a20 + a21 + a22 + a23 + a24 + a25 + a26 + a27 + a28 + a29 + a30) typedef typename nested::type type; }; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31)> { static typename meta::strip<A0>::type& a0; static typename meta::strip<A1>::type& a1; static typename meta::strip<A2>::type& a2; static typename meta::strip<A3>::type& a3; static typename meta::strip<A4>::type& a4; static typename meta::strip<A5>::type& a5; static typename meta::strip<A6>::type& a6; static typename meta::strip<A7>::type& a7; static typename meta::strip<A8>::type& a8; static typename meta::strip<A9>::type& a9; static typename meta::strip<A10>::type& a10; static typename meta::strip<A11>::type& a11; static typename meta::strip<A12>::type& a12; static typename meta::strip<A13>::type& a13; static typename meta::strip<A14>::type& a14; static typename meta::strip<A15>::type& a15; static typename meta::strip<A16>::type& a16; static typename meta::strip<A17>::type& a17; static typename meta::strip<A18>::type& a18; static typename meta::strip<A19>::type& a19; static typename meta::strip<A20>::type& a20; static typename meta::strip<A21>::type& a21; static typename meta::strip<A22>::type& a22; static typename meta::strip<A23>::type& a23; static typename meta::strip<A24>::type& a24; static typename meta::strip<A25>::type& a25; static typename meta::strip<A26>::type& a26; static typename meta::strip<A27>::type& a27; static typename meta::strip<A28>::type& a28; static typename meta::strip<A29>::type& a29; static typename meta::strip<A30>::type& a30; static typename meta::strip<A31>::type& a31; BOOST_TYPEOF_NESTED_TYPEDEF_TPL ( nested , a0 + a1 + a2 + a3 + a4 + a5 + a6 + a7 + a8 + a9 + a10 + a11 + a12 + a13 + a14 + a15 + a16 + a17 + a18 + a19 + a20 + a21 + a22 + a23 + a24 + a25 + a26 + a27 + a28 + a29 + a30 + a31) typedef typename nested::type type; }; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32)> { static typename meta::strip<A0>::type& a0; static typename meta::strip<A1>::type& a1; static typename meta::strip<A2>::type& a2; static typename meta::strip<A3>::type& a3; static typename meta::strip<A4>::type& a4; static typename meta::strip<A5>::type& a5; static typename meta::strip<A6>::type& a6; static typename meta::strip<A7>::type& a7; static typename meta::strip<A8>::type& a8; static typename meta::strip<A9>::type& a9; static typename meta::strip<A10>::type& a10; static typename meta::strip<A11>::type& a11; static typename meta::strip<A12>::type& a12; static typename meta::strip<A13>::type& a13; static typename meta::strip<A14>::type& a14; static typename meta::strip<A15>::type& a15; static typename meta::strip<A16>::type& a16; static typename meta::strip<A17>::type& a17; static typename meta::strip<A18>::type& a18; static typename meta::strip<A19>::type& a19; static typename meta::strip<A20>::type& a20; static typename meta::strip<A21>::type& a21; static typename meta::strip<A22>::type& a22; static typename meta::strip<A23>::type& a23; static typename meta::strip<A24>::type& a24; static typename meta::strip<A25>::type& a25; static typename meta::strip<A26>::type& a26; static typename meta::strip<A27>::type& a27; static typename meta::strip<A28>::type& a28; static typename meta::strip<A29>::type& a29; static typename meta::strip<A30>::type& a30; static typename meta::strip<A31>::type& a31; static typename meta::strip<A32>::type& a32; BOOST_TYPEOF_NESTED_TYPEDEF_TPL ( nested , a0 + a1 + a2 + a3 + a4 + a5 + a6 + a7 + a8 + a9 + a10 + a11 + a12 + a13 + a14 + a15 + a16 + a17 + a18 + a19 + a20 + a21 + a22 + a23 + a24 + a25 + a26 + a27 + a28 + a29 + a30 + a31 + a32) typedef typename nested::type type; }; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33)> { static typename meta::strip<A0>::type& a0; static typename meta::strip<A1>::type& a1; static typename meta::strip<A2>::type& a2; static typename meta::strip<A3>::type& a3; static typename meta::strip<A4>::type& a4; static typename meta::strip<A5>::type& a5; static typename meta::strip<A6>::type& a6; static typename meta::strip<A7>::type& a7; static typename meta::strip<A8>::type& a8; static typename meta::strip<A9>::type& a9; static typename meta::strip<A10>::type& a10; static typename meta::strip<A11>::type& a11; static typename meta::strip<A12>::type& a12; static typename meta::strip<A13>::type& a13; static typename meta::strip<A14>::type& a14; static typename meta::strip<A15>::type& a15; static typename meta::strip<A16>::type& a16; static typename meta::strip<A17>::type& a17; static typename meta::strip<A18>::type& a18; static typename meta::strip<A19>::type& a19; static typename meta::strip<A20>::type& a20; static typename meta::strip<A21>::type& a21; static typename meta::strip<A22>::type& a22; static typename meta::strip<A23>::type& a23; static typename meta::strip<A24>::type& a24; static typename meta::strip<A25>::type& a25; static typename meta::strip<A26>::type& a26; static typename meta::strip<A27>::type& a27; static typename meta::strip<A28>::type& a28; static typename meta::strip<A29>::type& a29; static typename meta::strip<A30>::type& a30; static typename meta::strip<A31>::type& a31; static typename meta::strip<A32>::type& a32; static typename meta::strip<A33>::type& a33; BOOST_TYPEOF_NESTED_TYPEDEF_TPL ( nested , a0 + a1 + a2 + a3 + a4 + a5 + a6 + a7 + a8 + a9 + a10 + a11 + a12 + a13 + a14 + a15 + a16 + a17 + a18 + a19 + a20 + a21 + a22 + a23 + a24 + a25 + a26 + a27 + a28 + a29 + a30 + a31 + a32 + a33) typedef typename nested::type type; }; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34)> { static typename meta::strip<A0>::type& a0; static typename meta::strip<A1>::type& a1; static typename meta::strip<A2>::type& a2; static typename meta::strip<A3>::type& a3; static typename meta::strip<A4>::type& a4; static typename meta::strip<A5>::type& a5; static typename meta::strip<A6>::type& a6; static typename meta::strip<A7>::type& a7; static typename meta::strip<A8>::type& a8; static typename meta::strip<A9>::type& a9; static typename meta::strip<A10>::type& a10; static typename meta::strip<A11>::type& a11; static typename meta::strip<A12>::type& a12; static typename meta::strip<A13>::type& a13; static typename meta::strip<A14>::type& a14; static typename meta::strip<A15>::type& a15; static typename meta::strip<A16>::type& a16; static typename meta::strip<A17>::type& a17; static typename meta::strip<A18>::type& a18; static typename meta::strip<A19>::type& a19; static typename meta::strip<A20>::type& a20; static typename meta::strip<A21>::type& a21; static typename meta::strip<A22>::type& a22; static typename meta::strip<A23>::type& a23; static typename meta::strip<A24>::type& a24; static typename meta::strip<A25>::type& a25; static typename meta::strip<A26>::type& a26; static typename meta::strip<A27>::type& a27; static typename meta::strip<A28>::type& a28; static typename meta::strip<A29>::type& a29; static typename meta::strip<A30>::type& a30; static typename meta::strip<A31>::type& a31; static typename meta::strip<A32>::type& a32; static typename meta::strip<A33>::type& a33; static typename meta::strip<A34>::type& a34; BOOST_TYPEOF_NESTED_TYPEDEF_TPL ( nested , a0 + a1 + a2 + a3 + a4 + a5 + a6 + a7 + a8 + a9 + a10 + a11 + a12 + a13 + a14 + a15 + a16 + a17 + a18 + a19 + a20 + a21 + a22 + a23 + a24 + a25 + a26 + a27 + a28 + a29 + a30 + a31 + a32 + a33 + a34) typedef typename nested::type type; }; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35)> { static typename meta::strip<A0>::type& a0; static typename meta::strip<A1>::type& a1; static typename meta::strip<A2>::type& a2; static typename meta::strip<A3>::type& a3; static typename meta::strip<A4>::type& a4; static typename meta::strip<A5>::type& a5; static typename meta::strip<A6>::type& a6; static typename meta::strip<A7>::type& a7; static typename meta::strip<A8>::type& a8; static typename meta::strip<A9>::type& a9; static typename meta::strip<A10>::type& a10; static typename meta::strip<A11>::type& a11; static typename meta::strip<A12>::type& a12; static typename meta::strip<A13>::type& a13; static typename meta::strip<A14>::type& a14; static typename meta::strip<A15>::type& a15; static typename meta::strip<A16>::type& a16; static typename meta::strip<A17>::type& a17; static typename meta::strip<A18>::type& a18; static typename meta::strip<A19>::type& a19; static typename meta::strip<A20>::type& a20; static typename meta::strip<A21>::type& a21; static typename meta::strip<A22>::type& a22; static typename meta::strip<A23>::type& a23; static typename meta::strip<A24>::type& a24; static typename meta::strip<A25>::type& a25; static typename meta::strip<A26>::type& a26; static typename meta::strip<A27>::type& a27; static typename meta::strip<A28>::type& a28; static typename meta::strip<A29>::type& a29; static typename meta::strip<A30>::type& a30; static typename meta::strip<A31>::type& a31; static typename meta::strip<A32>::type& a32; static typename meta::strip<A33>::type& a33; static typename meta::strip<A34>::type& a34; static typename meta::strip<A35>::type& a35; BOOST_TYPEOF_NESTED_TYPEDEF_TPL ( nested , a0 + a1 + a2 + a3 + a4 + a5 + a6 + a7 + a8 + a9 + a10 + a11 + a12 + a13 + a14 + a15 + a16 + a17 + a18 + a19 + a20 + a21 + a22 + a23 + a24 + a25 + a26 + a27 + a28 + a29 + a30 + a31 + a32 + a33 + a34 + a35) typedef typename nested::type type; }; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36)> { static typename meta::strip<A0>::type& a0; static typename meta::strip<A1>::type& a1; static typename meta::strip<A2>::type& a2; static typename meta::strip<A3>::type& a3; static typename meta::strip<A4>::type& a4; static typename meta::strip<A5>::type& a5; static typename meta::strip<A6>::type& a6; static typename meta::strip<A7>::type& a7; static typename meta::strip<A8>::type& a8; static typename meta::strip<A9>::type& a9; static typename meta::strip<A10>::type& a10; static typename meta::strip<A11>::type& a11; static typename meta::strip<A12>::type& a12; static typename meta::strip<A13>::type& a13; static typename meta::strip<A14>::type& a14; static typename meta::strip<A15>::type& a15; static typename meta::strip<A16>::type& a16; static typename meta::strip<A17>::type& a17; static typename meta::strip<A18>::type& a18; static typename meta::strip<A19>::type& a19; static typename meta::strip<A20>::type& a20; static typename meta::strip<A21>::type& a21; static typename meta::strip<A22>::type& a22; static typename meta::strip<A23>::type& a23; static typename meta::strip<A24>::type& a24; static typename meta::strip<A25>::type& a25; static typename meta::strip<A26>::type& a26; static typename meta::strip<A27>::type& a27; static typename meta::strip<A28>::type& a28; static typename meta::strip<A29>::type& a29; static typename meta::strip<A30>::type& a30; static typename meta::strip<A31>::type& a31; static typename meta::strip<A32>::type& a32; static typename meta::strip<A33>::type& a33; static typename meta::strip<A34>::type& a34; static typename meta::strip<A35>::type& a35; static typename meta::strip<A36>::type& a36; BOOST_TYPEOF_NESTED_TYPEDEF_TPL ( nested , a0 + a1 + a2 + a3 + a4 + a5 + a6 + a7 + a8 + a9 + a10 + a11 + a12 + a13 + a14 + a15 + a16 + a17 + a18 + a19 + a20 + a21 + a22 + a23 + a24 + a25 + a26 + a27 + a28 + a29 + a30 + a31 + a32 + a33 + a34 + a35 + a36) typedef typename nested::type type; }; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37)> { static typename meta::strip<A0>::type& a0; static typename meta::strip<A1>::type& a1; static typename meta::strip<A2>::type& a2; static typename meta::strip<A3>::type& a3; static typename meta::strip<A4>::type& a4; static typename meta::strip<A5>::type& a5; static typename meta::strip<A6>::type& a6; static typename meta::strip<A7>::type& a7; static typename meta::strip<A8>::type& a8; static typename meta::strip<A9>::type& a9; static typename meta::strip<A10>::type& a10; static typename meta::strip<A11>::type& a11; static typename meta::strip<A12>::type& a12; static typename meta::strip<A13>::type& a13; static typename meta::strip<A14>::type& a14; static typename meta::strip<A15>::type& a15; static typename meta::strip<A16>::type& a16; static typename meta::strip<A17>::type& a17; static typename meta::strip<A18>::type& a18; static typename meta::strip<A19>::type& a19; static typename meta::strip<A20>::type& a20; static typename meta::strip<A21>::type& a21; static typename meta::strip<A22>::type& a22; static typename meta::strip<A23>::type& a23; static typename meta::strip<A24>::type& a24; static typename meta::strip<A25>::type& a25; static typename meta::strip<A26>::type& a26; static typename meta::strip<A27>::type& a27; static typename meta::strip<A28>::type& a28; static typename meta::strip<A29>::type& a29; static typename meta::strip<A30>::type& a30; static typename meta::strip<A31>::type& a31; static typename meta::strip<A32>::type& a32; static typename meta::strip<A33>::type& a33; static typename meta::strip<A34>::type& a34; static typename meta::strip<A35>::type& a35; static typename meta::strip<A36>::type& a36; static typename meta::strip<A37>::type& a37; BOOST_TYPEOF_NESTED_TYPEDEF_TPL ( nested , a0 + a1 + a2 + a3 + a4 + a5 + a6 + a7 + a8 + a9 + a10 + a11 + a12 + a13 + a14 + a15 + a16 + a17 + a18 + a19 + a20 + a21 + a22 + a23 + a24 + a25 + a26 + a27 + a28 + a29 + a30 + a31 + a32 + a33 + a34 + a35 + a36 + a37) typedef typename nested::type type; }; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38)> { static typename meta::strip<A0>::type& a0; static typename meta::strip<A1>::type& a1; static typename meta::strip<A2>::type& a2; static typename meta::strip<A3>::type& a3; static typename meta::strip<A4>::type& a4; static typename meta::strip<A5>::type& a5; static typename meta::strip<A6>::type& a6; static typename meta::strip<A7>::type& a7; static typename meta::strip<A8>::type& a8; static typename meta::strip<A9>::type& a9; static typename meta::strip<A10>::type& a10; static typename meta::strip<A11>::type& a11; static typename meta::strip<A12>::type& a12; static typename meta::strip<A13>::type& a13; static typename meta::strip<A14>::type& a14; static typename meta::strip<A15>::type& a15; static typename meta::strip<A16>::type& a16; static typename meta::strip<A17>::type& a17; static typename meta::strip<A18>::type& a18; static typename meta::strip<A19>::type& a19; static typename meta::strip<A20>::type& a20; static typename meta::strip<A21>::type& a21; static typename meta::strip<A22>::type& a22; static typename meta::strip<A23>::type& a23; static typename meta::strip<A24>::type& a24; static typename meta::strip<A25>::type& a25; static typename meta::strip<A26>::type& a26; static typename meta::strip<A27>::type& a27; static typename meta::strip<A28>::type& a28; static typename meta::strip<A29>::type& a29; static typename meta::strip<A30>::type& a30; static typename meta::strip<A31>::type& a31; static typename meta::strip<A32>::type& a32; static typename meta::strip<A33>::type& a33; static typename meta::strip<A34>::type& a34; static typename meta::strip<A35>::type& a35; static typename meta::strip<A36>::type& a36; static typename meta::strip<A37>::type& a37; static typename meta::strip<A38>::type& a38; BOOST_TYPEOF_NESTED_TYPEDEF_TPL ( nested , a0 + a1 + a2 + a3 + a4 + a5 + a6 + a7 + a8 + a9 + a10 + a11 + a12 + a13 + a14 + a15 + a16 + a17 + a18 + a19 + a20 + a21 + a22 + a23 + a24 + a25 + a26 + a27 + a28 + a29 + a30 + a31 + a32 + a33 + a34 + a35 + a36 + a37 + a38) typedef typename nested::type type; }; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39)> { static typename meta::strip<A0>::type& a0; static typename meta::strip<A1>::type& a1; static typename meta::strip<A2>::type& a2; static typename meta::strip<A3>::type& a3; static typename meta::strip<A4>::type& a4; static typename meta::strip<A5>::type& a5; static typename meta::strip<A6>::type& a6; static typename meta::strip<A7>::type& a7; static typename meta::strip<A8>::type& a8; static typename meta::strip<A9>::type& a9; static typename meta::strip<A10>::type& a10; static typename meta::strip<A11>::type& a11; static typename meta::strip<A12>::type& a12; static typename meta::strip<A13>::type& a13; static typename meta::strip<A14>::type& a14; static typename meta::strip<A15>::type& a15; static typename meta::strip<A16>::type& a16; static typename meta::strip<A17>::type& a17; static typename meta::strip<A18>::type& a18; static typename meta::strip<A19>::type& a19; static typename meta::strip<A20>::type& a20; static typename meta::strip<A21>::type& a21; static typename meta::strip<A22>::type& a22; static typename meta::strip<A23>::type& a23; static typename meta::strip<A24>::type& a24; static typename meta::strip<A25>::type& a25; static typename meta::strip<A26>::type& a26; static typename meta::strip<A27>::type& a27; static typename meta::strip<A28>::type& a28; static typename meta::strip<A29>::type& a29; static typename meta::strip<A30>::type& a30; static typename meta::strip<A31>::type& a31; static typename meta::strip<A32>::type& a32; static typename meta::strip<A33>::type& a33; static typename meta::strip<A34>::type& a34; static typename meta::strip<A35>::type& a35; static typename meta::strip<A36>::type& a36; static typename meta::strip<A37>::type& a37; static typename meta::strip<A38>::type& a38; static typename meta::strip<A39>::type& a39; BOOST_TYPEOF_NESTED_TYPEDEF_TPL ( nested , a0 + a1 + a2 + a3 + a4 + a5 + a6 + a7 + a8 + a9 + a10 + a11 + a12 + a13 + a14 + a15 + a16 + a17 + a18 + a19 + a20 + a21 + a22 + a23 + a24 + a25 + a26 + a27 + a28 + a29 + a30 + a31 + a32 + a33 + a34 + a35 + a36 + a37 + a38 + a39) typedef typename nested::type type; }; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40)> { static typename meta::strip<A0>::type& a0; static typename meta::strip<A1>::type& a1; static typename meta::strip<A2>::type& a2; static typename meta::strip<A3>::type& a3; static typename meta::strip<A4>::type& a4; static typename meta::strip<A5>::type& a5; static typename meta::strip<A6>::type& a6; static typename meta::strip<A7>::type& a7; static typename meta::strip<A8>::type& a8; static typename meta::strip<A9>::type& a9; static typename meta::strip<A10>::type& a10; static typename meta::strip<A11>::type& a11; static typename meta::strip<A12>::type& a12; static typename meta::strip<A13>::type& a13; static typename meta::strip<A14>::type& a14; static typename meta::strip<A15>::type& a15; static typename meta::strip<A16>::type& a16; static typename meta::strip<A17>::type& a17; static typename meta::strip<A18>::type& a18; static typename meta::strip<A19>::type& a19; static typename meta::strip<A20>::type& a20; static typename meta::strip<A21>::type& a21; static typename meta::strip<A22>::type& a22; static typename meta::strip<A23>::type& a23; static typename meta::strip<A24>::type& a24; static typename meta::strip<A25>::type& a25; static typename meta::strip<A26>::type& a26; static typename meta::strip<A27>::type& a27; static typename meta::strip<A28>::type& a28; static typename meta::strip<A29>::type& a29; static typename meta::strip<A30>::type& a30; static typename meta::strip<A31>::type& a31; static typename meta::strip<A32>::type& a32; static typename meta::strip<A33>::type& a33; static typename meta::strip<A34>::type& a34; static typename meta::strip<A35>::type& a35; static typename meta::strip<A36>::type& a36; static typename meta::strip<A37>::type& a37; static typename meta::strip<A38>::type& a38; static typename meta::strip<A39>::type& a39; static typename meta::strip<A40>::type& a40; BOOST_TYPEOF_NESTED_TYPEDEF_TPL ( nested , a0 + a1 + a2 + a3 + a4 + a5 + a6 + a7 + a8 + a9 + a10 + a11 + a12 + a13 + a14 + a15 + a16 + a17 + a18 + a19 + a20 + a21 + a22 + a23 + a24 + a25 + a26 + a27 + a28 + a29 + a30 + a31 + a32 + a33 + a34 + a35 + a36 + a37 + a38 + a39 + a40) typedef typename nested::type type; }; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41)> { static typename meta::strip<A0>::type& a0; static typename meta::strip<A1>::type& a1; static typename meta::strip<A2>::type& a2; static typename meta::strip<A3>::type& a3; static typename meta::strip<A4>::type& a4; static typename meta::strip<A5>::type& a5; static typename meta::strip<A6>::type& a6; static typename meta::strip<A7>::type& a7; static typename meta::strip<A8>::type& a8; static typename meta::strip<A9>::type& a9; static typename meta::strip<A10>::type& a10; static typename meta::strip<A11>::type& a11; static typename meta::strip<A12>::type& a12; static typename meta::strip<A13>::type& a13; static typename meta::strip<A14>::type& a14; static typename meta::strip<A15>::type& a15; static typename meta::strip<A16>::type& a16; static typename meta::strip<A17>::type& a17; static typename meta::strip<A18>::type& a18; static typename meta::strip<A19>::type& a19; static typename meta::strip<A20>::type& a20; static typename meta::strip<A21>::type& a21; static typename meta::strip<A22>::type& a22; static typename meta::strip<A23>::type& a23; static typename meta::strip<A24>::type& a24; static typename meta::strip<A25>::type& a25; static typename meta::strip<A26>::type& a26; static typename meta::strip<A27>::type& a27; static typename meta::strip<A28>::type& a28; static typename meta::strip<A29>::type& a29; static typename meta::strip<A30>::type& a30; static typename meta::strip<A31>::type& a31; static typename meta::strip<A32>::type& a32; static typename meta::strip<A33>::type& a33; static typename meta::strip<A34>::type& a34; static typename meta::strip<A35>::type& a35; static typename meta::strip<A36>::type& a36; static typename meta::strip<A37>::type& a37; static typename meta::strip<A38>::type& a38; static typename meta::strip<A39>::type& a39; static typename meta::strip<A40>::type& a40; static typename meta::strip<A41>::type& a41; BOOST_TYPEOF_NESTED_TYPEDEF_TPL ( nested , a0 + a1 + a2 + a3 + a4 + a5 + a6 + a7 + a8 + a9 + a10 + a11 + a12 + a13 + a14 + a15 + a16 + a17 + a18 + a19 + a20 + a21 + a22 + a23 + a24 + a25 + a26 + a27 + a28 + a29 + a30 + a31 + a32 + a33 + a34 + a35 + a36 + a37 + a38 + a39 + a40 + a41) typedef typename nested::type type; }; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42)> { static typename meta::strip<A0>::type& a0; static typename meta::strip<A1>::type& a1; static typename meta::strip<A2>::type& a2; static typename meta::strip<A3>::type& a3; static typename meta::strip<A4>::type& a4; static typename meta::strip<A5>::type& a5; static typename meta::strip<A6>::type& a6; static typename meta::strip<A7>::type& a7; static typename meta::strip<A8>::type& a8; static typename meta::strip<A9>::type& a9; static typename meta::strip<A10>::type& a10; static typename meta::strip<A11>::type& a11; static typename meta::strip<A12>::type& a12; static typename meta::strip<A13>::type& a13; static typename meta::strip<A14>::type& a14; static typename meta::strip<A15>::type& a15; static typename meta::strip<A16>::type& a16; static typename meta::strip<A17>::type& a17; static typename meta::strip<A18>::type& a18; static typename meta::strip<A19>::type& a19; static typename meta::strip<A20>::type& a20; static typename meta::strip<A21>::type& a21; static typename meta::strip<A22>::type& a22; static typename meta::strip<A23>::type& a23; static typename meta::strip<A24>::type& a24; static typename meta::strip<A25>::type& a25; static typename meta::strip<A26>::type& a26; static typename meta::strip<A27>::type& a27; static typename meta::strip<A28>::type& a28; static typename meta::strip<A29>::type& a29; static typename meta::strip<A30>::type& a30; static typename meta::strip<A31>::type& a31; static typename meta::strip<A32>::type& a32; static typename meta::strip<A33>::type& a33; static typename meta::strip<A34>::type& a34; static typename meta::strip<A35>::type& a35; static typename meta::strip<A36>::type& a36; static typename meta::strip<A37>::type& a37; static typename meta::strip<A38>::type& a38; static typename meta::strip<A39>::type& a39; static typename meta::strip<A40>::type& a40; static typename meta::strip<A41>::type& a41; static typename meta::strip<A42>::type& a42; BOOST_TYPEOF_NESTED_TYPEDEF_TPL ( nested , a0 + a1 + a2 + a3 + a4 + a5 + a6 + a7 + a8 + a9 + a10 + a11 + a12 + a13 + a14 + a15 + a16 + a17 + a18 + a19 + a20 + a21 + a22 + a23 + a24 + a25 + a26 + a27 + a28 + a29 + a30 + a31 + a32 + a33 + a34 + a35 + a36 + a37 + a38 + a39 + a40 + a41 + a42) typedef typename nested::type type; }; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43)> { static typename meta::strip<A0>::type& a0; static typename meta::strip<A1>::type& a1; static typename meta::strip<A2>::type& a2; static typename meta::strip<A3>::type& a3; static typename meta::strip<A4>::type& a4; static typename meta::strip<A5>::type& a5; static typename meta::strip<A6>::type& a6; static typename meta::strip<A7>::type& a7; static typename meta::strip<A8>::type& a8; static typename meta::strip<A9>::type& a9; static typename meta::strip<A10>::type& a10; static typename meta::strip<A11>::type& a11; static typename meta::strip<A12>::type& a12; static typename meta::strip<A13>::type& a13; static typename meta::strip<A14>::type& a14; static typename meta::strip<A15>::type& a15; static typename meta::strip<A16>::type& a16; static typename meta::strip<A17>::type& a17; static typename meta::strip<A18>::type& a18; static typename meta::strip<A19>::type& a19; static typename meta::strip<A20>::type& a20; static typename meta::strip<A21>::type& a21; static typename meta::strip<A22>::type& a22; static typename meta::strip<A23>::type& a23; static typename meta::strip<A24>::type& a24; static typename meta::strip<A25>::type& a25; static typename meta::strip<A26>::type& a26; static typename meta::strip<A27>::type& a27; static typename meta::strip<A28>::type& a28; static typename meta::strip<A29>::type& a29; static typename meta::strip<A30>::type& a30; static typename meta::strip<A31>::type& a31; static typename meta::strip<A32>::type& a32; static typename meta::strip<A33>::type& a33; static typename meta::strip<A34>::type& a34; static typename meta::strip<A35>::type& a35; static typename meta::strip<A36>::type& a36; static typename meta::strip<A37>::type& a37; static typename meta::strip<A38>::type& a38; static typename meta::strip<A39>::type& a39; static typename meta::strip<A40>::type& a40; static typename meta::strip<A41>::type& a41; static typename meta::strip<A42>::type& a42; static typename meta::strip<A43>::type& a43; BOOST_TYPEOF_NESTED_TYPEDEF_TPL ( nested , a0 + a1 + a2 + a3 + a4 + a5 + a6 + a7 + a8 + a9 + a10 + a11 + a12 + a13 + a14 + a15 + a16 + a17 + a18 + a19 + a20 + a21 + a22 + a23 + a24 + a25 + a26 + a27 + a28 + a29 + a30 + a31 + a32 + a33 + a34 + a35 + a36 + a37 + a38 + a39 + a40 + a41 + a42 + a43) typedef typename nested::type type; }; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44)> { static typename meta::strip<A0>::type& a0; static typename meta::strip<A1>::type& a1; static typename meta::strip<A2>::type& a2; static typename meta::strip<A3>::type& a3; static typename meta::strip<A4>::type& a4; static typename meta::strip<A5>::type& a5; static typename meta::strip<A6>::type& a6; static typename meta::strip<A7>::type& a7; static typename meta::strip<A8>::type& a8; static typename meta::strip<A9>::type& a9; static typename meta::strip<A10>::type& a10; static typename meta::strip<A11>::type& a11; static typename meta::strip<A12>::type& a12; static typename meta::strip<A13>::type& a13; static typename meta::strip<A14>::type& a14; static typename meta::strip<A15>::type& a15; static typename meta::strip<A16>::type& a16; static typename meta::strip<A17>::type& a17; static typename meta::strip<A18>::type& a18; static typename meta::strip<A19>::type& a19; static typename meta::strip<A20>::type& a20; static typename meta::strip<A21>::type& a21; static typename meta::strip<A22>::type& a22; static typename meta::strip<A23>::type& a23; static typename meta::strip<A24>::type& a24; static typename meta::strip<A25>::type& a25; static typename meta::strip<A26>::type& a26; static typename meta::strip<A27>::type& a27; static typename meta::strip<A28>::type& a28; static typename meta::strip<A29>::type& a29; static typename meta::strip<A30>::type& a30; static typename meta::strip<A31>::type& a31; static typename meta::strip<A32>::type& a32; static typename meta::strip<A33>::type& a33; static typename meta::strip<A34>::type& a34; static typename meta::strip<A35>::type& a35; static typename meta::strip<A36>::type& a36; static typename meta::strip<A37>::type& a37; static typename meta::strip<A38>::type& a38; static typename meta::strip<A39>::type& a39; static typename meta::strip<A40>::type& a40; static typename meta::strip<A41>::type& a41; static typename meta::strip<A42>::type& a42; static typename meta::strip<A43>::type& a43; static typename meta::strip<A44>::type& a44; BOOST_TYPEOF_NESTED_TYPEDEF_TPL ( nested , a0 + a1 + a2 + a3 + a4 + a5 + a6 + a7 + a8 + a9 + a10 + a11 + a12 + a13 + a14 + a15 + a16 + a17 + a18 + a19 + a20 + a21 + a22 + a23 + a24 + a25 + a26 + a27 + a28 + a29 + a30 + a31 + a32 + a33 + a34 + a35 + a36 + a37 + a38 + a39 + a40 + a41 + a42 + a43 + a44) typedef typename nested::type type; }; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45)> { static typename meta::strip<A0>::type& a0; static typename meta::strip<A1>::type& a1; static typename meta::strip<A2>::type& a2; static typename meta::strip<A3>::type& a3; static typename meta::strip<A4>::type& a4; static typename meta::strip<A5>::type& a5; static typename meta::strip<A6>::type& a6; static typename meta::strip<A7>::type& a7; static typename meta::strip<A8>::type& a8; static typename meta::strip<A9>::type& a9; static typename meta::strip<A10>::type& a10; static typename meta::strip<A11>::type& a11; static typename meta::strip<A12>::type& a12; static typename meta::strip<A13>::type& a13; static typename meta::strip<A14>::type& a14; static typename meta::strip<A15>::type& a15; static typename meta::strip<A16>::type& a16; static typename meta::strip<A17>::type& a17; static typename meta::strip<A18>::type& a18; static typename meta::strip<A19>::type& a19; static typename meta::strip<A20>::type& a20; static typename meta::strip<A21>::type& a21; static typename meta::strip<A22>::type& a22; static typename meta::strip<A23>::type& a23; static typename meta::strip<A24>::type& a24; static typename meta::strip<A25>::type& a25; static typename meta::strip<A26>::type& a26; static typename meta::strip<A27>::type& a27; static typename meta::strip<A28>::type& a28; static typename meta::strip<A29>::type& a29; static typename meta::strip<A30>::type& a30; static typename meta::strip<A31>::type& a31; static typename meta::strip<A32>::type& a32; static typename meta::strip<A33>::type& a33; static typename meta::strip<A34>::type& a34; static typename meta::strip<A35>::type& a35; static typename meta::strip<A36>::type& a36; static typename meta::strip<A37>::type& a37; static typename meta::strip<A38>::type& a38; static typename meta::strip<A39>::type& a39; static typename meta::strip<A40>::type& a40; static typename meta::strip<A41>::type& a41; static typename meta::strip<A42>::type& a42; static typename meta::strip<A43>::type& a43; static typename meta::strip<A44>::type& a44; static typename meta::strip<A45>::type& a45; BOOST_TYPEOF_NESTED_TYPEDEF_TPL ( nested , a0 + a1 + a2 + a3 + a4 + a5 + a6 + a7 + a8 + a9 + a10 + a11 + a12 + a13 + a14 + a15 + a16 + a17 + a18 + a19 + a20 + a21 + a22 + a23 + a24 + a25 + a26 + a27 + a28 + a29 + a30 + a31 + a32 + a33 + a34 + a35 + a36 + a37 + a38 + a39 + a40 + a41 + a42 + a43 + a44 + a45) typedef typename nested::type type; }; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46)> { static typename meta::strip<A0>::type& a0; static typename meta::strip<A1>::type& a1; static typename meta::strip<A2>::type& a2; static typename meta::strip<A3>::type& a3; static typename meta::strip<A4>::type& a4; static typename meta::strip<A5>::type& a5; static typename meta::strip<A6>::type& a6; static typename meta::strip<A7>::type& a7; static typename meta::strip<A8>::type& a8; static typename meta::strip<A9>::type& a9; static typename meta::strip<A10>::type& a10; static typename meta::strip<A11>::type& a11; static typename meta::strip<A12>::type& a12; static typename meta::strip<A13>::type& a13; static typename meta::strip<A14>::type& a14; static typename meta::strip<A15>::type& a15; static typename meta::strip<A16>::type& a16; static typename meta::strip<A17>::type& a17; static typename meta::strip<A18>::type& a18; static typename meta::strip<A19>::type& a19; static typename meta::strip<A20>::type& a20; static typename meta::strip<A21>::type& a21; static typename meta::strip<A22>::type& a22; static typename meta::strip<A23>::type& a23; static typename meta::strip<A24>::type& a24; static typename meta::strip<A25>::type& a25; static typename meta::strip<A26>::type& a26; static typename meta::strip<A27>::type& a27; static typename meta::strip<A28>::type& a28; static typename meta::strip<A29>::type& a29; static typename meta::strip<A30>::type& a30; static typename meta::strip<A31>::type& a31; static typename meta::strip<A32>::type& a32; static typename meta::strip<A33>::type& a33; static typename meta::strip<A34>::type& a34; static typename meta::strip<A35>::type& a35; static typename meta::strip<A36>::type& a36; static typename meta::strip<A37>::type& a37; static typename meta::strip<A38>::type& a38; static typename meta::strip<A39>::type& a39; static typename meta::strip<A40>::type& a40; static typename meta::strip<A41>::type& a41; static typename meta::strip<A42>::type& a42; static typename meta::strip<A43>::type& a43; static typename meta::strip<A44>::type& a44; static typename meta::strip<A45>::type& a45; static typename meta::strip<A46>::type& a46; BOOST_TYPEOF_NESTED_TYPEDEF_TPL ( nested , a0 + a1 + a2 + a3 + a4 + a5 + a6 + a7 + a8 + a9 + a10 + a11 + a12 + a13 + a14 + a15 + a16 + a17 + a18 + a19 + a20 + a21 + a22 + a23 + a24 + a25 + a26 + a27 + a28 + a29 + a30 + a31 + a32 + a33 + a34 + a35 + a36 + a37 + a38 + a39 + a40 + a41 + a42 + a43 + a44 + a45 + a46) typedef typename nested::type type; }; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46 , class A47> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46 , A47)> { static typename meta::strip<A0>::type& a0; static typename meta::strip<A1>::type& a1; static typename meta::strip<A2>::type& a2; static typename meta::strip<A3>::type& a3; static typename meta::strip<A4>::type& a4; static typename meta::strip<A5>::type& a5; static typename meta::strip<A6>::type& a6; static typename meta::strip<A7>::type& a7; static typename meta::strip<A8>::type& a8; static typename meta::strip<A9>::type& a9; static typename meta::strip<A10>::type& a10; static typename meta::strip<A11>::type& a11; static typename meta::strip<A12>::type& a12; static typename meta::strip<A13>::type& a13; static typename meta::strip<A14>::type& a14; static typename meta::strip<A15>::type& a15; static typename meta::strip<A16>::type& a16; static typename meta::strip<A17>::type& a17; static typename meta::strip<A18>::type& a18; static typename meta::strip<A19>::type& a19; static typename meta::strip<A20>::type& a20; static typename meta::strip<A21>::type& a21; static typename meta::strip<A22>::type& a22; static typename meta::strip<A23>::type& a23; static typename meta::strip<A24>::type& a24; static typename meta::strip<A25>::type& a25; static typename meta::strip<A26>::type& a26; static typename meta::strip<A27>::type& a27; static typename meta::strip<A28>::type& a28; static typename meta::strip<A29>::type& a29; static typename meta::strip<A30>::type& a30; static typename meta::strip<A31>::type& a31; static typename meta::strip<A32>::type& a32; static typename meta::strip<A33>::type& a33; static typename meta::strip<A34>::type& a34; static typename meta::strip<A35>::type& a35; static typename meta::strip<A36>::type& a36; static typename meta::strip<A37>::type& a37; static typename meta::strip<A38>::type& a38; static typename meta::strip<A39>::type& a39; static typename meta::strip<A40>::type& a40; static typename meta::strip<A41>::type& a41; static typename meta::strip<A42>::type& a42; static typename meta::strip<A43>::type& a43; static typename meta::strip<A44>::type& a44; static typename meta::strip<A45>::type& a45; static typename meta::strip<A46>::type& a46; static typename meta::strip<A47>::type& a47; BOOST_TYPEOF_NESTED_TYPEDEF_TPL ( nested , a0 + a1 + a2 + a3 + a4 + a5 + a6 + a7 + a8 + a9 + a10 + a11 + a12 + a13 + a14 + a15 + a16 + a17 + a18 + a19 + a20 + a21 + a22 + a23 + a24 + a25 + a26 + a27 + a28 + a29 + a30 + a31 + a32 + a33 + a34 + a35 + a36 + a37 + a38 + a39 + a40 + a41 + a42 + a43 + a44 + a45 + a46 + a47) typedef typename nested::type type; }; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46 , class A47 , class A48> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46 , A47 , A48)> { static typename meta::strip<A0>::type& a0; static typename meta::strip<A1>::type& a1; static typename meta::strip<A2>::type& a2; static typename meta::strip<A3>::type& a3; static typename meta::strip<A4>::type& a4; static typename meta::strip<A5>::type& a5; static typename meta::strip<A6>::type& a6; static typename meta::strip<A7>::type& a7; static typename meta::strip<A8>::type& a8; static typename meta::strip<A9>::type& a9; static typename meta::strip<A10>::type& a10; static typename meta::strip<A11>::type& a11; static typename meta::strip<A12>::type& a12; static typename meta::strip<A13>::type& a13; static typename meta::strip<A14>::type& a14; static typename meta::strip<A15>::type& a15; static typename meta::strip<A16>::type& a16; static typename meta::strip<A17>::type& a17; static typename meta::strip<A18>::type& a18; static typename meta::strip<A19>::type& a19; static typename meta::strip<A20>::type& a20; static typename meta::strip<A21>::type& a21; static typename meta::strip<A22>::type& a22; static typename meta::strip<A23>::type& a23; static typename meta::strip<A24>::type& a24; static typename meta::strip<A25>::type& a25; static typename meta::strip<A26>::type& a26; static typename meta::strip<A27>::type& a27; static typename meta::strip<A28>::type& a28; static typename meta::strip<A29>::type& a29; static typename meta::strip<A30>::type& a30; static typename meta::strip<A31>::type& a31; static typename meta::strip<A32>::type& a32; static typename meta::strip<A33>::type& a33; static typename meta::strip<A34>::type& a34; static typename meta::strip<A35>::type& a35; static typename meta::strip<A36>::type& a36; static typename meta::strip<A37>::type& a37; static typename meta::strip<A38>::type& a38; static typename meta::strip<A39>::type& a39; static typename meta::strip<A40>::type& a40; static typename meta::strip<A41>::type& a41; static typename meta::strip<A42>::type& a42; static typename meta::strip<A43>::type& a43; static typename meta::strip<A44>::type& a44; static typename meta::strip<A45>::type& a45; static typename meta::strip<A46>::type& a46; static typename meta::strip<A47>::type& a47; static typename meta::strip<A48>::type& a48; BOOST_TYPEOF_NESTED_TYPEDEF_TPL ( nested , a0 + a1 + a2 + a3 + a4 + a5 + a6 + a7 + a8 + a9 + a10 + a11 + a12 + a13 + a14 + a15 + a16 + a17 + a18 + a19 + a20 + a21 + a22 + a23 + a24 + a25 + a26 + a27 + a28 + a29 + a30 + a31 + a32 + a33 + a34 + a35 + a36 + a37 + a38 + a39 + a40 + a41 + a42 + a43 + a44 + a45 + a46 + a47 + a48) typedef typename nested::type type; };
    
    
