namespace nt2 { namespace meta { template<class Func , class A0> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints64_<A0>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints64_<A0>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints64_ , tag::sse_ > ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0> struct result<This(Func, A0)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1> inline typename meta::result_of<call(A0 const& , A1 const&)>::type operator()( A0 const& a0 , A1 const& a1 ) const { typedef typename result<call(A0 , A1)>::type ntype; typedef typename result<call(A0 , A1)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints64_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints64_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints64_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1> struct result<This(Func, A0 , A1)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 ) const { typedef typename result<call(A0 , A1 , A2)>::type ntype; typedef typename result<call(A0 , A1 , A2)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints64_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints64_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints64_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2> struct result<This(Func, A0 , A1 , A2)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 ) const { typedef typename result<call(A0 , A1 , A2 , A3)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints64_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints64_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints64_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3> struct result<This(Func, A0 , A1 , A2 , A3)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints64_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints64_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints64_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4> struct result<This(Func, A0 , A1 , A2 , A3 , A4)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints64_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints64_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints64_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints64_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints64_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints64_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints64_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints64_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints64_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints64_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints64_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints64_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints64_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints64_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints64_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints64_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints64_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints64_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints64_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints64_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints64_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints64_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints64_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints64_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints64_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints64_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints64_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints64_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints64_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints64_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints64_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints64_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints64_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints64_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints64_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints64_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints64_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints64_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints64_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints64_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints64_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints64_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints64_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints64_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints64_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints64_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints64_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints64_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints64_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints64_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints64_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints64_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints64_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints64_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints64_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints64_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints64_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints64_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints64_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints64_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints64_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints64_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints64_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints64_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints64_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints64_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints64_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints64_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints64_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints64_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints64_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints64_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints64_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints64_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints64_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints64_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints64_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints64_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints64_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints64_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints64_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints64_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints64_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints64_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints64_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints64_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints64_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints64_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints64_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints64_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints64_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints64_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints64_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints64_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints64_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints64_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints64_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints64_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints64_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints64_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints64_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints64_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints64_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A39>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints64_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A39>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints64_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type , typename meta::scalar_of<A39>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0] , a40[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1] , a40[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints64_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A39>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A40>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints64_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A39>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A40>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints64_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type , typename meta::scalar_of<A39>::type , typename meta::scalar_of<A40>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const& , A41 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 , A41 const& a41 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0] , a40[ 0] , a41[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1] , a40[ 1] , a41[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints64_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A39>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A40>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A41>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints64_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A39>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A40>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A41>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints64_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type , typename meta::scalar_of<A39>::type , typename meta::scalar_of<A40>::type , typename meta::scalar_of<A41>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const& , A41 const& , A42 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 , A41 const& a41 , A42 const& a42 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0] , a40[ 0] , a41[ 0] , a42[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1] , a40[ 1] , a41[ 1] , a42[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints64_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A39>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A40>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A41>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A42>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints64_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A39>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A40>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A41>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A42>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints64_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type , typename meta::scalar_of<A39>::type , typename meta::scalar_of<A40>::type , typename meta::scalar_of<A41>::type , typename meta::scalar_of<A42>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const& , A41 const& , A42 const& , A43 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 , A41 const& a41 , A42 const& a42 , A43 const& a43 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0] , a40[ 0] , a41[ 0] , a42[ 0] , a43[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1] , a40[ 1] , a41[ 1] , a42[ 1] , a43[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints64_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A39>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A40>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A41>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A42>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A43>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints64_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A39>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A40>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A41>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A42>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A43>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints64_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type , typename meta::scalar_of<A39>::type , typename meta::scalar_of<A40>::type , typename meta::scalar_of<A41>::type , typename meta::scalar_of<A42>::type , typename meta::scalar_of<A43>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const& , A41 const& , A42 const& , A43 const& , A44 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 , A41 const& a41 , A42 const& a42 , A43 const& a43 , A44 const& a44 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0] , a40[ 0] , a41[ 0] , a42[ 0] , a43[ 0] , a44[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1] , a40[ 1] , a41[ 1] , a42[ 1] , a43[ 1] , a44[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints64_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A39>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A40>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A41>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A42>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A43>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A44>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints64_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A39>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A40>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A41>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A42>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A43>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A44>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints64_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type , typename meta::scalar_of<A39>::type , typename meta::scalar_of<A40>::type , typename meta::scalar_of<A41>::type , typename meta::scalar_of<A42>::type , typename meta::scalar_of<A43>::type , typename meta::scalar_of<A44>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const& , A41 const& , A42 const& , A43 const& , A44 const& , A45 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 , A41 const& a41 , A42 const& a42 , A43 const& a43 , A44 const& a44 , A45 const& a45 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0] , a40[ 0] , a41[ 0] , a42[ 0] , a43[ 0] , a44[ 0] , a45[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1] , a40[ 1] , a41[ 1] , a42[ 1] , a43[ 1] , a44[ 1] , a45[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints64_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A39>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A40>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A41>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A42>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A43>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A44>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A45>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints64_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A39>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A40>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A41>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A42>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A43>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A44>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A45>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints64_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type , typename meta::scalar_of<A39>::type , typename meta::scalar_of<A40>::type , typename meta::scalar_of<A41>::type , typename meta::scalar_of<A42>::type , typename meta::scalar_of<A43>::type , typename meta::scalar_of<A44>::type , typename meta::scalar_of<A45>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const& , A41 const& , A42 const& , A43 const& , A44 const& , A45 const& , A46 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 , A41 const& a41 , A42 const& a42 , A43 const& a43 , A44 const& a44 , A45 const& a45 , A46 const& a46 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0] , a40[ 0] , a41[ 0] , a42[ 0] , a43[ 0] , a44[ 0] , a45[ 0] , a46[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1] , a40[ 1] , a41[ 1] , a42[ 1] , a43[ 1] , a44[ 1] , a45[ 1] , a46[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints64_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A39>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A40>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A41>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A42>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A43>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A44>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A45>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A46>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints64_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A39>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A40>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A41>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A42>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A43>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A44>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A45>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A46>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints64_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type , typename meta::scalar_of<A39>::type , typename meta::scalar_of<A40>::type , typename meta::scalar_of<A41>::type , typename meta::scalar_of<A42>::type , typename meta::scalar_of<A43>::type , typename meta::scalar_of<A44>::type , typename meta::scalar_of<A45>::type , typename meta::scalar_of<A46>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46 , class A47> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const& , A41 const& , A42 const& , A43 const& , A44 const& , A45 const& , A46 const& , A47 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 , A41 const& a41 , A42 const& a42 , A43 const& a43 , A44 const& a44 , A45 const& a45 , A46 const& a46 , A47 const& a47 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46 , A47)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46 , A47)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0] , a40[ 0] , a41[ 0] , a42[ 0] , a43[ 0] , a44[ 0] , a45[ 0] , a46[ 0] , a47[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1] , a40[ 1] , a41[ 1] , a42[ 1] , a43[ 1] , a44[ 1] , a45[ 1] , a46[ 1] , a47[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46 , class A47> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints64_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A39>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A40>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A41>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A42>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A43>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A44>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A45>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A46>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A47>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints64_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A39>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A40>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A41>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A42>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A43>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A44>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A45>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A46>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A47>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints64_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46 , class A47> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46 , A47)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type , typename meta::scalar_of<A39>::type , typename meta::scalar_of<A40>::type , typename meta::scalar_of<A41>::type , typename meta::scalar_of<A42>::type , typename meta::scalar_of<A43>::type , typename meta::scalar_of<A44>::type , typename meta::scalar_of<A45>::type , typename meta::scalar_of<A46>::type , typename meta::scalar_of<A47>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46 , class A47 , class A48> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const& , A41 const& , A42 const& , A43 const& , A44 const& , A45 const& , A46 const& , A47 const& , A48 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 , A41 const& a41 , A42 const& a42 , A43 const& a43 , A44 const& a44 , A45 const& a45 , A46 const& a46 , A47 const& a47 , A48 const& a48 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46 , A47 , A48)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46 , A47 , A48)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0] , a40[ 0] , a41[ 0] , a42[ 0] , a43[ 0] , a44[ 0] , a45[ 0] , a46[ 0] , a47[ 0] , a48[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1] , a40[ 1] , a41[ 1] , a42[ 1] , a43[ 1] , a44[ 1] , a45[ 1] , a46[ 1] , a47[ 1] , a48[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46 , class A47 , class A48> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints64_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A39>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A40>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A41>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A42>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A43>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A44>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A45>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A46>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A47>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A48>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints64_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A39>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A40>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A41>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A42>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A43>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A44>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A45>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A46>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A47>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A48>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints64_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46 , class A47 , class A48> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46 , A47 , A48)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type , typename meta::scalar_of<A39>::type , typename meta::scalar_of<A40>::type , typename meta::scalar_of<A41>::type , typename meta::scalar_of<A42>::type , typename meta::scalar_of<A43>::type , typename meta::scalar_of<A44>::type , typename meta::scalar_of<A45>::type , typename meta::scalar_of<A46>::type , typename meta::scalar_of<A47>::type , typename meta::scalar_of<A48>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46 , class A47 , class A48 , class A49> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const& , A41 const& , A42 const& , A43 const& , A44 const& , A45 const& , A46 const& , A47 const& , A48 const& , A49 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 , A41 const& a41 , A42 const& a42 , A43 const& a43 , A44 const& a44 , A45 const& a45 , A46 const& a46 , A47 const& a47 , A48 const& a48 , A49 const& a49 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46 , A47 , A48 , A49)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46 , A47 , A48 , A49)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0] , a40[ 0] , a41[ 0] , a42[ 0] , a43[ 0] , a44[ 0] , a45[ 0] , a46[ 0] , a47[ 0] , a48[ 0] , a49[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1] , a40[ 1] , a41[ 1] , a42[ 1] , a43[ 1] , a44[ 1] , a45[ 1] , a46[ 1] , a47[ 1] , a48[ 1] , a49[ 1]))); } }; } }
namespace nt2 { namespace meta { template<class Func , class A0> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<double_<A0>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<double_<A0>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::double_ , tag::sse_ > ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0> struct result<This(Func, A0)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1> inline typename meta::result_of<call(A0 const& , A1 const&)>::type operator()( A0 const& a0 , A1 const& a1 ) const { typedef typename result<call(A0 , A1)>::type ntype; typedef typename result<call(A0 , A1)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<double_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<double_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::double_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1> struct result<This(Func, A0 , A1)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 ) const { typedef typename result<call(A0 , A1 , A2)>::type ntype; typedef typename result<call(A0 , A1 , A2)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<double_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<double_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::double_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2> struct result<This(Func, A0 , A1 , A2)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 ) const { typedef typename result<call(A0 , A1 , A2 , A3)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<double_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<double_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::double_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3> struct result<This(Func, A0 , A1 , A2 , A3)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<double_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<double_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::double_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4> struct result<This(Func, A0 , A1 , A2 , A3 , A4)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<double_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<double_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::double_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<double_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<double_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::double_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<double_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<double_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::double_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<double_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<double_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::double_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<double_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<double_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::double_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<double_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<double_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::double_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<double_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<double_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::double_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<double_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<double_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::double_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<double_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<double_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::double_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<double_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<double_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::double_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<double_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<double_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::double_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<double_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<double_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::double_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<double_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<double_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::double_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<double_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<double_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::double_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<double_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<double_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::double_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<double_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<double_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::double_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<double_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<double_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::double_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<double_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<double_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::double_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<double_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<double_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::double_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<double_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<double_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::double_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<double_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<double_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::double_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<double_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<double_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::double_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<double_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<double_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::double_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<double_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<double_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::double_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<double_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<double_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::double_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<double_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<double_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::double_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<double_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<double_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::double_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<double_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<double_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::double_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<double_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<double_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::double_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<double_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<double_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::double_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<double_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<double_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::double_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<double_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<double_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::double_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<double_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<double_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::double_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<double_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<double_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::double_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<double_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A39>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<double_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A39>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::double_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type , typename meta::scalar_of<A39>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0] , a40[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1] , a40[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<double_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A39>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A40>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<double_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A39>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A40>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::double_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type , typename meta::scalar_of<A39>::type , typename meta::scalar_of<A40>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const& , A41 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 , A41 const& a41 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0] , a40[ 0] , a41[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1] , a40[ 1] , a41[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<double_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A39>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A40>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A41>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<double_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A39>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A40>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A41>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::double_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type , typename meta::scalar_of<A39>::type , typename meta::scalar_of<A40>::type , typename meta::scalar_of<A41>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const& , A41 const& , A42 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 , A41 const& a41 , A42 const& a42 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0] , a40[ 0] , a41[ 0] , a42[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1] , a40[ 1] , a41[ 1] , a42[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<double_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A39>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A40>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A41>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A42>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<double_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A39>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A40>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A41>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A42>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::double_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type , typename meta::scalar_of<A39>::type , typename meta::scalar_of<A40>::type , typename meta::scalar_of<A41>::type , typename meta::scalar_of<A42>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const& , A41 const& , A42 const& , A43 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 , A41 const& a41 , A42 const& a42 , A43 const& a43 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0] , a40[ 0] , a41[ 0] , a42[ 0] , a43[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1] , a40[ 1] , a41[ 1] , a42[ 1] , a43[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<double_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A39>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A40>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A41>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A42>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A43>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<double_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A39>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A40>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A41>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A42>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A43>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::double_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type , typename meta::scalar_of<A39>::type , typename meta::scalar_of<A40>::type , typename meta::scalar_of<A41>::type , typename meta::scalar_of<A42>::type , typename meta::scalar_of<A43>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const& , A41 const& , A42 const& , A43 const& , A44 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 , A41 const& a41 , A42 const& a42 , A43 const& a43 , A44 const& a44 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0] , a40[ 0] , a41[ 0] , a42[ 0] , a43[ 0] , a44[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1] , a40[ 1] , a41[ 1] , a42[ 1] , a43[ 1] , a44[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<double_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A39>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A40>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A41>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A42>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A43>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A44>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<double_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A39>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A40>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A41>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A42>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A43>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A44>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::double_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type , typename meta::scalar_of<A39>::type , typename meta::scalar_of<A40>::type , typename meta::scalar_of<A41>::type , typename meta::scalar_of<A42>::type , typename meta::scalar_of<A43>::type , typename meta::scalar_of<A44>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const& , A41 const& , A42 const& , A43 const& , A44 const& , A45 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 , A41 const& a41 , A42 const& a42 , A43 const& a43 , A44 const& a44 , A45 const& a45 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0] , a40[ 0] , a41[ 0] , a42[ 0] , a43[ 0] , a44[ 0] , a45[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1] , a40[ 1] , a41[ 1] , a42[ 1] , a43[ 1] , a44[ 1] , a45[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<double_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A39>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A40>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A41>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A42>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A43>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A44>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A45>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<double_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A39>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A40>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A41>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A42>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A43>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A44>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A45>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::double_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type , typename meta::scalar_of<A39>::type , typename meta::scalar_of<A40>::type , typename meta::scalar_of<A41>::type , typename meta::scalar_of<A42>::type , typename meta::scalar_of<A43>::type , typename meta::scalar_of<A44>::type , typename meta::scalar_of<A45>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const& , A41 const& , A42 const& , A43 const& , A44 const& , A45 const& , A46 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 , A41 const& a41 , A42 const& a42 , A43 const& a43 , A44 const& a44 , A45 const& a45 , A46 const& a46 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0] , a40[ 0] , a41[ 0] , a42[ 0] , a43[ 0] , a44[ 0] , a45[ 0] , a46[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1] , a40[ 1] , a41[ 1] , a42[ 1] , a43[ 1] , a44[ 1] , a45[ 1] , a46[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<double_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A39>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A40>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A41>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A42>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A43>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A44>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A45>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A46>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<double_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A39>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A40>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A41>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A42>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A43>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A44>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A45>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A46>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::double_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type , typename meta::scalar_of<A39>::type , typename meta::scalar_of<A40>::type , typename meta::scalar_of<A41>::type , typename meta::scalar_of<A42>::type , typename meta::scalar_of<A43>::type , typename meta::scalar_of<A44>::type , typename meta::scalar_of<A45>::type , typename meta::scalar_of<A46>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46 , class A47> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const& , A41 const& , A42 const& , A43 const& , A44 const& , A45 const& , A46 const& , A47 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 , A41 const& a41 , A42 const& a42 , A43 const& a43 , A44 const& a44 , A45 const& a45 , A46 const& a46 , A47 const& a47 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46 , A47)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46 , A47)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0] , a40[ 0] , a41[ 0] , a42[ 0] , a43[ 0] , a44[ 0] , a45[ 0] , a46[ 0] , a47[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1] , a40[ 1] , a41[ 1] , a42[ 1] , a43[ 1] , a44[ 1] , a45[ 1] , a46[ 1] , a47[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46 , class A47> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<double_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A39>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A40>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A41>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A42>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A43>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A44>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A45>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A46>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A47>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<double_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A39>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A40>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A41>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A42>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A43>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A44>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A45>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A46>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A47>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::double_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46 , class A47> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46 , A47)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type , typename meta::scalar_of<A39>::type , typename meta::scalar_of<A40>::type , typename meta::scalar_of<A41>::type , typename meta::scalar_of<A42>::type , typename meta::scalar_of<A43>::type , typename meta::scalar_of<A44>::type , typename meta::scalar_of<A45>::type , typename meta::scalar_of<A46>::type , typename meta::scalar_of<A47>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46 , class A47 , class A48> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const& , A41 const& , A42 const& , A43 const& , A44 const& , A45 const& , A46 const& , A47 const& , A48 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 , A41 const& a41 , A42 const& a42 , A43 const& a43 , A44 const& a44 , A45 const& a45 , A46 const& a46 , A47 const& a47 , A48 const& a48 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46 , A47 , A48)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46 , A47 , A48)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0] , a40[ 0] , a41[ 0] , a42[ 0] , a43[ 0] , a44[ 0] , a45[ 0] , a46[ 0] , a47[ 0] , a48[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1] , a40[ 1] , a41[ 1] , a42[ 1] , a43[ 1] , a44[ 1] , a45[ 1] , a46[ 1] , a47[ 1] , a48[ 1]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46 , class A47 , class A48> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<double_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A39>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A40>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A41>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A42>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A43>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A44>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A45>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A46>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A47>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A48>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<double_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A39>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A40>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A41>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A42>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A43>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A44>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A45>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A46>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A47>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A48>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::double_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46 , class A47 , class A48> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46 , A47 , A48)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type , typename meta::scalar_of<A39>::type , typename meta::scalar_of<A40>::type , typename meta::scalar_of<A41>::type , typename meta::scalar_of<A42>::type , typename meta::scalar_of<A43>::type , typename meta::scalar_of<A44>::type , typename meta::scalar_of<A45>::type , typename meta::scalar_of<A46>::type , typename meta::scalar_of<A47>::type , typename meta::scalar_of<A48>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46 , class A47 , class A48 , class A49> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const& , A41 const& , A42 const& , A43 const& , A44 const& , A45 const& , A46 const& , A47 const& , A48 const& , A49 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 , A41 const& a41 , A42 const& a42 , A43 const& a43 , A44 const& a44 , A45 const& a45 , A46 const& a46 , A47 const& a47 , A48 const& a48 , A49 const& a49 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46 , A47 , A48 , A49)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46 , A47 , A48 , A49)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0] , a40[ 0] , a41[ 0] , a42[ 0] , a43[ 0] , a44[ 0] , a45[ 0] , a46[ 0] , a47[ 0] , a48[ 0] , a49[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1] , a40[ 1] , a41[ 1] , a42[ 1] , a43[ 1] , a44[ 1] , a45[ 1] , a46[ 1] , a47[ 1] , a48[ 1] , a49[ 1]))); } }; } }
namespace nt2 { namespace meta { template<class Func , class A0> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<float_<A0>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<float_<A0>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::float_ , tag::sse_ > ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0> struct result<This(Func, A0)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1> inline typename meta::result_of<call(A0 const& , A1 const&)>::type operator()( A0 const& a0 , A1 const& a1 ) const { typedef typename result<call(A0 , A1)>::type ntype; typedef typename result<call(A0 , A1)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<float_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<float_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::float_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1> struct result<This(Func, A0 , A1)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 ) const { typedef typename result<call(A0 , A1 , A2)>::type ntype; typedef typename result<call(A0 , A1 , A2)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<float_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<float_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::float_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2> struct result<This(Func, A0 , A1 , A2)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 ) const { typedef typename result<call(A0 , A1 , A2 , A3)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<float_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<float_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::float_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3> struct result<This(Func, A0 , A1 , A2 , A3)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<float_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<float_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::float_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4> struct result<This(Func, A0 , A1 , A2 , A3 , A4)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<float_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<float_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::float_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<float_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<float_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::float_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<float_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<float_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::float_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<float_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<float_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::float_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<float_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<float_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::float_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<float_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<float_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::float_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<float_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<float_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::float_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<float_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<float_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::float_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<float_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<float_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::float_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<float_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<float_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::float_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<float_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<float_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::float_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<float_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<float_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::float_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<float_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<float_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::float_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<float_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<float_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::float_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<float_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<float_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::float_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<float_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<float_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::float_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<float_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<float_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::float_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<float_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<float_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::float_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<float_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<float_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::float_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<float_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<float_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::float_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<float_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<float_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::float_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<float_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<float_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::float_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<float_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<float_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::float_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<float_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<float_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::float_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<float_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<float_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::float_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<float_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<float_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::float_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<float_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<float_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::float_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<float_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<float_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::float_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<float_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<float_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::float_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2] , a34[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3] , a34[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<float_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<float_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::float_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2] , a34[ 2] , a35[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3] , a34[ 3] , a35[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<float_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<float_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::float_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2] , a34[ 2] , a35[ 2] , a36[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3] , a34[ 3] , a35[ 3] , a36[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<float_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<float_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::float_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2] , a34[ 2] , a35[ 2] , a36[ 2] , a37[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3] , a34[ 3] , a35[ 3] , a36[ 3] , a37[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<float_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<float_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::float_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2] , a34[ 2] , a35[ 2] , a36[ 2] , a37[ 2] , a38[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3] , a34[ 3] , a35[ 3] , a36[ 3] , a37[ 3] , a38[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<float_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<float_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::float_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2] , a34[ 2] , a35[ 2] , a36[ 2] , a37[ 2] , a38[ 2] , a39[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3] , a34[ 3] , a35[ 3] , a36[ 3] , a37[ 3] , a38[ 3] , a39[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<float_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A39>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<float_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A39>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::float_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type , typename meta::scalar_of<A39>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0] , a40[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1] , a40[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2] , a34[ 2] , a35[ 2] , a36[ 2] , a37[ 2] , a38[ 2] , a39[ 2] , a40[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3] , a34[ 3] , a35[ 3] , a36[ 3] , a37[ 3] , a38[ 3] , a39[ 3] , a40[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<float_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A39>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A40>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<float_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A39>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A40>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::float_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type , typename meta::scalar_of<A39>::type , typename meta::scalar_of<A40>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const& , A41 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 , A41 const& a41 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0] , a40[ 0] , a41[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1] , a40[ 1] , a41[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2] , a34[ 2] , a35[ 2] , a36[ 2] , a37[ 2] , a38[ 2] , a39[ 2] , a40[ 2] , a41[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3] , a34[ 3] , a35[ 3] , a36[ 3] , a37[ 3] , a38[ 3] , a39[ 3] , a40[ 3] , a41[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<float_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A39>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A40>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A41>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<float_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A39>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A40>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A41>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::float_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type , typename meta::scalar_of<A39>::type , typename meta::scalar_of<A40>::type , typename meta::scalar_of<A41>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const& , A41 const& , A42 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 , A41 const& a41 , A42 const& a42 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0] , a40[ 0] , a41[ 0] , a42[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1] , a40[ 1] , a41[ 1] , a42[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2] , a34[ 2] , a35[ 2] , a36[ 2] , a37[ 2] , a38[ 2] , a39[ 2] , a40[ 2] , a41[ 2] , a42[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3] , a34[ 3] , a35[ 3] , a36[ 3] , a37[ 3] , a38[ 3] , a39[ 3] , a40[ 3] , a41[ 3] , a42[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<float_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A39>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A40>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A41>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A42>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<float_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A39>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A40>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A41>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A42>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::float_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type , typename meta::scalar_of<A39>::type , typename meta::scalar_of<A40>::type , typename meta::scalar_of<A41>::type , typename meta::scalar_of<A42>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const& , A41 const& , A42 const& , A43 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 , A41 const& a41 , A42 const& a42 , A43 const& a43 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0] , a40[ 0] , a41[ 0] , a42[ 0] , a43[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1] , a40[ 1] , a41[ 1] , a42[ 1] , a43[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2] , a34[ 2] , a35[ 2] , a36[ 2] , a37[ 2] , a38[ 2] , a39[ 2] , a40[ 2] , a41[ 2] , a42[ 2] , a43[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3] , a34[ 3] , a35[ 3] , a36[ 3] , a37[ 3] , a38[ 3] , a39[ 3] , a40[ 3] , a41[ 3] , a42[ 3] , a43[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<float_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A39>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A40>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A41>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A42>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A43>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<float_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A39>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A40>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A41>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A42>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A43>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::float_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type , typename meta::scalar_of<A39>::type , typename meta::scalar_of<A40>::type , typename meta::scalar_of<A41>::type , typename meta::scalar_of<A42>::type , typename meta::scalar_of<A43>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const& , A41 const& , A42 const& , A43 const& , A44 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 , A41 const& a41 , A42 const& a42 , A43 const& a43 , A44 const& a44 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0] , a40[ 0] , a41[ 0] , a42[ 0] , a43[ 0] , a44[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1] , a40[ 1] , a41[ 1] , a42[ 1] , a43[ 1] , a44[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2] , a34[ 2] , a35[ 2] , a36[ 2] , a37[ 2] , a38[ 2] , a39[ 2] , a40[ 2] , a41[ 2] , a42[ 2] , a43[ 2] , a44[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3] , a34[ 3] , a35[ 3] , a36[ 3] , a37[ 3] , a38[ 3] , a39[ 3] , a40[ 3] , a41[ 3] , a42[ 3] , a43[ 3] , a44[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<float_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A39>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A40>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A41>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A42>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A43>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A44>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<float_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A39>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A40>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A41>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A42>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A43>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A44>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::float_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type , typename meta::scalar_of<A39>::type , typename meta::scalar_of<A40>::type , typename meta::scalar_of<A41>::type , typename meta::scalar_of<A42>::type , typename meta::scalar_of<A43>::type , typename meta::scalar_of<A44>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const& , A41 const& , A42 const& , A43 const& , A44 const& , A45 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 , A41 const& a41 , A42 const& a42 , A43 const& a43 , A44 const& a44 , A45 const& a45 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0] , a40[ 0] , a41[ 0] , a42[ 0] , a43[ 0] , a44[ 0] , a45[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1] , a40[ 1] , a41[ 1] , a42[ 1] , a43[ 1] , a44[ 1] , a45[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2] , a34[ 2] , a35[ 2] , a36[ 2] , a37[ 2] , a38[ 2] , a39[ 2] , a40[ 2] , a41[ 2] , a42[ 2] , a43[ 2] , a44[ 2] , a45[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3] , a34[ 3] , a35[ 3] , a36[ 3] , a37[ 3] , a38[ 3] , a39[ 3] , a40[ 3] , a41[ 3] , a42[ 3] , a43[ 3] , a44[ 3] , a45[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<float_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A39>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A40>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A41>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A42>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A43>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A44>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A45>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<float_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A39>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A40>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A41>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A42>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A43>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A44>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A45>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::float_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type , typename meta::scalar_of<A39>::type , typename meta::scalar_of<A40>::type , typename meta::scalar_of<A41>::type , typename meta::scalar_of<A42>::type , typename meta::scalar_of<A43>::type , typename meta::scalar_of<A44>::type , typename meta::scalar_of<A45>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const& , A41 const& , A42 const& , A43 const& , A44 const& , A45 const& , A46 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 , A41 const& a41 , A42 const& a42 , A43 const& a43 , A44 const& a44 , A45 const& a45 , A46 const& a46 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0] , a40[ 0] , a41[ 0] , a42[ 0] , a43[ 0] , a44[ 0] , a45[ 0] , a46[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1] , a40[ 1] , a41[ 1] , a42[ 1] , a43[ 1] , a44[ 1] , a45[ 1] , a46[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2] , a34[ 2] , a35[ 2] , a36[ 2] , a37[ 2] , a38[ 2] , a39[ 2] , a40[ 2] , a41[ 2] , a42[ 2] , a43[ 2] , a44[ 2] , a45[ 2] , a46[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3] , a34[ 3] , a35[ 3] , a36[ 3] , a37[ 3] , a38[ 3] , a39[ 3] , a40[ 3] , a41[ 3] , a42[ 3] , a43[ 3] , a44[ 3] , a45[ 3] , a46[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<float_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A39>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A40>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A41>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A42>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A43>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A44>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A45>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A46>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<float_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A39>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A40>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A41>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A42>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A43>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A44>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A45>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A46>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::float_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type , typename meta::scalar_of<A39>::type , typename meta::scalar_of<A40>::type , typename meta::scalar_of<A41>::type , typename meta::scalar_of<A42>::type , typename meta::scalar_of<A43>::type , typename meta::scalar_of<A44>::type , typename meta::scalar_of<A45>::type , typename meta::scalar_of<A46>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46 , class A47> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const& , A41 const& , A42 const& , A43 const& , A44 const& , A45 const& , A46 const& , A47 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 , A41 const& a41 , A42 const& a42 , A43 const& a43 , A44 const& a44 , A45 const& a45 , A46 const& a46 , A47 const& a47 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46 , A47)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46 , A47)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0] , a40[ 0] , a41[ 0] , a42[ 0] , a43[ 0] , a44[ 0] , a45[ 0] , a46[ 0] , a47[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1] , a40[ 1] , a41[ 1] , a42[ 1] , a43[ 1] , a44[ 1] , a45[ 1] , a46[ 1] , a47[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2] , a34[ 2] , a35[ 2] , a36[ 2] , a37[ 2] , a38[ 2] , a39[ 2] , a40[ 2] , a41[ 2] , a42[ 2] , a43[ 2] , a44[ 2] , a45[ 2] , a46[ 2] , a47[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3] , a34[ 3] , a35[ 3] , a36[ 3] , a37[ 3] , a38[ 3] , a39[ 3] , a40[ 3] , a41[ 3] , a42[ 3] , a43[ 3] , a44[ 3] , a45[ 3] , a46[ 3] , a47[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46 , class A47> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<float_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A39>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A40>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A41>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A42>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A43>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A44>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A45>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A46>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A47>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<float_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A39>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A40>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A41>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A42>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A43>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A44>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A45>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A46>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A47>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::float_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46 , class A47> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46 , A47)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type , typename meta::scalar_of<A39>::type , typename meta::scalar_of<A40>::type , typename meta::scalar_of<A41>::type , typename meta::scalar_of<A42>::type , typename meta::scalar_of<A43>::type , typename meta::scalar_of<A44>::type , typename meta::scalar_of<A45>::type , typename meta::scalar_of<A46>::type , typename meta::scalar_of<A47>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46 , class A47 , class A48> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const& , A41 const& , A42 const& , A43 const& , A44 const& , A45 const& , A46 const& , A47 const& , A48 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 , A41 const& a41 , A42 const& a42 , A43 const& a43 , A44 const& a44 , A45 const& a45 , A46 const& a46 , A47 const& a47 , A48 const& a48 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46 , A47 , A48)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46 , A47 , A48)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0] , a40[ 0] , a41[ 0] , a42[ 0] , a43[ 0] , a44[ 0] , a45[ 0] , a46[ 0] , a47[ 0] , a48[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1] , a40[ 1] , a41[ 1] , a42[ 1] , a43[ 1] , a44[ 1] , a45[ 1] , a46[ 1] , a47[ 1] , a48[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2] , a34[ 2] , a35[ 2] , a36[ 2] , a37[ 2] , a38[ 2] , a39[ 2] , a40[ 2] , a41[ 2] , a42[ 2] , a43[ 2] , a44[ 2] , a45[ 2] , a46[ 2] , a47[ 2] , a48[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3] , a34[ 3] , a35[ 3] , a36[ 3] , a37[ 3] , a38[ 3] , a39[ 3] , a40[ 3] , a41[ 3] , a42[ 3] , a43[ 3] , a44[ 3] , a45[ 3] , a46[ 3] , a47[ 3] , a48[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46 , class A47 , class A48> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<float_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A39>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A40>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A41>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A42>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A43>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A44>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A45>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A46>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A47>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A48>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<float_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A39>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A40>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A41>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A42>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A43>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A44>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A45>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A46>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A47>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A48>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::float_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46 , class A47 , class A48> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46 , A47 , A48)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type , typename meta::scalar_of<A39>::type , typename meta::scalar_of<A40>::type , typename meta::scalar_of<A41>::type , typename meta::scalar_of<A42>::type , typename meta::scalar_of<A43>::type , typename meta::scalar_of<A44>::type , typename meta::scalar_of<A45>::type , typename meta::scalar_of<A46>::type , typename meta::scalar_of<A47>::type , typename meta::scalar_of<A48>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46 , class A47 , class A48 , class A49> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const& , A41 const& , A42 const& , A43 const& , A44 const& , A45 const& , A46 const& , A47 const& , A48 const& , A49 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 , A41 const& a41 , A42 const& a42 , A43 const& a43 , A44 const& a44 , A45 const& a45 , A46 const& a46 , A47 const& a47 , A48 const& a48 , A49 const& a49 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46 , A47 , A48 , A49)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46 , A47 , A48 , A49)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0] , a40[ 0] , a41[ 0] , a42[ 0] , a43[ 0] , a44[ 0] , a45[ 0] , a46[ 0] , a47[ 0] , a48[ 0] , a49[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1] , a40[ 1] , a41[ 1] , a42[ 1] , a43[ 1] , a44[ 1] , a45[ 1] , a46[ 1] , a47[ 1] , a48[ 1] , a49[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2] , a34[ 2] , a35[ 2] , a36[ 2] , a37[ 2] , a38[ 2] , a39[ 2] , a40[ 2] , a41[ 2] , a42[ 2] , a43[ 2] , a44[ 2] , a45[ 2] , a46[ 2] , a47[ 2] , a48[ 2] , a49[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3] , a34[ 3] , a35[ 3] , a36[ 3] , a37[ 3] , a38[ 3] , a39[ 3] , a40[ 3] , a41[ 3] , a42[ 3] , a43[ 3] , a44[ 3] , a45[ 3] , a46[ 3] , a47[ 3] , a48[ 3] , a49[ 3]))); } }; } }
namespace nt2 { namespace meta { template<class Func , class A0> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints32_<A0>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints32_<A0>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints32_ , tag::sse_ > ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0> struct result<This(Func, A0)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1> inline typename meta::result_of<call(A0 const& , A1 const&)>::type operator()( A0 const& a0 , A1 const& a1 ) const { typedef typename result<call(A0 , A1)>::type ntype; typedef typename result<call(A0 , A1)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints32_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints32_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints32_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1> struct result<This(Func, A0 , A1)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 ) const { typedef typename result<call(A0 , A1 , A2)>::type ntype; typedef typename result<call(A0 , A1 , A2)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints32_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints32_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints32_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2> struct result<This(Func, A0 , A1 , A2)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 ) const { typedef typename result<call(A0 , A1 , A2 , A3)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints32_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints32_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints32_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3> struct result<This(Func, A0 , A1 , A2 , A3)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints32_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints32_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints32_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4> struct result<This(Func, A0 , A1 , A2 , A3 , A4)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints32_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints32_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints32_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints32_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints32_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints32_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints32_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints32_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints32_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints32_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints32_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints32_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints32_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints32_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints32_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints32_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints32_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints32_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints32_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints32_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints32_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints32_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints32_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints32_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints32_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints32_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints32_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints32_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints32_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints32_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints32_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints32_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints32_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints32_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints32_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints32_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints32_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints32_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints32_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints32_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints32_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints32_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints32_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints32_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints32_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints32_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints32_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints32_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints32_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints32_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints32_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints32_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints32_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints32_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints32_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints32_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints32_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints32_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints32_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints32_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints32_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints32_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints32_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints32_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints32_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints32_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints32_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints32_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints32_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints32_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints32_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints32_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints32_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints32_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints32_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints32_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints32_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints32_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints32_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints32_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints32_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints32_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints32_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints32_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints32_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints32_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints32_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2] , a34[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3] , a34[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints32_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints32_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints32_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2] , a34[ 2] , a35[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3] , a34[ 3] , a35[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints32_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints32_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints32_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2] , a34[ 2] , a35[ 2] , a36[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3] , a34[ 3] , a35[ 3] , a36[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints32_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints32_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints32_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2] , a34[ 2] , a35[ 2] , a36[ 2] , a37[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3] , a34[ 3] , a35[ 3] , a36[ 3] , a37[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints32_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints32_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints32_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2] , a34[ 2] , a35[ 2] , a36[ 2] , a37[ 2] , a38[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3] , a34[ 3] , a35[ 3] , a36[ 3] , a37[ 3] , a38[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints32_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints32_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints32_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2] , a34[ 2] , a35[ 2] , a36[ 2] , a37[ 2] , a38[ 2] , a39[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3] , a34[ 3] , a35[ 3] , a36[ 3] , a37[ 3] , a38[ 3] , a39[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints32_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A39>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints32_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A39>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints32_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type , typename meta::scalar_of<A39>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0] , a40[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1] , a40[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2] , a34[ 2] , a35[ 2] , a36[ 2] , a37[ 2] , a38[ 2] , a39[ 2] , a40[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3] , a34[ 3] , a35[ 3] , a36[ 3] , a37[ 3] , a38[ 3] , a39[ 3] , a40[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints32_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A39>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A40>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints32_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A39>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A40>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints32_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type , typename meta::scalar_of<A39>::type , typename meta::scalar_of<A40>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const& , A41 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 , A41 const& a41 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0] , a40[ 0] , a41[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1] , a40[ 1] , a41[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2] , a34[ 2] , a35[ 2] , a36[ 2] , a37[ 2] , a38[ 2] , a39[ 2] , a40[ 2] , a41[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3] , a34[ 3] , a35[ 3] , a36[ 3] , a37[ 3] , a38[ 3] , a39[ 3] , a40[ 3] , a41[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints32_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A39>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A40>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A41>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints32_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A39>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A40>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A41>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints32_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type , typename meta::scalar_of<A39>::type , typename meta::scalar_of<A40>::type , typename meta::scalar_of<A41>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const& , A41 const& , A42 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 , A41 const& a41 , A42 const& a42 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0] , a40[ 0] , a41[ 0] , a42[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1] , a40[ 1] , a41[ 1] , a42[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2] , a34[ 2] , a35[ 2] , a36[ 2] , a37[ 2] , a38[ 2] , a39[ 2] , a40[ 2] , a41[ 2] , a42[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3] , a34[ 3] , a35[ 3] , a36[ 3] , a37[ 3] , a38[ 3] , a39[ 3] , a40[ 3] , a41[ 3] , a42[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints32_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A39>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A40>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A41>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A42>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints32_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A39>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A40>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A41>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A42>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints32_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type , typename meta::scalar_of<A39>::type , typename meta::scalar_of<A40>::type , typename meta::scalar_of<A41>::type , typename meta::scalar_of<A42>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const& , A41 const& , A42 const& , A43 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 , A41 const& a41 , A42 const& a42 , A43 const& a43 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0] , a40[ 0] , a41[ 0] , a42[ 0] , a43[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1] , a40[ 1] , a41[ 1] , a42[ 1] , a43[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2] , a34[ 2] , a35[ 2] , a36[ 2] , a37[ 2] , a38[ 2] , a39[ 2] , a40[ 2] , a41[ 2] , a42[ 2] , a43[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3] , a34[ 3] , a35[ 3] , a36[ 3] , a37[ 3] , a38[ 3] , a39[ 3] , a40[ 3] , a41[ 3] , a42[ 3] , a43[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints32_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A39>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A40>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A41>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A42>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A43>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints32_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A39>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A40>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A41>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A42>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A43>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints32_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type , typename meta::scalar_of<A39>::type , typename meta::scalar_of<A40>::type , typename meta::scalar_of<A41>::type , typename meta::scalar_of<A42>::type , typename meta::scalar_of<A43>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const& , A41 const& , A42 const& , A43 const& , A44 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 , A41 const& a41 , A42 const& a42 , A43 const& a43 , A44 const& a44 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0] , a40[ 0] , a41[ 0] , a42[ 0] , a43[ 0] , a44[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1] , a40[ 1] , a41[ 1] , a42[ 1] , a43[ 1] , a44[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2] , a34[ 2] , a35[ 2] , a36[ 2] , a37[ 2] , a38[ 2] , a39[ 2] , a40[ 2] , a41[ 2] , a42[ 2] , a43[ 2] , a44[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3] , a34[ 3] , a35[ 3] , a36[ 3] , a37[ 3] , a38[ 3] , a39[ 3] , a40[ 3] , a41[ 3] , a42[ 3] , a43[ 3] , a44[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints32_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A39>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A40>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A41>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A42>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A43>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A44>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints32_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A39>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A40>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A41>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A42>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A43>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A44>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints32_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type , typename meta::scalar_of<A39>::type , typename meta::scalar_of<A40>::type , typename meta::scalar_of<A41>::type , typename meta::scalar_of<A42>::type , typename meta::scalar_of<A43>::type , typename meta::scalar_of<A44>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const& , A41 const& , A42 const& , A43 const& , A44 const& , A45 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 , A41 const& a41 , A42 const& a42 , A43 const& a43 , A44 const& a44 , A45 const& a45 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0] , a40[ 0] , a41[ 0] , a42[ 0] , a43[ 0] , a44[ 0] , a45[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1] , a40[ 1] , a41[ 1] , a42[ 1] , a43[ 1] , a44[ 1] , a45[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2] , a34[ 2] , a35[ 2] , a36[ 2] , a37[ 2] , a38[ 2] , a39[ 2] , a40[ 2] , a41[ 2] , a42[ 2] , a43[ 2] , a44[ 2] , a45[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3] , a34[ 3] , a35[ 3] , a36[ 3] , a37[ 3] , a38[ 3] , a39[ 3] , a40[ 3] , a41[ 3] , a42[ 3] , a43[ 3] , a44[ 3] , a45[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints32_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A39>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A40>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A41>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A42>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A43>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A44>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A45>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints32_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A39>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A40>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A41>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A42>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A43>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A44>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A45>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints32_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type , typename meta::scalar_of<A39>::type , typename meta::scalar_of<A40>::type , typename meta::scalar_of<A41>::type , typename meta::scalar_of<A42>::type , typename meta::scalar_of<A43>::type , typename meta::scalar_of<A44>::type , typename meta::scalar_of<A45>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const& , A41 const& , A42 const& , A43 const& , A44 const& , A45 const& , A46 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 , A41 const& a41 , A42 const& a42 , A43 const& a43 , A44 const& a44 , A45 const& a45 , A46 const& a46 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0] , a40[ 0] , a41[ 0] , a42[ 0] , a43[ 0] , a44[ 0] , a45[ 0] , a46[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1] , a40[ 1] , a41[ 1] , a42[ 1] , a43[ 1] , a44[ 1] , a45[ 1] , a46[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2] , a34[ 2] , a35[ 2] , a36[ 2] , a37[ 2] , a38[ 2] , a39[ 2] , a40[ 2] , a41[ 2] , a42[ 2] , a43[ 2] , a44[ 2] , a45[ 2] , a46[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3] , a34[ 3] , a35[ 3] , a36[ 3] , a37[ 3] , a38[ 3] , a39[ 3] , a40[ 3] , a41[ 3] , a42[ 3] , a43[ 3] , a44[ 3] , a45[ 3] , a46[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints32_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A39>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A40>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A41>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A42>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A43>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A44>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A45>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A46>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints32_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A39>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A40>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A41>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A42>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A43>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A44>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A45>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A46>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints32_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type , typename meta::scalar_of<A39>::type , typename meta::scalar_of<A40>::type , typename meta::scalar_of<A41>::type , typename meta::scalar_of<A42>::type , typename meta::scalar_of<A43>::type , typename meta::scalar_of<A44>::type , typename meta::scalar_of<A45>::type , typename meta::scalar_of<A46>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46 , class A47> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const& , A41 const& , A42 const& , A43 const& , A44 const& , A45 const& , A46 const& , A47 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 , A41 const& a41 , A42 const& a42 , A43 const& a43 , A44 const& a44 , A45 const& a45 , A46 const& a46 , A47 const& a47 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46 , A47)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46 , A47)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0] , a40[ 0] , a41[ 0] , a42[ 0] , a43[ 0] , a44[ 0] , a45[ 0] , a46[ 0] , a47[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1] , a40[ 1] , a41[ 1] , a42[ 1] , a43[ 1] , a44[ 1] , a45[ 1] , a46[ 1] , a47[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2] , a34[ 2] , a35[ 2] , a36[ 2] , a37[ 2] , a38[ 2] , a39[ 2] , a40[ 2] , a41[ 2] , a42[ 2] , a43[ 2] , a44[ 2] , a45[ 2] , a46[ 2] , a47[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3] , a34[ 3] , a35[ 3] , a36[ 3] , a37[ 3] , a38[ 3] , a39[ 3] , a40[ 3] , a41[ 3] , a42[ 3] , a43[ 3] , a44[ 3] , a45[ 3] , a46[ 3] , a47[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46 , class A47> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints32_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A39>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A40>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A41>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A42>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A43>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A44>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A45>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A46>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A47>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints32_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A39>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A40>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A41>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A42>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A43>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A44>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A45>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A46>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A47>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints32_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46 , class A47> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46 , A47)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type , typename meta::scalar_of<A39>::type , typename meta::scalar_of<A40>::type , typename meta::scalar_of<A41>::type , typename meta::scalar_of<A42>::type , typename meta::scalar_of<A43>::type , typename meta::scalar_of<A44>::type , typename meta::scalar_of<A45>::type , typename meta::scalar_of<A46>::type , typename meta::scalar_of<A47>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46 , class A47 , class A48> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const& , A41 const& , A42 const& , A43 const& , A44 const& , A45 const& , A46 const& , A47 const& , A48 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 , A41 const& a41 , A42 const& a42 , A43 const& a43 , A44 const& a44 , A45 const& a45 , A46 const& a46 , A47 const& a47 , A48 const& a48 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46 , A47 , A48)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46 , A47 , A48)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0] , a40[ 0] , a41[ 0] , a42[ 0] , a43[ 0] , a44[ 0] , a45[ 0] , a46[ 0] , a47[ 0] , a48[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1] , a40[ 1] , a41[ 1] , a42[ 1] , a43[ 1] , a44[ 1] , a45[ 1] , a46[ 1] , a47[ 1] , a48[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2] , a34[ 2] , a35[ 2] , a36[ 2] , a37[ 2] , a38[ 2] , a39[ 2] , a40[ 2] , a41[ 2] , a42[ 2] , a43[ 2] , a44[ 2] , a45[ 2] , a46[ 2] , a47[ 2] , a48[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3] , a34[ 3] , a35[ 3] , a36[ 3] , a37[ 3] , a38[ 3] , a39[ 3] , a40[ 3] , a41[ 3] , a42[ 3] , a43[ 3] , a44[ 3] , a45[ 3] , a46[ 3] , a47[ 3] , a48[ 3]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46 , class A47 , class A48> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints32_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A39>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A40>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A41>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A42>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A43>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A44>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A45>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A46>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A47>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A48>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints32_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A39>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A40>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A41>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A42>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A43>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A44>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A45>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A46>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A47>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A48>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints32_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46 , class A47 , class A48> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46 , A47 , A48)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type , typename meta::scalar_of<A39>::type , typename meta::scalar_of<A40>::type , typename meta::scalar_of<A41>::type , typename meta::scalar_of<A42>::type , typename meta::scalar_of<A43>::type , typename meta::scalar_of<A44>::type , typename meta::scalar_of<A45>::type , typename meta::scalar_of<A46>::type , typename meta::scalar_of<A47>::type , typename meta::scalar_of<A48>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46 , class A47 , class A48 , class A49> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const& , A41 const& , A42 const& , A43 const& , A44 const& , A45 const& , A46 const& , A47 const& , A48 const& , A49 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 , A41 const& a41 , A42 const& a42 , A43 const& a43 , A44 const& a44 , A45 const& a45 , A46 const& a46 , A47 const& a47 , A48 const& a48 , A49 const& a49 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46 , A47 , A48 , A49)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46 , A47 , A48 , A49)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0] , a40[ 0] , a41[ 0] , a42[ 0] , a43[ 0] , a44[ 0] , a45[ 0] , a46[ 0] , a47[ 0] , a48[ 0] , a49[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1] , a40[ 1] , a41[ 1] , a42[ 1] , a43[ 1] , a44[ 1] , a45[ 1] , a46[ 1] , a47[ 1] , a48[ 1] , a49[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2] , a34[ 2] , a35[ 2] , a36[ 2] , a37[ 2] , a38[ 2] , a39[ 2] , a40[ 2] , a41[ 2] , a42[ 2] , a43[ 2] , a44[ 2] , a45[ 2] , a46[ 2] , a47[ 2] , a48[ 2] , a49[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3] , a34[ 3] , a35[ 3] , a36[ 3] , a37[ 3] , a38[ 3] , a39[ 3] , a40[ 3] , a41[ 3] , a42[ 3] , a43[ 3] , a44[ 3] , a45[ 3] , a46[ 3] , a47[ 3] , a48[ 3] , a49[ 3]))); } }; } }
namespace nt2 { namespace meta { template<class Func , class A0> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints16_<A0>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints16_<A0>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints16_ , tag::sse_ > ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0> struct result<This(Func, A0)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1> inline typename meta::result_of<call(A0 const& , A1 const&)>::type operator()( A0 const& a0 , A1 const& a1 ) const { typedef typename result<call(A0 , A1)>::type ntype; typedef typename result<call(A0 , A1)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints16_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints16_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints16_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1> struct result<This(Func, A0 , A1)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 ) const { typedef typename result<call(A0 , A1 , A2)>::type ntype; typedef typename result<call(A0 , A1 , A2)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints16_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints16_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints16_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2> struct result<This(Func, A0 , A1 , A2)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 ) const { typedef typename result<call(A0 , A1 , A2 , A3)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints16_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints16_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints16_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3> struct result<This(Func, A0 , A1 , A2 , A3)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints16_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints16_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints16_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4> struct result<This(Func, A0 , A1 , A2 , A3 , A4)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints16_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints16_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints16_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints16_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints16_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints16_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints16_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints16_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints16_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints16_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints16_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints16_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints16_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints16_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints16_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints16_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints16_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints16_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints16_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints16_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints16_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints16_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints16_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints16_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints16_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints16_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints16_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints16_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints16_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints16_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints16_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints16_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints16_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints16_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints16_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints16_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints16_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints16_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints16_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4] , a18[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5] , a18[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6] , a18[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7] , a18[ 7]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints16_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints16_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints16_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4] , a18[ 4] , a19[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5] , a18[ 5] , a19[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6] , a18[ 6] , a19[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7] , a18[ 7] , a19[ 7]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints16_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints16_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints16_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4] , a18[ 4] , a19[ 4] , a20[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5] , a18[ 5] , a19[ 5] , a20[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6] , a18[ 6] , a19[ 6] , a20[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7] , a18[ 7] , a19[ 7] , a20[ 7]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints16_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints16_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints16_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4] , a18[ 4] , a19[ 4] , a20[ 4] , a21[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5] , a18[ 5] , a19[ 5] , a20[ 5] , a21[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6] , a18[ 6] , a19[ 6] , a20[ 6] , a21[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7] , a18[ 7] , a19[ 7] , a20[ 7] , a21[ 7]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints16_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints16_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints16_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4] , a18[ 4] , a19[ 4] , a20[ 4] , a21[ 4] , a22[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5] , a18[ 5] , a19[ 5] , a20[ 5] , a21[ 5] , a22[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6] , a18[ 6] , a19[ 6] , a20[ 6] , a21[ 6] , a22[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7] , a18[ 7] , a19[ 7] , a20[ 7] , a21[ 7] , a22[ 7]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints16_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints16_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints16_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4] , a18[ 4] , a19[ 4] , a20[ 4] , a21[ 4] , a22[ 4] , a23[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5] , a18[ 5] , a19[ 5] , a20[ 5] , a21[ 5] , a22[ 5] , a23[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6] , a18[ 6] , a19[ 6] , a20[ 6] , a21[ 6] , a22[ 6] , a23[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7] , a18[ 7] , a19[ 7] , a20[ 7] , a21[ 7] , a22[ 7] , a23[ 7]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints16_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints16_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints16_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4] , a18[ 4] , a19[ 4] , a20[ 4] , a21[ 4] , a22[ 4] , a23[ 4] , a24[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5] , a18[ 5] , a19[ 5] , a20[ 5] , a21[ 5] , a22[ 5] , a23[ 5] , a24[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6] , a18[ 6] , a19[ 6] , a20[ 6] , a21[ 6] , a22[ 6] , a23[ 6] , a24[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7] , a18[ 7] , a19[ 7] , a20[ 7] , a21[ 7] , a22[ 7] , a23[ 7] , a24[ 7]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints16_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints16_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints16_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4] , a18[ 4] , a19[ 4] , a20[ 4] , a21[ 4] , a22[ 4] , a23[ 4] , a24[ 4] , a25[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5] , a18[ 5] , a19[ 5] , a20[ 5] , a21[ 5] , a22[ 5] , a23[ 5] , a24[ 5] , a25[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6] , a18[ 6] , a19[ 6] , a20[ 6] , a21[ 6] , a22[ 6] , a23[ 6] , a24[ 6] , a25[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7] , a18[ 7] , a19[ 7] , a20[ 7] , a21[ 7] , a22[ 7] , a23[ 7] , a24[ 7] , a25[ 7]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints16_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints16_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints16_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4] , a18[ 4] , a19[ 4] , a20[ 4] , a21[ 4] , a22[ 4] , a23[ 4] , a24[ 4] , a25[ 4] , a26[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5] , a18[ 5] , a19[ 5] , a20[ 5] , a21[ 5] , a22[ 5] , a23[ 5] , a24[ 5] , a25[ 5] , a26[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6] , a18[ 6] , a19[ 6] , a20[ 6] , a21[ 6] , a22[ 6] , a23[ 6] , a24[ 6] , a25[ 6] , a26[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7] , a18[ 7] , a19[ 7] , a20[ 7] , a21[ 7] , a22[ 7] , a23[ 7] , a24[ 7] , a25[ 7] , a26[ 7]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints16_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints16_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints16_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4] , a18[ 4] , a19[ 4] , a20[ 4] , a21[ 4] , a22[ 4] , a23[ 4] , a24[ 4] , a25[ 4] , a26[ 4] , a27[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5] , a18[ 5] , a19[ 5] , a20[ 5] , a21[ 5] , a22[ 5] , a23[ 5] , a24[ 5] , a25[ 5] , a26[ 5] , a27[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6] , a18[ 6] , a19[ 6] , a20[ 6] , a21[ 6] , a22[ 6] , a23[ 6] , a24[ 6] , a25[ 6] , a26[ 6] , a27[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7] , a18[ 7] , a19[ 7] , a20[ 7] , a21[ 7] , a22[ 7] , a23[ 7] , a24[ 7] , a25[ 7] , a26[ 7] , a27[ 7]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints16_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints16_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints16_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4] , a18[ 4] , a19[ 4] , a20[ 4] , a21[ 4] , a22[ 4] , a23[ 4] , a24[ 4] , a25[ 4] , a26[ 4] , a27[ 4] , a28[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5] , a18[ 5] , a19[ 5] , a20[ 5] , a21[ 5] , a22[ 5] , a23[ 5] , a24[ 5] , a25[ 5] , a26[ 5] , a27[ 5] , a28[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6] , a18[ 6] , a19[ 6] , a20[ 6] , a21[ 6] , a22[ 6] , a23[ 6] , a24[ 6] , a25[ 6] , a26[ 6] , a27[ 6] , a28[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7] , a18[ 7] , a19[ 7] , a20[ 7] , a21[ 7] , a22[ 7] , a23[ 7] , a24[ 7] , a25[ 7] , a26[ 7] , a27[ 7] , a28[ 7]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints16_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints16_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints16_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4] , a18[ 4] , a19[ 4] , a20[ 4] , a21[ 4] , a22[ 4] , a23[ 4] , a24[ 4] , a25[ 4] , a26[ 4] , a27[ 4] , a28[ 4] , a29[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5] , a18[ 5] , a19[ 5] , a20[ 5] , a21[ 5] , a22[ 5] , a23[ 5] , a24[ 5] , a25[ 5] , a26[ 5] , a27[ 5] , a28[ 5] , a29[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6] , a18[ 6] , a19[ 6] , a20[ 6] , a21[ 6] , a22[ 6] , a23[ 6] , a24[ 6] , a25[ 6] , a26[ 6] , a27[ 6] , a28[ 6] , a29[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7] , a18[ 7] , a19[ 7] , a20[ 7] , a21[ 7] , a22[ 7] , a23[ 7] , a24[ 7] , a25[ 7] , a26[ 7] , a27[ 7] , a28[ 7] , a29[ 7]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints16_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints16_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints16_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4] , a18[ 4] , a19[ 4] , a20[ 4] , a21[ 4] , a22[ 4] , a23[ 4] , a24[ 4] , a25[ 4] , a26[ 4] , a27[ 4] , a28[ 4] , a29[ 4] , a30[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5] , a18[ 5] , a19[ 5] , a20[ 5] , a21[ 5] , a22[ 5] , a23[ 5] , a24[ 5] , a25[ 5] , a26[ 5] , a27[ 5] , a28[ 5] , a29[ 5] , a30[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6] , a18[ 6] , a19[ 6] , a20[ 6] , a21[ 6] , a22[ 6] , a23[ 6] , a24[ 6] , a25[ 6] , a26[ 6] , a27[ 6] , a28[ 6] , a29[ 6] , a30[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7] , a18[ 7] , a19[ 7] , a20[ 7] , a21[ 7] , a22[ 7] , a23[ 7] , a24[ 7] , a25[ 7] , a26[ 7] , a27[ 7] , a28[ 7] , a29[ 7] , a30[ 7]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints16_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints16_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints16_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4] , a18[ 4] , a19[ 4] , a20[ 4] , a21[ 4] , a22[ 4] , a23[ 4] , a24[ 4] , a25[ 4] , a26[ 4] , a27[ 4] , a28[ 4] , a29[ 4] , a30[ 4] , a31[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5] , a18[ 5] , a19[ 5] , a20[ 5] , a21[ 5] , a22[ 5] , a23[ 5] , a24[ 5] , a25[ 5] , a26[ 5] , a27[ 5] , a28[ 5] , a29[ 5] , a30[ 5] , a31[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6] , a18[ 6] , a19[ 6] , a20[ 6] , a21[ 6] , a22[ 6] , a23[ 6] , a24[ 6] , a25[ 6] , a26[ 6] , a27[ 6] , a28[ 6] , a29[ 6] , a30[ 6] , a31[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7] , a18[ 7] , a19[ 7] , a20[ 7] , a21[ 7] , a22[ 7] , a23[ 7] , a24[ 7] , a25[ 7] , a26[ 7] , a27[ 7] , a28[ 7] , a29[ 7] , a30[ 7] , a31[ 7]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints16_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints16_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints16_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4] , a18[ 4] , a19[ 4] , a20[ 4] , a21[ 4] , a22[ 4] , a23[ 4] , a24[ 4] , a25[ 4] , a26[ 4] , a27[ 4] , a28[ 4] , a29[ 4] , a30[ 4] , a31[ 4] , a32[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5] , a18[ 5] , a19[ 5] , a20[ 5] , a21[ 5] , a22[ 5] , a23[ 5] , a24[ 5] , a25[ 5] , a26[ 5] , a27[ 5] , a28[ 5] , a29[ 5] , a30[ 5] , a31[ 5] , a32[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6] , a18[ 6] , a19[ 6] , a20[ 6] , a21[ 6] , a22[ 6] , a23[ 6] , a24[ 6] , a25[ 6] , a26[ 6] , a27[ 6] , a28[ 6] , a29[ 6] , a30[ 6] , a31[ 6] , a32[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7] , a18[ 7] , a19[ 7] , a20[ 7] , a21[ 7] , a22[ 7] , a23[ 7] , a24[ 7] , a25[ 7] , a26[ 7] , a27[ 7] , a28[ 7] , a29[ 7] , a30[ 7] , a31[ 7] , a32[ 7]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints16_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints16_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints16_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4] , a18[ 4] , a19[ 4] , a20[ 4] , a21[ 4] , a22[ 4] , a23[ 4] , a24[ 4] , a25[ 4] , a26[ 4] , a27[ 4] , a28[ 4] , a29[ 4] , a30[ 4] , a31[ 4] , a32[ 4] , a33[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5] , a18[ 5] , a19[ 5] , a20[ 5] , a21[ 5] , a22[ 5] , a23[ 5] , a24[ 5] , a25[ 5] , a26[ 5] , a27[ 5] , a28[ 5] , a29[ 5] , a30[ 5] , a31[ 5] , a32[ 5] , a33[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6] , a18[ 6] , a19[ 6] , a20[ 6] , a21[ 6] , a22[ 6] , a23[ 6] , a24[ 6] , a25[ 6] , a26[ 6] , a27[ 6] , a28[ 6] , a29[ 6] , a30[ 6] , a31[ 6] , a32[ 6] , a33[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7] , a18[ 7] , a19[ 7] , a20[ 7] , a21[ 7] , a22[ 7] , a23[ 7] , a24[ 7] , a25[ 7] , a26[ 7] , a27[ 7] , a28[ 7] , a29[ 7] , a30[ 7] , a31[ 7] , a32[ 7] , a33[ 7]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints16_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints16_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints16_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2] , a34[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3] , a34[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4] , a18[ 4] , a19[ 4] , a20[ 4] , a21[ 4] , a22[ 4] , a23[ 4] , a24[ 4] , a25[ 4] , a26[ 4] , a27[ 4] , a28[ 4] , a29[ 4] , a30[ 4] , a31[ 4] , a32[ 4] , a33[ 4] , a34[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5] , a18[ 5] , a19[ 5] , a20[ 5] , a21[ 5] , a22[ 5] , a23[ 5] , a24[ 5] , a25[ 5] , a26[ 5] , a27[ 5] , a28[ 5] , a29[ 5] , a30[ 5] , a31[ 5] , a32[ 5] , a33[ 5] , a34[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6] , a18[ 6] , a19[ 6] , a20[ 6] , a21[ 6] , a22[ 6] , a23[ 6] , a24[ 6] , a25[ 6] , a26[ 6] , a27[ 6] , a28[ 6] , a29[ 6] , a30[ 6] , a31[ 6] , a32[ 6] , a33[ 6] , a34[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7] , a18[ 7] , a19[ 7] , a20[ 7] , a21[ 7] , a22[ 7] , a23[ 7] , a24[ 7] , a25[ 7] , a26[ 7] , a27[ 7] , a28[ 7] , a29[ 7] , a30[ 7] , a31[ 7] , a32[ 7] , a33[ 7] , a34[ 7]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints16_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints16_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints16_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2] , a34[ 2] , a35[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3] , a34[ 3] , a35[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4] , a18[ 4] , a19[ 4] , a20[ 4] , a21[ 4] , a22[ 4] , a23[ 4] , a24[ 4] , a25[ 4] , a26[ 4] , a27[ 4] , a28[ 4] , a29[ 4] , a30[ 4] , a31[ 4] , a32[ 4] , a33[ 4] , a34[ 4] , a35[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5] , a18[ 5] , a19[ 5] , a20[ 5] , a21[ 5] , a22[ 5] , a23[ 5] , a24[ 5] , a25[ 5] , a26[ 5] , a27[ 5] , a28[ 5] , a29[ 5] , a30[ 5] , a31[ 5] , a32[ 5] , a33[ 5] , a34[ 5] , a35[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6] , a18[ 6] , a19[ 6] , a20[ 6] , a21[ 6] , a22[ 6] , a23[ 6] , a24[ 6] , a25[ 6] , a26[ 6] , a27[ 6] , a28[ 6] , a29[ 6] , a30[ 6] , a31[ 6] , a32[ 6] , a33[ 6] , a34[ 6] , a35[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7] , a18[ 7] , a19[ 7] , a20[ 7] , a21[ 7] , a22[ 7] , a23[ 7] , a24[ 7] , a25[ 7] , a26[ 7] , a27[ 7] , a28[ 7] , a29[ 7] , a30[ 7] , a31[ 7] , a32[ 7] , a33[ 7] , a34[ 7] , a35[ 7]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints16_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints16_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints16_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2] , a34[ 2] , a35[ 2] , a36[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3] , a34[ 3] , a35[ 3] , a36[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4] , a18[ 4] , a19[ 4] , a20[ 4] , a21[ 4] , a22[ 4] , a23[ 4] , a24[ 4] , a25[ 4] , a26[ 4] , a27[ 4] , a28[ 4] , a29[ 4] , a30[ 4] , a31[ 4] , a32[ 4] , a33[ 4] , a34[ 4] , a35[ 4] , a36[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5] , a18[ 5] , a19[ 5] , a20[ 5] , a21[ 5] , a22[ 5] , a23[ 5] , a24[ 5] , a25[ 5] , a26[ 5] , a27[ 5] , a28[ 5] , a29[ 5] , a30[ 5] , a31[ 5] , a32[ 5] , a33[ 5] , a34[ 5] , a35[ 5] , a36[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6] , a18[ 6] , a19[ 6] , a20[ 6] , a21[ 6] , a22[ 6] , a23[ 6] , a24[ 6] , a25[ 6] , a26[ 6] , a27[ 6] , a28[ 6] , a29[ 6] , a30[ 6] , a31[ 6] , a32[ 6] , a33[ 6] , a34[ 6] , a35[ 6] , a36[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7] , a18[ 7] , a19[ 7] , a20[ 7] , a21[ 7] , a22[ 7] , a23[ 7] , a24[ 7] , a25[ 7] , a26[ 7] , a27[ 7] , a28[ 7] , a29[ 7] , a30[ 7] , a31[ 7] , a32[ 7] , a33[ 7] , a34[ 7] , a35[ 7] , a36[ 7]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints16_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints16_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints16_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2] , a34[ 2] , a35[ 2] , a36[ 2] , a37[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3] , a34[ 3] , a35[ 3] , a36[ 3] , a37[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4] , a18[ 4] , a19[ 4] , a20[ 4] , a21[ 4] , a22[ 4] , a23[ 4] , a24[ 4] , a25[ 4] , a26[ 4] , a27[ 4] , a28[ 4] , a29[ 4] , a30[ 4] , a31[ 4] , a32[ 4] , a33[ 4] , a34[ 4] , a35[ 4] , a36[ 4] , a37[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5] , a18[ 5] , a19[ 5] , a20[ 5] , a21[ 5] , a22[ 5] , a23[ 5] , a24[ 5] , a25[ 5] , a26[ 5] , a27[ 5] , a28[ 5] , a29[ 5] , a30[ 5] , a31[ 5] , a32[ 5] , a33[ 5] , a34[ 5] , a35[ 5] , a36[ 5] , a37[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6] , a18[ 6] , a19[ 6] , a20[ 6] , a21[ 6] , a22[ 6] , a23[ 6] , a24[ 6] , a25[ 6] , a26[ 6] , a27[ 6] , a28[ 6] , a29[ 6] , a30[ 6] , a31[ 6] , a32[ 6] , a33[ 6] , a34[ 6] , a35[ 6] , a36[ 6] , a37[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7] , a18[ 7] , a19[ 7] , a20[ 7] , a21[ 7] , a22[ 7] , a23[ 7] , a24[ 7] , a25[ 7] , a26[ 7] , a27[ 7] , a28[ 7] , a29[ 7] , a30[ 7] , a31[ 7] , a32[ 7] , a33[ 7] , a34[ 7] , a35[ 7] , a36[ 7] , a37[ 7]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints16_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints16_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints16_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2] , a34[ 2] , a35[ 2] , a36[ 2] , a37[ 2] , a38[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3] , a34[ 3] , a35[ 3] , a36[ 3] , a37[ 3] , a38[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4] , a18[ 4] , a19[ 4] , a20[ 4] , a21[ 4] , a22[ 4] , a23[ 4] , a24[ 4] , a25[ 4] , a26[ 4] , a27[ 4] , a28[ 4] , a29[ 4] , a30[ 4] , a31[ 4] , a32[ 4] , a33[ 4] , a34[ 4] , a35[ 4] , a36[ 4] , a37[ 4] , a38[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5] , a18[ 5] , a19[ 5] , a20[ 5] , a21[ 5] , a22[ 5] , a23[ 5] , a24[ 5] , a25[ 5] , a26[ 5] , a27[ 5] , a28[ 5] , a29[ 5] , a30[ 5] , a31[ 5] , a32[ 5] , a33[ 5] , a34[ 5] , a35[ 5] , a36[ 5] , a37[ 5] , a38[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6] , a18[ 6] , a19[ 6] , a20[ 6] , a21[ 6] , a22[ 6] , a23[ 6] , a24[ 6] , a25[ 6] , a26[ 6] , a27[ 6] , a28[ 6] , a29[ 6] , a30[ 6] , a31[ 6] , a32[ 6] , a33[ 6] , a34[ 6] , a35[ 6] , a36[ 6] , a37[ 6] , a38[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7] , a18[ 7] , a19[ 7] , a20[ 7] , a21[ 7] , a22[ 7] , a23[ 7] , a24[ 7] , a25[ 7] , a26[ 7] , a27[ 7] , a28[ 7] , a29[ 7] , a30[ 7] , a31[ 7] , a32[ 7] , a33[ 7] , a34[ 7] , a35[ 7] , a36[ 7] , a37[ 7] , a38[ 7]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints16_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints16_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints16_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2] , a34[ 2] , a35[ 2] , a36[ 2] , a37[ 2] , a38[ 2] , a39[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3] , a34[ 3] , a35[ 3] , a36[ 3] , a37[ 3] , a38[ 3] , a39[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4] , a18[ 4] , a19[ 4] , a20[ 4] , a21[ 4] , a22[ 4] , a23[ 4] , a24[ 4] , a25[ 4] , a26[ 4] , a27[ 4] , a28[ 4] , a29[ 4] , a30[ 4] , a31[ 4] , a32[ 4] , a33[ 4] , a34[ 4] , a35[ 4] , a36[ 4] , a37[ 4] , a38[ 4] , a39[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5] , a18[ 5] , a19[ 5] , a20[ 5] , a21[ 5] , a22[ 5] , a23[ 5] , a24[ 5] , a25[ 5] , a26[ 5] , a27[ 5] , a28[ 5] , a29[ 5] , a30[ 5] , a31[ 5] , a32[ 5] , a33[ 5] , a34[ 5] , a35[ 5] , a36[ 5] , a37[ 5] , a38[ 5] , a39[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6] , a18[ 6] , a19[ 6] , a20[ 6] , a21[ 6] , a22[ 6] , a23[ 6] , a24[ 6] , a25[ 6] , a26[ 6] , a27[ 6] , a28[ 6] , a29[ 6] , a30[ 6] , a31[ 6] , a32[ 6] , a33[ 6] , a34[ 6] , a35[ 6] , a36[ 6] , a37[ 6] , a38[ 6] , a39[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7] , a18[ 7] , a19[ 7] , a20[ 7] , a21[ 7] , a22[ 7] , a23[ 7] , a24[ 7] , a25[ 7] , a26[ 7] , a27[ 7] , a28[ 7] , a29[ 7] , a30[ 7] , a31[ 7] , a32[ 7] , a33[ 7] , a34[ 7] , a35[ 7] , a36[ 7] , a37[ 7] , a38[ 7] , a39[ 7]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints16_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A39>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints16_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A39>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints16_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type , typename meta::scalar_of<A39>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0] , a40[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1] , a40[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2] , a34[ 2] , a35[ 2] , a36[ 2] , a37[ 2] , a38[ 2] , a39[ 2] , a40[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3] , a34[ 3] , a35[ 3] , a36[ 3] , a37[ 3] , a38[ 3] , a39[ 3] , a40[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4] , a18[ 4] , a19[ 4] , a20[ 4] , a21[ 4] , a22[ 4] , a23[ 4] , a24[ 4] , a25[ 4] , a26[ 4] , a27[ 4] , a28[ 4] , a29[ 4] , a30[ 4] , a31[ 4] , a32[ 4] , a33[ 4] , a34[ 4] , a35[ 4] , a36[ 4] , a37[ 4] , a38[ 4] , a39[ 4] , a40[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5] , a18[ 5] , a19[ 5] , a20[ 5] , a21[ 5] , a22[ 5] , a23[ 5] , a24[ 5] , a25[ 5] , a26[ 5] , a27[ 5] , a28[ 5] , a29[ 5] , a30[ 5] , a31[ 5] , a32[ 5] , a33[ 5] , a34[ 5] , a35[ 5] , a36[ 5] , a37[ 5] , a38[ 5] , a39[ 5] , a40[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6] , a18[ 6] , a19[ 6] , a20[ 6] , a21[ 6] , a22[ 6] , a23[ 6] , a24[ 6] , a25[ 6] , a26[ 6] , a27[ 6] , a28[ 6] , a29[ 6] , a30[ 6] , a31[ 6] , a32[ 6] , a33[ 6] , a34[ 6] , a35[ 6] , a36[ 6] , a37[ 6] , a38[ 6] , a39[ 6] , a40[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7] , a18[ 7] , a19[ 7] , a20[ 7] , a21[ 7] , a22[ 7] , a23[ 7] , a24[ 7] , a25[ 7] , a26[ 7] , a27[ 7] , a28[ 7] , a29[ 7] , a30[ 7] , a31[ 7] , a32[ 7] , a33[ 7] , a34[ 7] , a35[ 7] , a36[ 7] , a37[ 7] , a38[ 7] , a39[ 7] , a40[ 7]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints16_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A39>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A40>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints16_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A39>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A40>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints16_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type , typename meta::scalar_of<A39>::type , typename meta::scalar_of<A40>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const& , A41 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 , A41 const& a41 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0] , a40[ 0] , a41[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1] , a40[ 1] , a41[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2] , a34[ 2] , a35[ 2] , a36[ 2] , a37[ 2] , a38[ 2] , a39[ 2] , a40[ 2] , a41[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3] , a34[ 3] , a35[ 3] , a36[ 3] , a37[ 3] , a38[ 3] , a39[ 3] , a40[ 3] , a41[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4] , a18[ 4] , a19[ 4] , a20[ 4] , a21[ 4] , a22[ 4] , a23[ 4] , a24[ 4] , a25[ 4] , a26[ 4] , a27[ 4] , a28[ 4] , a29[ 4] , a30[ 4] , a31[ 4] , a32[ 4] , a33[ 4] , a34[ 4] , a35[ 4] , a36[ 4] , a37[ 4] , a38[ 4] , a39[ 4] , a40[ 4] , a41[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5] , a18[ 5] , a19[ 5] , a20[ 5] , a21[ 5] , a22[ 5] , a23[ 5] , a24[ 5] , a25[ 5] , a26[ 5] , a27[ 5] , a28[ 5] , a29[ 5] , a30[ 5] , a31[ 5] , a32[ 5] , a33[ 5] , a34[ 5] , a35[ 5] , a36[ 5] , a37[ 5] , a38[ 5] , a39[ 5] , a40[ 5] , a41[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6] , a18[ 6] , a19[ 6] , a20[ 6] , a21[ 6] , a22[ 6] , a23[ 6] , a24[ 6] , a25[ 6] , a26[ 6] , a27[ 6] , a28[ 6] , a29[ 6] , a30[ 6] , a31[ 6] , a32[ 6] , a33[ 6] , a34[ 6] , a35[ 6] , a36[ 6] , a37[ 6] , a38[ 6] , a39[ 6] , a40[ 6] , a41[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7] , a18[ 7] , a19[ 7] , a20[ 7] , a21[ 7] , a22[ 7] , a23[ 7] , a24[ 7] , a25[ 7] , a26[ 7] , a27[ 7] , a28[ 7] , a29[ 7] , a30[ 7] , a31[ 7] , a32[ 7] , a33[ 7] , a34[ 7] , a35[ 7] , a36[ 7] , a37[ 7] , a38[ 7] , a39[ 7] , a40[ 7] , a41[ 7]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints16_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A39>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A40>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A41>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints16_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A39>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A40>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A41>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints16_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type , typename meta::scalar_of<A39>::type , typename meta::scalar_of<A40>::type , typename meta::scalar_of<A41>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const& , A41 const& , A42 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 , A41 const& a41 , A42 const& a42 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0] , a40[ 0] , a41[ 0] , a42[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1] , a40[ 1] , a41[ 1] , a42[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2] , a34[ 2] , a35[ 2] , a36[ 2] , a37[ 2] , a38[ 2] , a39[ 2] , a40[ 2] , a41[ 2] , a42[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3] , a34[ 3] , a35[ 3] , a36[ 3] , a37[ 3] , a38[ 3] , a39[ 3] , a40[ 3] , a41[ 3] , a42[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4] , a18[ 4] , a19[ 4] , a20[ 4] , a21[ 4] , a22[ 4] , a23[ 4] , a24[ 4] , a25[ 4] , a26[ 4] , a27[ 4] , a28[ 4] , a29[ 4] , a30[ 4] , a31[ 4] , a32[ 4] , a33[ 4] , a34[ 4] , a35[ 4] , a36[ 4] , a37[ 4] , a38[ 4] , a39[ 4] , a40[ 4] , a41[ 4] , a42[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5] , a18[ 5] , a19[ 5] , a20[ 5] , a21[ 5] , a22[ 5] , a23[ 5] , a24[ 5] , a25[ 5] , a26[ 5] , a27[ 5] , a28[ 5] , a29[ 5] , a30[ 5] , a31[ 5] , a32[ 5] , a33[ 5] , a34[ 5] , a35[ 5] , a36[ 5] , a37[ 5] , a38[ 5] , a39[ 5] , a40[ 5] , a41[ 5] , a42[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6] , a18[ 6] , a19[ 6] , a20[ 6] , a21[ 6] , a22[ 6] , a23[ 6] , a24[ 6] , a25[ 6] , a26[ 6] , a27[ 6] , a28[ 6] , a29[ 6] , a30[ 6] , a31[ 6] , a32[ 6] , a33[ 6] , a34[ 6] , a35[ 6] , a36[ 6] , a37[ 6] , a38[ 6] , a39[ 6] , a40[ 6] , a41[ 6] , a42[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7] , a18[ 7] , a19[ 7] , a20[ 7] , a21[ 7] , a22[ 7] , a23[ 7] , a24[ 7] , a25[ 7] , a26[ 7] , a27[ 7] , a28[ 7] , a29[ 7] , a30[ 7] , a31[ 7] , a32[ 7] , a33[ 7] , a34[ 7] , a35[ 7] , a36[ 7] , a37[ 7] , a38[ 7] , a39[ 7] , a40[ 7] , a41[ 7] , a42[ 7]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints16_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A39>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A40>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A41>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A42>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints16_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A39>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A40>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A41>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A42>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints16_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type , typename meta::scalar_of<A39>::type , typename meta::scalar_of<A40>::type , typename meta::scalar_of<A41>::type , typename meta::scalar_of<A42>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const& , A41 const& , A42 const& , A43 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 , A41 const& a41 , A42 const& a42 , A43 const& a43 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0] , a40[ 0] , a41[ 0] , a42[ 0] , a43[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1] , a40[ 1] , a41[ 1] , a42[ 1] , a43[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2] , a34[ 2] , a35[ 2] , a36[ 2] , a37[ 2] , a38[ 2] , a39[ 2] , a40[ 2] , a41[ 2] , a42[ 2] , a43[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3] , a34[ 3] , a35[ 3] , a36[ 3] , a37[ 3] , a38[ 3] , a39[ 3] , a40[ 3] , a41[ 3] , a42[ 3] , a43[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4] , a18[ 4] , a19[ 4] , a20[ 4] , a21[ 4] , a22[ 4] , a23[ 4] , a24[ 4] , a25[ 4] , a26[ 4] , a27[ 4] , a28[ 4] , a29[ 4] , a30[ 4] , a31[ 4] , a32[ 4] , a33[ 4] , a34[ 4] , a35[ 4] , a36[ 4] , a37[ 4] , a38[ 4] , a39[ 4] , a40[ 4] , a41[ 4] , a42[ 4] , a43[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5] , a18[ 5] , a19[ 5] , a20[ 5] , a21[ 5] , a22[ 5] , a23[ 5] , a24[ 5] , a25[ 5] , a26[ 5] , a27[ 5] , a28[ 5] , a29[ 5] , a30[ 5] , a31[ 5] , a32[ 5] , a33[ 5] , a34[ 5] , a35[ 5] , a36[ 5] , a37[ 5] , a38[ 5] , a39[ 5] , a40[ 5] , a41[ 5] , a42[ 5] , a43[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6] , a18[ 6] , a19[ 6] , a20[ 6] , a21[ 6] , a22[ 6] , a23[ 6] , a24[ 6] , a25[ 6] , a26[ 6] , a27[ 6] , a28[ 6] , a29[ 6] , a30[ 6] , a31[ 6] , a32[ 6] , a33[ 6] , a34[ 6] , a35[ 6] , a36[ 6] , a37[ 6] , a38[ 6] , a39[ 6] , a40[ 6] , a41[ 6] , a42[ 6] , a43[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7] , a18[ 7] , a19[ 7] , a20[ 7] , a21[ 7] , a22[ 7] , a23[ 7] , a24[ 7] , a25[ 7] , a26[ 7] , a27[ 7] , a28[ 7] , a29[ 7] , a30[ 7] , a31[ 7] , a32[ 7] , a33[ 7] , a34[ 7] , a35[ 7] , a36[ 7] , a37[ 7] , a38[ 7] , a39[ 7] , a40[ 7] , a41[ 7] , a42[ 7] , a43[ 7]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints16_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A39>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A40>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A41>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A42>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A43>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints16_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A39>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A40>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A41>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A42>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A43>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints16_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type , typename meta::scalar_of<A39>::type , typename meta::scalar_of<A40>::type , typename meta::scalar_of<A41>::type , typename meta::scalar_of<A42>::type , typename meta::scalar_of<A43>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const& , A41 const& , A42 const& , A43 const& , A44 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 , A41 const& a41 , A42 const& a42 , A43 const& a43 , A44 const& a44 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0] , a40[ 0] , a41[ 0] , a42[ 0] , a43[ 0] , a44[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1] , a40[ 1] , a41[ 1] , a42[ 1] , a43[ 1] , a44[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2] , a34[ 2] , a35[ 2] , a36[ 2] , a37[ 2] , a38[ 2] , a39[ 2] , a40[ 2] , a41[ 2] , a42[ 2] , a43[ 2] , a44[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3] , a34[ 3] , a35[ 3] , a36[ 3] , a37[ 3] , a38[ 3] , a39[ 3] , a40[ 3] , a41[ 3] , a42[ 3] , a43[ 3] , a44[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4] , a18[ 4] , a19[ 4] , a20[ 4] , a21[ 4] , a22[ 4] , a23[ 4] , a24[ 4] , a25[ 4] , a26[ 4] , a27[ 4] , a28[ 4] , a29[ 4] , a30[ 4] , a31[ 4] , a32[ 4] , a33[ 4] , a34[ 4] , a35[ 4] , a36[ 4] , a37[ 4] , a38[ 4] , a39[ 4] , a40[ 4] , a41[ 4] , a42[ 4] , a43[ 4] , a44[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5] , a18[ 5] , a19[ 5] , a20[ 5] , a21[ 5] , a22[ 5] , a23[ 5] , a24[ 5] , a25[ 5] , a26[ 5] , a27[ 5] , a28[ 5] , a29[ 5] , a30[ 5] , a31[ 5] , a32[ 5] , a33[ 5] , a34[ 5] , a35[ 5] , a36[ 5] , a37[ 5] , a38[ 5] , a39[ 5] , a40[ 5] , a41[ 5] , a42[ 5] , a43[ 5] , a44[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6] , a18[ 6] , a19[ 6] , a20[ 6] , a21[ 6] , a22[ 6] , a23[ 6] , a24[ 6] , a25[ 6] , a26[ 6] , a27[ 6] , a28[ 6] , a29[ 6] , a30[ 6] , a31[ 6] , a32[ 6] , a33[ 6] , a34[ 6] , a35[ 6] , a36[ 6] , a37[ 6] , a38[ 6] , a39[ 6] , a40[ 6] , a41[ 6] , a42[ 6] , a43[ 6] , a44[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7] , a18[ 7] , a19[ 7] , a20[ 7] , a21[ 7] , a22[ 7] , a23[ 7] , a24[ 7] , a25[ 7] , a26[ 7] , a27[ 7] , a28[ 7] , a29[ 7] , a30[ 7] , a31[ 7] , a32[ 7] , a33[ 7] , a34[ 7] , a35[ 7] , a36[ 7] , a37[ 7] , a38[ 7] , a39[ 7] , a40[ 7] , a41[ 7] , a42[ 7] , a43[ 7] , a44[ 7]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints16_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A39>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A40>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A41>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A42>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A43>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A44>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints16_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A39>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A40>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A41>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A42>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A43>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A44>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints16_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type , typename meta::scalar_of<A39>::type , typename meta::scalar_of<A40>::type , typename meta::scalar_of<A41>::type , typename meta::scalar_of<A42>::type , typename meta::scalar_of<A43>::type , typename meta::scalar_of<A44>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const& , A41 const& , A42 const& , A43 const& , A44 const& , A45 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 , A41 const& a41 , A42 const& a42 , A43 const& a43 , A44 const& a44 , A45 const& a45 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0] , a40[ 0] , a41[ 0] , a42[ 0] , a43[ 0] , a44[ 0] , a45[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1] , a40[ 1] , a41[ 1] , a42[ 1] , a43[ 1] , a44[ 1] , a45[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2] , a34[ 2] , a35[ 2] , a36[ 2] , a37[ 2] , a38[ 2] , a39[ 2] , a40[ 2] , a41[ 2] , a42[ 2] , a43[ 2] , a44[ 2] , a45[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3] , a34[ 3] , a35[ 3] , a36[ 3] , a37[ 3] , a38[ 3] , a39[ 3] , a40[ 3] , a41[ 3] , a42[ 3] , a43[ 3] , a44[ 3] , a45[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4] , a18[ 4] , a19[ 4] , a20[ 4] , a21[ 4] , a22[ 4] , a23[ 4] , a24[ 4] , a25[ 4] , a26[ 4] , a27[ 4] , a28[ 4] , a29[ 4] , a30[ 4] , a31[ 4] , a32[ 4] , a33[ 4] , a34[ 4] , a35[ 4] , a36[ 4] , a37[ 4] , a38[ 4] , a39[ 4] , a40[ 4] , a41[ 4] , a42[ 4] , a43[ 4] , a44[ 4] , a45[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5] , a18[ 5] , a19[ 5] , a20[ 5] , a21[ 5] , a22[ 5] , a23[ 5] , a24[ 5] , a25[ 5] , a26[ 5] , a27[ 5] , a28[ 5] , a29[ 5] , a30[ 5] , a31[ 5] , a32[ 5] , a33[ 5] , a34[ 5] , a35[ 5] , a36[ 5] , a37[ 5] , a38[ 5] , a39[ 5] , a40[ 5] , a41[ 5] , a42[ 5] , a43[ 5] , a44[ 5] , a45[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6] , a18[ 6] , a19[ 6] , a20[ 6] , a21[ 6] , a22[ 6] , a23[ 6] , a24[ 6] , a25[ 6] , a26[ 6] , a27[ 6] , a28[ 6] , a29[ 6] , a30[ 6] , a31[ 6] , a32[ 6] , a33[ 6] , a34[ 6] , a35[ 6] , a36[ 6] , a37[ 6] , a38[ 6] , a39[ 6] , a40[ 6] , a41[ 6] , a42[ 6] , a43[ 6] , a44[ 6] , a45[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7] , a18[ 7] , a19[ 7] , a20[ 7] , a21[ 7] , a22[ 7] , a23[ 7] , a24[ 7] , a25[ 7] , a26[ 7] , a27[ 7] , a28[ 7] , a29[ 7] , a30[ 7] , a31[ 7] , a32[ 7] , a33[ 7] , a34[ 7] , a35[ 7] , a36[ 7] , a37[ 7] , a38[ 7] , a39[ 7] , a40[ 7] , a41[ 7] , a42[ 7] , a43[ 7] , a44[ 7] , a45[ 7]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints16_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A39>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A40>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A41>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A42>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A43>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A44>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A45>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints16_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A39>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A40>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A41>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A42>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A43>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A44>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A45>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints16_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type , typename meta::scalar_of<A39>::type , typename meta::scalar_of<A40>::type , typename meta::scalar_of<A41>::type , typename meta::scalar_of<A42>::type , typename meta::scalar_of<A43>::type , typename meta::scalar_of<A44>::type , typename meta::scalar_of<A45>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const& , A41 const& , A42 const& , A43 const& , A44 const& , A45 const& , A46 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 , A41 const& a41 , A42 const& a42 , A43 const& a43 , A44 const& a44 , A45 const& a45 , A46 const& a46 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0] , a40[ 0] , a41[ 0] , a42[ 0] , a43[ 0] , a44[ 0] , a45[ 0] , a46[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1] , a40[ 1] , a41[ 1] , a42[ 1] , a43[ 1] , a44[ 1] , a45[ 1] , a46[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2] , a34[ 2] , a35[ 2] , a36[ 2] , a37[ 2] , a38[ 2] , a39[ 2] , a40[ 2] , a41[ 2] , a42[ 2] , a43[ 2] , a44[ 2] , a45[ 2] , a46[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3] , a34[ 3] , a35[ 3] , a36[ 3] , a37[ 3] , a38[ 3] , a39[ 3] , a40[ 3] , a41[ 3] , a42[ 3] , a43[ 3] , a44[ 3] , a45[ 3] , a46[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4] , a18[ 4] , a19[ 4] , a20[ 4] , a21[ 4] , a22[ 4] , a23[ 4] , a24[ 4] , a25[ 4] , a26[ 4] , a27[ 4] , a28[ 4] , a29[ 4] , a30[ 4] , a31[ 4] , a32[ 4] , a33[ 4] , a34[ 4] , a35[ 4] , a36[ 4] , a37[ 4] , a38[ 4] , a39[ 4] , a40[ 4] , a41[ 4] , a42[ 4] , a43[ 4] , a44[ 4] , a45[ 4] , a46[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5] , a18[ 5] , a19[ 5] , a20[ 5] , a21[ 5] , a22[ 5] , a23[ 5] , a24[ 5] , a25[ 5] , a26[ 5] , a27[ 5] , a28[ 5] , a29[ 5] , a30[ 5] , a31[ 5] , a32[ 5] , a33[ 5] , a34[ 5] , a35[ 5] , a36[ 5] , a37[ 5] , a38[ 5] , a39[ 5] , a40[ 5] , a41[ 5] , a42[ 5] , a43[ 5] , a44[ 5] , a45[ 5] , a46[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6] , a18[ 6] , a19[ 6] , a20[ 6] , a21[ 6] , a22[ 6] , a23[ 6] , a24[ 6] , a25[ 6] , a26[ 6] , a27[ 6] , a28[ 6] , a29[ 6] , a30[ 6] , a31[ 6] , a32[ 6] , a33[ 6] , a34[ 6] , a35[ 6] , a36[ 6] , a37[ 6] , a38[ 6] , a39[ 6] , a40[ 6] , a41[ 6] , a42[ 6] , a43[ 6] , a44[ 6] , a45[ 6] , a46[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7] , a18[ 7] , a19[ 7] , a20[ 7] , a21[ 7] , a22[ 7] , a23[ 7] , a24[ 7] , a25[ 7] , a26[ 7] , a27[ 7] , a28[ 7] , a29[ 7] , a30[ 7] , a31[ 7] , a32[ 7] , a33[ 7] , a34[ 7] , a35[ 7] , a36[ 7] , a37[ 7] , a38[ 7] , a39[ 7] , a40[ 7] , a41[ 7] , a42[ 7] , a43[ 7] , a44[ 7] , a45[ 7] , a46[ 7]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints16_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A39>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A40>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A41>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A42>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A43>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A44>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A45>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A46>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints16_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A39>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A40>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A41>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A42>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A43>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A44>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A45>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A46>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints16_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type , typename meta::scalar_of<A39>::type , typename meta::scalar_of<A40>::type , typename meta::scalar_of<A41>::type , typename meta::scalar_of<A42>::type , typename meta::scalar_of<A43>::type , typename meta::scalar_of<A44>::type , typename meta::scalar_of<A45>::type , typename meta::scalar_of<A46>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46 , class A47> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const& , A41 const& , A42 const& , A43 const& , A44 const& , A45 const& , A46 const& , A47 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 , A41 const& a41 , A42 const& a42 , A43 const& a43 , A44 const& a44 , A45 const& a45 , A46 const& a46 , A47 const& a47 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46 , A47)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46 , A47)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0] , a40[ 0] , a41[ 0] , a42[ 0] , a43[ 0] , a44[ 0] , a45[ 0] , a46[ 0] , a47[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1] , a40[ 1] , a41[ 1] , a42[ 1] , a43[ 1] , a44[ 1] , a45[ 1] , a46[ 1] , a47[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2] , a34[ 2] , a35[ 2] , a36[ 2] , a37[ 2] , a38[ 2] , a39[ 2] , a40[ 2] , a41[ 2] , a42[ 2] , a43[ 2] , a44[ 2] , a45[ 2] , a46[ 2] , a47[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3] , a34[ 3] , a35[ 3] , a36[ 3] , a37[ 3] , a38[ 3] , a39[ 3] , a40[ 3] , a41[ 3] , a42[ 3] , a43[ 3] , a44[ 3] , a45[ 3] , a46[ 3] , a47[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4] , a18[ 4] , a19[ 4] , a20[ 4] , a21[ 4] , a22[ 4] , a23[ 4] , a24[ 4] , a25[ 4] , a26[ 4] , a27[ 4] , a28[ 4] , a29[ 4] , a30[ 4] , a31[ 4] , a32[ 4] , a33[ 4] , a34[ 4] , a35[ 4] , a36[ 4] , a37[ 4] , a38[ 4] , a39[ 4] , a40[ 4] , a41[ 4] , a42[ 4] , a43[ 4] , a44[ 4] , a45[ 4] , a46[ 4] , a47[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5] , a18[ 5] , a19[ 5] , a20[ 5] , a21[ 5] , a22[ 5] , a23[ 5] , a24[ 5] , a25[ 5] , a26[ 5] , a27[ 5] , a28[ 5] , a29[ 5] , a30[ 5] , a31[ 5] , a32[ 5] , a33[ 5] , a34[ 5] , a35[ 5] , a36[ 5] , a37[ 5] , a38[ 5] , a39[ 5] , a40[ 5] , a41[ 5] , a42[ 5] , a43[ 5] , a44[ 5] , a45[ 5] , a46[ 5] , a47[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6] , a18[ 6] , a19[ 6] , a20[ 6] , a21[ 6] , a22[ 6] , a23[ 6] , a24[ 6] , a25[ 6] , a26[ 6] , a27[ 6] , a28[ 6] , a29[ 6] , a30[ 6] , a31[ 6] , a32[ 6] , a33[ 6] , a34[ 6] , a35[ 6] , a36[ 6] , a37[ 6] , a38[ 6] , a39[ 6] , a40[ 6] , a41[ 6] , a42[ 6] , a43[ 6] , a44[ 6] , a45[ 6] , a46[ 6] , a47[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7] , a18[ 7] , a19[ 7] , a20[ 7] , a21[ 7] , a22[ 7] , a23[ 7] , a24[ 7] , a25[ 7] , a26[ 7] , a27[ 7] , a28[ 7] , a29[ 7] , a30[ 7] , a31[ 7] , a32[ 7] , a33[ 7] , a34[ 7] , a35[ 7] , a36[ 7] , a37[ 7] , a38[ 7] , a39[ 7] , a40[ 7] , a41[ 7] , a42[ 7] , a43[ 7] , a44[ 7] , a45[ 7] , a46[ 7] , a47[ 7]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46 , class A47> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints16_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A39>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A40>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A41>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A42>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A43>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A44>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A45>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A46>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A47>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints16_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A39>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A40>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A41>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A42>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A43>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A44>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A45>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A46>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A47>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints16_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46 , class A47> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46 , A47)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type , typename meta::scalar_of<A39>::type , typename meta::scalar_of<A40>::type , typename meta::scalar_of<A41>::type , typename meta::scalar_of<A42>::type , typename meta::scalar_of<A43>::type , typename meta::scalar_of<A44>::type , typename meta::scalar_of<A45>::type , typename meta::scalar_of<A46>::type , typename meta::scalar_of<A47>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46 , class A47 , class A48> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const& , A41 const& , A42 const& , A43 const& , A44 const& , A45 const& , A46 const& , A47 const& , A48 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 , A41 const& a41 , A42 const& a42 , A43 const& a43 , A44 const& a44 , A45 const& a45 , A46 const& a46 , A47 const& a47 , A48 const& a48 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46 , A47 , A48)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46 , A47 , A48)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0] , a40[ 0] , a41[ 0] , a42[ 0] , a43[ 0] , a44[ 0] , a45[ 0] , a46[ 0] , a47[ 0] , a48[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1] , a40[ 1] , a41[ 1] , a42[ 1] , a43[ 1] , a44[ 1] , a45[ 1] , a46[ 1] , a47[ 1] , a48[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2] , a34[ 2] , a35[ 2] , a36[ 2] , a37[ 2] , a38[ 2] , a39[ 2] , a40[ 2] , a41[ 2] , a42[ 2] , a43[ 2] , a44[ 2] , a45[ 2] , a46[ 2] , a47[ 2] , a48[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3] , a34[ 3] , a35[ 3] , a36[ 3] , a37[ 3] , a38[ 3] , a39[ 3] , a40[ 3] , a41[ 3] , a42[ 3] , a43[ 3] , a44[ 3] , a45[ 3] , a46[ 3] , a47[ 3] , a48[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4] , a18[ 4] , a19[ 4] , a20[ 4] , a21[ 4] , a22[ 4] , a23[ 4] , a24[ 4] , a25[ 4] , a26[ 4] , a27[ 4] , a28[ 4] , a29[ 4] , a30[ 4] , a31[ 4] , a32[ 4] , a33[ 4] , a34[ 4] , a35[ 4] , a36[ 4] , a37[ 4] , a38[ 4] , a39[ 4] , a40[ 4] , a41[ 4] , a42[ 4] , a43[ 4] , a44[ 4] , a45[ 4] , a46[ 4] , a47[ 4] , a48[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5] , a18[ 5] , a19[ 5] , a20[ 5] , a21[ 5] , a22[ 5] , a23[ 5] , a24[ 5] , a25[ 5] , a26[ 5] , a27[ 5] , a28[ 5] , a29[ 5] , a30[ 5] , a31[ 5] , a32[ 5] , a33[ 5] , a34[ 5] , a35[ 5] , a36[ 5] , a37[ 5] , a38[ 5] , a39[ 5] , a40[ 5] , a41[ 5] , a42[ 5] , a43[ 5] , a44[ 5] , a45[ 5] , a46[ 5] , a47[ 5] , a48[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6] , a18[ 6] , a19[ 6] , a20[ 6] , a21[ 6] , a22[ 6] , a23[ 6] , a24[ 6] , a25[ 6] , a26[ 6] , a27[ 6] , a28[ 6] , a29[ 6] , a30[ 6] , a31[ 6] , a32[ 6] , a33[ 6] , a34[ 6] , a35[ 6] , a36[ 6] , a37[ 6] , a38[ 6] , a39[ 6] , a40[ 6] , a41[ 6] , a42[ 6] , a43[ 6] , a44[ 6] , a45[ 6] , a46[ 6] , a47[ 6] , a48[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7] , a18[ 7] , a19[ 7] , a20[ 7] , a21[ 7] , a22[ 7] , a23[ 7] , a24[ 7] , a25[ 7] , a26[ 7] , a27[ 7] , a28[ 7] , a29[ 7] , a30[ 7] , a31[ 7] , a32[ 7] , a33[ 7] , a34[ 7] , a35[ 7] , a36[ 7] , a37[ 7] , a38[ 7] , a39[ 7] , a40[ 7] , a41[ 7] , a42[ 7] , a43[ 7] , a44[ 7] , a45[ 7] , a46[ 7] , a47[ 7] , a48[ 7]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46 , class A47 , class A48> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints16_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A39>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A40>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A41>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A42>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A43>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A44>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A45>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A46>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A47>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A48>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints16_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A39>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A40>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A41>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A42>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A43>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A44>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A45>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A46>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A47>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A48>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints16_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46 , class A47 , class A48> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46 , A47 , A48)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type , typename meta::scalar_of<A39>::type , typename meta::scalar_of<A40>::type , typename meta::scalar_of<A41>::type , typename meta::scalar_of<A42>::type , typename meta::scalar_of<A43>::type , typename meta::scalar_of<A44>::type , typename meta::scalar_of<A45>::type , typename meta::scalar_of<A46>::type , typename meta::scalar_of<A47>::type , typename meta::scalar_of<A48>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46 , class A47 , class A48 , class A49> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const& , A41 const& , A42 const& , A43 const& , A44 const& , A45 const& , A46 const& , A47 const& , A48 const& , A49 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 , A41 const& a41 , A42 const& a42 , A43 const& a43 , A44 const& a44 , A45 const& a45 , A46 const& a46 , A47 const& a47 , A48 const& a48 , A49 const& a49 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46 , A47 , A48 , A49)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46 , A47 , A48 , A49)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0] , a40[ 0] , a41[ 0] , a42[ 0] , a43[ 0] , a44[ 0] , a45[ 0] , a46[ 0] , a47[ 0] , a48[ 0] , a49[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1] , a40[ 1] , a41[ 1] , a42[ 1] , a43[ 1] , a44[ 1] , a45[ 1] , a46[ 1] , a47[ 1] , a48[ 1] , a49[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2] , a34[ 2] , a35[ 2] , a36[ 2] , a37[ 2] , a38[ 2] , a39[ 2] , a40[ 2] , a41[ 2] , a42[ 2] , a43[ 2] , a44[ 2] , a45[ 2] , a46[ 2] , a47[ 2] , a48[ 2] , a49[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3] , a34[ 3] , a35[ 3] , a36[ 3] , a37[ 3] , a38[ 3] , a39[ 3] , a40[ 3] , a41[ 3] , a42[ 3] , a43[ 3] , a44[ 3] , a45[ 3] , a46[ 3] , a47[ 3] , a48[ 3] , a49[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4] , a18[ 4] , a19[ 4] , a20[ 4] , a21[ 4] , a22[ 4] , a23[ 4] , a24[ 4] , a25[ 4] , a26[ 4] , a27[ 4] , a28[ 4] , a29[ 4] , a30[ 4] , a31[ 4] , a32[ 4] , a33[ 4] , a34[ 4] , a35[ 4] , a36[ 4] , a37[ 4] , a38[ 4] , a39[ 4] , a40[ 4] , a41[ 4] , a42[ 4] , a43[ 4] , a44[ 4] , a45[ 4] , a46[ 4] , a47[ 4] , a48[ 4] , a49[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5] , a18[ 5] , a19[ 5] , a20[ 5] , a21[ 5] , a22[ 5] , a23[ 5] , a24[ 5] , a25[ 5] , a26[ 5] , a27[ 5] , a28[ 5] , a29[ 5] , a30[ 5] , a31[ 5] , a32[ 5] , a33[ 5] , a34[ 5] , a35[ 5] , a36[ 5] , a37[ 5] , a38[ 5] , a39[ 5] , a40[ 5] , a41[ 5] , a42[ 5] , a43[ 5] , a44[ 5] , a45[ 5] , a46[ 5] , a47[ 5] , a48[ 5] , a49[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6] , a18[ 6] , a19[ 6] , a20[ 6] , a21[ 6] , a22[ 6] , a23[ 6] , a24[ 6] , a25[ 6] , a26[ 6] , a27[ 6] , a28[ 6] , a29[ 6] , a30[ 6] , a31[ 6] , a32[ 6] , a33[ 6] , a34[ 6] , a35[ 6] , a36[ 6] , a37[ 6] , a38[ 6] , a39[ 6] , a40[ 6] , a41[ 6] , a42[ 6] , a43[ 6] , a44[ 6] , a45[ 6] , a46[ 6] , a47[ 6] , a48[ 6] , a49[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7] , a18[ 7] , a19[ 7] , a20[ 7] , a21[ 7] , a22[ 7] , a23[ 7] , a24[ 7] , a25[ 7] , a26[ 7] , a27[ 7] , a28[ 7] , a29[ 7] , a30[ 7] , a31[ 7] , a32[ 7] , a33[ 7] , a34[ 7] , a35[ 7] , a36[ 7] , a37[ 7] , a38[ 7] , a39[ 7] , a40[ 7] , a41[ 7] , a42[ 7] , a43[ 7] , a44[ 7] , a45[ 7] , a46[ 7] , a47[ 7] , a48[ 7] , a49[ 7]))); } }; } }
namespace nt2 { namespace meta { template<class Func , class A0> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints8_<A0>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints8_<A0>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints8_ , tag::sse_ > ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0> struct result<This(Func, A0)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1> inline typename meta::result_of<call(A0 const& , A1 const&)>::type operator()( A0 const& a0 , A1 const& a1 ) const { typedef typename result<call(A0 , A1)>::type ntype; typedef typename result<call(A0 , A1)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7])) , details::maybe_genmask<stype>(a0(a1[ 8])) , details::maybe_genmask<stype>(a0(a1[ 9])) , details::maybe_genmask<stype>(a0(a1[ 10])) , details::maybe_genmask<stype>(a0(a1[ 11])) , details::maybe_genmask<stype>(a0(a1[ 12])) , details::maybe_genmask<stype>(a0(a1[ 13])) , details::maybe_genmask<stype>(a0(a1[ 14])) , details::maybe_genmask<stype>(a0(a1[ 15]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints8_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints8_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints8_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1> struct result<This(Func, A0 , A1)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 ) const { typedef typename result<call(A0 , A1 , A2)>::type ntype; typedef typename result<call(A0 , A1 , A2)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7])) , details::maybe_genmask<stype>(a0(a1[ 8] , a2[ 8])) , details::maybe_genmask<stype>(a0(a1[ 9] , a2[ 9])) , details::maybe_genmask<stype>(a0(a1[ 10] , a2[ 10])) , details::maybe_genmask<stype>(a0(a1[ 11] , a2[ 11])) , details::maybe_genmask<stype>(a0(a1[ 12] , a2[ 12])) , details::maybe_genmask<stype>(a0(a1[ 13] , a2[ 13])) , details::maybe_genmask<stype>(a0(a1[ 14] , a2[ 14])) , details::maybe_genmask<stype>(a0(a1[ 15] , a2[ 15]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints8_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints8_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints8_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2> struct result<This(Func, A0 , A1 , A2)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 ) const { typedef typename result<call(A0 , A1 , A2 , A3)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7])) , details::maybe_genmask<stype>(a0(a1[ 8] , a2[ 8] , a3[ 8])) , details::maybe_genmask<stype>(a0(a1[ 9] , a2[ 9] , a3[ 9])) , details::maybe_genmask<stype>(a0(a1[ 10] , a2[ 10] , a3[ 10])) , details::maybe_genmask<stype>(a0(a1[ 11] , a2[ 11] , a3[ 11])) , details::maybe_genmask<stype>(a0(a1[ 12] , a2[ 12] , a3[ 12])) , details::maybe_genmask<stype>(a0(a1[ 13] , a2[ 13] , a3[ 13])) , details::maybe_genmask<stype>(a0(a1[ 14] , a2[ 14] , a3[ 14])) , details::maybe_genmask<stype>(a0(a1[ 15] , a2[ 15] , a3[ 15]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints8_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints8_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints8_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3> struct result<This(Func, A0 , A1 , A2 , A3)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7])) , details::maybe_genmask<stype>(a0(a1[ 8] , a2[ 8] , a3[ 8] , a4[ 8])) , details::maybe_genmask<stype>(a0(a1[ 9] , a2[ 9] , a3[ 9] , a4[ 9])) , details::maybe_genmask<stype>(a0(a1[ 10] , a2[ 10] , a3[ 10] , a4[ 10])) , details::maybe_genmask<stype>(a0(a1[ 11] , a2[ 11] , a3[ 11] , a4[ 11])) , details::maybe_genmask<stype>(a0(a1[ 12] , a2[ 12] , a3[ 12] , a4[ 12])) , details::maybe_genmask<stype>(a0(a1[ 13] , a2[ 13] , a3[ 13] , a4[ 13])) , details::maybe_genmask<stype>(a0(a1[ 14] , a2[ 14] , a3[ 14] , a4[ 14])) , details::maybe_genmask<stype>(a0(a1[ 15] , a2[ 15] , a3[ 15] , a4[ 15]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints8_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints8_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints8_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4> struct result<This(Func, A0 , A1 , A2 , A3 , A4)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7])) , details::maybe_genmask<stype>(a0(a1[ 8] , a2[ 8] , a3[ 8] , a4[ 8] , a5[ 8])) , details::maybe_genmask<stype>(a0(a1[ 9] , a2[ 9] , a3[ 9] , a4[ 9] , a5[ 9])) , details::maybe_genmask<stype>(a0(a1[ 10] , a2[ 10] , a3[ 10] , a4[ 10] , a5[ 10])) , details::maybe_genmask<stype>(a0(a1[ 11] , a2[ 11] , a3[ 11] , a4[ 11] , a5[ 11])) , details::maybe_genmask<stype>(a0(a1[ 12] , a2[ 12] , a3[ 12] , a4[ 12] , a5[ 12])) , details::maybe_genmask<stype>(a0(a1[ 13] , a2[ 13] , a3[ 13] , a4[ 13] , a5[ 13])) , details::maybe_genmask<stype>(a0(a1[ 14] , a2[ 14] , a3[ 14] , a4[ 14] , a5[ 14])) , details::maybe_genmask<stype>(a0(a1[ 15] , a2[ 15] , a3[ 15] , a4[ 15] , a5[ 15]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints8_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints8_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints8_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7])) , details::maybe_genmask<stype>(a0(a1[ 8] , a2[ 8] , a3[ 8] , a4[ 8] , a5[ 8] , a6[ 8])) , details::maybe_genmask<stype>(a0(a1[ 9] , a2[ 9] , a3[ 9] , a4[ 9] , a5[ 9] , a6[ 9])) , details::maybe_genmask<stype>(a0(a1[ 10] , a2[ 10] , a3[ 10] , a4[ 10] , a5[ 10] , a6[ 10])) , details::maybe_genmask<stype>(a0(a1[ 11] , a2[ 11] , a3[ 11] , a4[ 11] , a5[ 11] , a6[ 11])) , details::maybe_genmask<stype>(a0(a1[ 12] , a2[ 12] , a3[ 12] , a4[ 12] , a5[ 12] , a6[ 12])) , details::maybe_genmask<stype>(a0(a1[ 13] , a2[ 13] , a3[ 13] , a4[ 13] , a5[ 13] , a6[ 13])) , details::maybe_genmask<stype>(a0(a1[ 14] , a2[ 14] , a3[ 14] , a4[ 14] , a5[ 14] , a6[ 14])) , details::maybe_genmask<stype>(a0(a1[ 15] , a2[ 15] , a3[ 15] , a4[ 15] , a5[ 15] , a6[ 15]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints8_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints8_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints8_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7])) , details::maybe_genmask<stype>(a0(a1[ 8] , a2[ 8] , a3[ 8] , a4[ 8] , a5[ 8] , a6[ 8] , a7[ 8])) , details::maybe_genmask<stype>(a0(a1[ 9] , a2[ 9] , a3[ 9] , a4[ 9] , a5[ 9] , a6[ 9] , a7[ 9])) , details::maybe_genmask<stype>(a0(a1[ 10] , a2[ 10] , a3[ 10] , a4[ 10] , a5[ 10] , a6[ 10] , a7[ 10])) , details::maybe_genmask<stype>(a0(a1[ 11] , a2[ 11] , a3[ 11] , a4[ 11] , a5[ 11] , a6[ 11] , a7[ 11])) , details::maybe_genmask<stype>(a0(a1[ 12] , a2[ 12] , a3[ 12] , a4[ 12] , a5[ 12] , a6[ 12] , a7[ 12])) , details::maybe_genmask<stype>(a0(a1[ 13] , a2[ 13] , a3[ 13] , a4[ 13] , a5[ 13] , a6[ 13] , a7[ 13])) , details::maybe_genmask<stype>(a0(a1[ 14] , a2[ 14] , a3[ 14] , a4[ 14] , a5[ 14] , a6[ 14] , a7[ 14])) , details::maybe_genmask<stype>(a0(a1[ 15] , a2[ 15] , a3[ 15] , a4[ 15] , a5[ 15] , a6[ 15] , a7[ 15]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints8_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints8_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints8_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7])) , details::maybe_genmask<stype>(a0(a1[ 8] , a2[ 8] , a3[ 8] , a4[ 8] , a5[ 8] , a6[ 8] , a7[ 8] , a8[ 8])) , details::maybe_genmask<stype>(a0(a1[ 9] , a2[ 9] , a3[ 9] , a4[ 9] , a5[ 9] , a6[ 9] , a7[ 9] , a8[ 9])) , details::maybe_genmask<stype>(a0(a1[ 10] , a2[ 10] , a3[ 10] , a4[ 10] , a5[ 10] , a6[ 10] , a7[ 10] , a8[ 10])) , details::maybe_genmask<stype>(a0(a1[ 11] , a2[ 11] , a3[ 11] , a4[ 11] , a5[ 11] , a6[ 11] , a7[ 11] , a8[ 11])) , details::maybe_genmask<stype>(a0(a1[ 12] , a2[ 12] , a3[ 12] , a4[ 12] , a5[ 12] , a6[ 12] , a7[ 12] , a8[ 12])) , details::maybe_genmask<stype>(a0(a1[ 13] , a2[ 13] , a3[ 13] , a4[ 13] , a5[ 13] , a6[ 13] , a7[ 13] , a8[ 13])) , details::maybe_genmask<stype>(a0(a1[ 14] , a2[ 14] , a3[ 14] , a4[ 14] , a5[ 14] , a6[ 14] , a7[ 14] , a8[ 14])) , details::maybe_genmask<stype>(a0(a1[ 15] , a2[ 15] , a3[ 15] , a4[ 15] , a5[ 15] , a6[ 15] , a7[ 15] , a8[ 15]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints8_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints8_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints8_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7])) , details::maybe_genmask<stype>(a0(a1[ 8] , a2[ 8] , a3[ 8] , a4[ 8] , a5[ 8] , a6[ 8] , a7[ 8] , a8[ 8] , a9[ 8])) , details::maybe_genmask<stype>(a0(a1[ 9] , a2[ 9] , a3[ 9] , a4[ 9] , a5[ 9] , a6[ 9] , a7[ 9] , a8[ 9] , a9[ 9])) , details::maybe_genmask<stype>(a0(a1[ 10] , a2[ 10] , a3[ 10] , a4[ 10] , a5[ 10] , a6[ 10] , a7[ 10] , a8[ 10] , a9[ 10])) , details::maybe_genmask<stype>(a0(a1[ 11] , a2[ 11] , a3[ 11] , a4[ 11] , a5[ 11] , a6[ 11] , a7[ 11] , a8[ 11] , a9[ 11])) , details::maybe_genmask<stype>(a0(a1[ 12] , a2[ 12] , a3[ 12] , a4[ 12] , a5[ 12] , a6[ 12] , a7[ 12] , a8[ 12] , a9[ 12])) , details::maybe_genmask<stype>(a0(a1[ 13] , a2[ 13] , a3[ 13] , a4[ 13] , a5[ 13] , a6[ 13] , a7[ 13] , a8[ 13] , a9[ 13])) , details::maybe_genmask<stype>(a0(a1[ 14] , a2[ 14] , a3[ 14] , a4[ 14] , a5[ 14] , a6[ 14] , a7[ 14] , a8[ 14] , a9[ 14])) , details::maybe_genmask<stype>(a0(a1[ 15] , a2[ 15] , a3[ 15] , a4[ 15] , a5[ 15] , a6[ 15] , a7[ 15] , a8[ 15] , a9[ 15]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints8_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints8_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints8_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7])) , details::maybe_genmask<stype>(a0(a1[ 8] , a2[ 8] , a3[ 8] , a4[ 8] , a5[ 8] , a6[ 8] , a7[ 8] , a8[ 8] , a9[ 8] , a10[ 8])) , details::maybe_genmask<stype>(a0(a1[ 9] , a2[ 9] , a3[ 9] , a4[ 9] , a5[ 9] , a6[ 9] , a7[ 9] , a8[ 9] , a9[ 9] , a10[ 9])) , details::maybe_genmask<stype>(a0(a1[ 10] , a2[ 10] , a3[ 10] , a4[ 10] , a5[ 10] , a6[ 10] , a7[ 10] , a8[ 10] , a9[ 10] , a10[ 10])) , details::maybe_genmask<stype>(a0(a1[ 11] , a2[ 11] , a3[ 11] , a4[ 11] , a5[ 11] , a6[ 11] , a7[ 11] , a8[ 11] , a9[ 11] , a10[ 11])) , details::maybe_genmask<stype>(a0(a1[ 12] , a2[ 12] , a3[ 12] , a4[ 12] , a5[ 12] , a6[ 12] , a7[ 12] , a8[ 12] , a9[ 12] , a10[ 12])) , details::maybe_genmask<stype>(a0(a1[ 13] , a2[ 13] , a3[ 13] , a4[ 13] , a5[ 13] , a6[ 13] , a7[ 13] , a8[ 13] , a9[ 13] , a10[ 13])) , details::maybe_genmask<stype>(a0(a1[ 14] , a2[ 14] , a3[ 14] , a4[ 14] , a5[ 14] , a6[ 14] , a7[ 14] , a8[ 14] , a9[ 14] , a10[ 14])) , details::maybe_genmask<stype>(a0(a1[ 15] , a2[ 15] , a3[ 15] , a4[ 15] , a5[ 15] , a6[ 15] , a7[ 15] , a8[ 15] , a9[ 15] , a10[ 15]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints8_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints8_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints8_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7])) , details::maybe_genmask<stype>(a0(a1[ 8] , a2[ 8] , a3[ 8] , a4[ 8] , a5[ 8] , a6[ 8] , a7[ 8] , a8[ 8] , a9[ 8] , a10[ 8] , a11[ 8])) , details::maybe_genmask<stype>(a0(a1[ 9] , a2[ 9] , a3[ 9] , a4[ 9] , a5[ 9] , a6[ 9] , a7[ 9] , a8[ 9] , a9[ 9] , a10[ 9] , a11[ 9])) , details::maybe_genmask<stype>(a0(a1[ 10] , a2[ 10] , a3[ 10] , a4[ 10] , a5[ 10] , a6[ 10] , a7[ 10] , a8[ 10] , a9[ 10] , a10[ 10] , a11[ 10])) , details::maybe_genmask<stype>(a0(a1[ 11] , a2[ 11] , a3[ 11] , a4[ 11] , a5[ 11] , a6[ 11] , a7[ 11] , a8[ 11] , a9[ 11] , a10[ 11] , a11[ 11])) , details::maybe_genmask<stype>(a0(a1[ 12] , a2[ 12] , a3[ 12] , a4[ 12] , a5[ 12] , a6[ 12] , a7[ 12] , a8[ 12] , a9[ 12] , a10[ 12] , a11[ 12])) , details::maybe_genmask<stype>(a0(a1[ 13] , a2[ 13] , a3[ 13] , a4[ 13] , a5[ 13] , a6[ 13] , a7[ 13] , a8[ 13] , a9[ 13] , a10[ 13] , a11[ 13])) , details::maybe_genmask<stype>(a0(a1[ 14] , a2[ 14] , a3[ 14] , a4[ 14] , a5[ 14] , a6[ 14] , a7[ 14] , a8[ 14] , a9[ 14] , a10[ 14] , a11[ 14])) , details::maybe_genmask<stype>(a0(a1[ 15] , a2[ 15] , a3[ 15] , a4[ 15] , a5[ 15] , a6[ 15] , a7[ 15] , a8[ 15] , a9[ 15] , a10[ 15] , a11[ 15]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints8_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints8_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints8_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7])) , details::maybe_genmask<stype>(a0(a1[ 8] , a2[ 8] , a3[ 8] , a4[ 8] , a5[ 8] , a6[ 8] , a7[ 8] , a8[ 8] , a9[ 8] , a10[ 8] , a11[ 8] , a12[ 8])) , details::maybe_genmask<stype>(a0(a1[ 9] , a2[ 9] , a3[ 9] , a4[ 9] , a5[ 9] , a6[ 9] , a7[ 9] , a8[ 9] , a9[ 9] , a10[ 9] , a11[ 9] , a12[ 9])) , details::maybe_genmask<stype>(a0(a1[ 10] , a2[ 10] , a3[ 10] , a4[ 10] , a5[ 10] , a6[ 10] , a7[ 10] , a8[ 10] , a9[ 10] , a10[ 10] , a11[ 10] , a12[ 10])) , details::maybe_genmask<stype>(a0(a1[ 11] , a2[ 11] , a3[ 11] , a4[ 11] , a5[ 11] , a6[ 11] , a7[ 11] , a8[ 11] , a9[ 11] , a10[ 11] , a11[ 11] , a12[ 11])) , details::maybe_genmask<stype>(a0(a1[ 12] , a2[ 12] , a3[ 12] , a4[ 12] , a5[ 12] , a6[ 12] , a7[ 12] , a8[ 12] , a9[ 12] , a10[ 12] , a11[ 12] , a12[ 12])) , details::maybe_genmask<stype>(a0(a1[ 13] , a2[ 13] , a3[ 13] , a4[ 13] , a5[ 13] , a6[ 13] , a7[ 13] , a8[ 13] , a9[ 13] , a10[ 13] , a11[ 13] , a12[ 13])) , details::maybe_genmask<stype>(a0(a1[ 14] , a2[ 14] , a3[ 14] , a4[ 14] , a5[ 14] , a6[ 14] , a7[ 14] , a8[ 14] , a9[ 14] , a10[ 14] , a11[ 14] , a12[ 14])) , details::maybe_genmask<stype>(a0(a1[ 15] , a2[ 15] , a3[ 15] , a4[ 15] , a5[ 15] , a6[ 15] , a7[ 15] , a8[ 15] , a9[ 15] , a10[ 15] , a11[ 15] , a12[ 15]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints8_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints8_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints8_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7])) , details::maybe_genmask<stype>(a0(a1[ 8] , a2[ 8] , a3[ 8] , a4[ 8] , a5[ 8] , a6[ 8] , a7[ 8] , a8[ 8] , a9[ 8] , a10[ 8] , a11[ 8] , a12[ 8] , a13[ 8])) , details::maybe_genmask<stype>(a0(a1[ 9] , a2[ 9] , a3[ 9] , a4[ 9] , a5[ 9] , a6[ 9] , a7[ 9] , a8[ 9] , a9[ 9] , a10[ 9] , a11[ 9] , a12[ 9] , a13[ 9])) , details::maybe_genmask<stype>(a0(a1[ 10] , a2[ 10] , a3[ 10] , a4[ 10] , a5[ 10] , a6[ 10] , a7[ 10] , a8[ 10] , a9[ 10] , a10[ 10] , a11[ 10] , a12[ 10] , a13[ 10])) , details::maybe_genmask<stype>(a0(a1[ 11] , a2[ 11] , a3[ 11] , a4[ 11] , a5[ 11] , a6[ 11] , a7[ 11] , a8[ 11] , a9[ 11] , a10[ 11] , a11[ 11] , a12[ 11] , a13[ 11])) , details::maybe_genmask<stype>(a0(a1[ 12] , a2[ 12] , a3[ 12] , a4[ 12] , a5[ 12] , a6[ 12] , a7[ 12] , a8[ 12] , a9[ 12] , a10[ 12] , a11[ 12] , a12[ 12] , a13[ 12])) , details::maybe_genmask<stype>(a0(a1[ 13] , a2[ 13] , a3[ 13] , a4[ 13] , a5[ 13] , a6[ 13] , a7[ 13] , a8[ 13] , a9[ 13] , a10[ 13] , a11[ 13] , a12[ 13] , a13[ 13])) , details::maybe_genmask<stype>(a0(a1[ 14] , a2[ 14] , a3[ 14] , a4[ 14] , a5[ 14] , a6[ 14] , a7[ 14] , a8[ 14] , a9[ 14] , a10[ 14] , a11[ 14] , a12[ 14] , a13[ 14])) , details::maybe_genmask<stype>(a0(a1[ 15] , a2[ 15] , a3[ 15] , a4[ 15] , a5[ 15] , a6[ 15] , a7[ 15] , a8[ 15] , a9[ 15] , a10[ 15] , a11[ 15] , a12[ 15] , a13[ 15]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints8_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints8_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints8_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7])) , details::maybe_genmask<stype>(a0(a1[ 8] , a2[ 8] , a3[ 8] , a4[ 8] , a5[ 8] , a6[ 8] , a7[ 8] , a8[ 8] , a9[ 8] , a10[ 8] , a11[ 8] , a12[ 8] , a13[ 8] , a14[ 8])) , details::maybe_genmask<stype>(a0(a1[ 9] , a2[ 9] , a3[ 9] , a4[ 9] , a5[ 9] , a6[ 9] , a7[ 9] , a8[ 9] , a9[ 9] , a10[ 9] , a11[ 9] , a12[ 9] , a13[ 9] , a14[ 9])) , details::maybe_genmask<stype>(a0(a1[ 10] , a2[ 10] , a3[ 10] , a4[ 10] , a5[ 10] , a6[ 10] , a7[ 10] , a8[ 10] , a9[ 10] , a10[ 10] , a11[ 10] , a12[ 10] , a13[ 10] , a14[ 10])) , details::maybe_genmask<stype>(a0(a1[ 11] , a2[ 11] , a3[ 11] , a4[ 11] , a5[ 11] , a6[ 11] , a7[ 11] , a8[ 11] , a9[ 11] , a10[ 11] , a11[ 11] , a12[ 11] , a13[ 11] , a14[ 11])) , details::maybe_genmask<stype>(a0(a1[ 12] , a2[ 12] , a3[ 12] , a4[ 12] , a5[ 12] , a6[ 12] , a7[ 12] , a8[ 12] , a9[ 12] , a10[ 12] , a11[ 12] , a12[ 12] , a13[ 12] , a14[ 12])) , details::maybe_genmask<stype>(a0(a1[ 13] , a2[ 13] , a3[ 13] , a4[ 13] , a5[ 13] , a6[ 13] , a7[ 13] , a8[ 13] , a9[ 13] , a10[ 13] , a11[ 13] , a12[ 13] , a13[ 13] , a14[ 13])) , details::maybe_genmask<stype>(a0(a1[ 14] , a2[ 14] , a3[ 14] , a4[ 14] , a5[ 14] , a6[ 14] , a7[ 14] , a8[ 14] , a9[ 14] , a10[ 14] , a11[ 14] , a12[ 14] , a13[ 14] , a14[ 14])) , details::maybe_genmask<stype>(a0(a1[ 15] , a2[ 15] , a3[ 15] , a4[ 15] , a5[ 15] , a6[ 15] , a7[ 15] , a8[ 15] , a9[ 15] , a10[ 15] , a11[ 15] , a12[ 15] , a13[ 15] , a14[ 15]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints8_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints8_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints8_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7])) , details::maybe_genmask<stype>(a0(a1[ 8] , a2[ 8] , a3[ 8] , a4[ 8] , a5[ 8] , a6[ 8] , a7[ 8] , a8[ 8] , a9[ 8] , a10[ 8] , a11[ 8] , a12[ 8] , a13[ 8] , a14[ 8] , a15[ 8])) , details::maybe_genmask<stype>(a0(a1[ 9] , a2[ 9] , a3[ 9] , a4[ 9] , a5[ 9] , a6[ 9] , a7[ 9] , a8[ 9] , a9[ 9] , a10[ 9] , a11[ 9] , a12[ 9] , a13[ 9] , a14[ 9] , a15[ 9])) , details::maybe_genmask<stype>(a0(a1[ 10] , a2[ 10] , a3[ 10] , a4[ 10] , a5[ 10] , a6[ 10] , a7[ 10] , a8[ 10] , a9[ 10] , a10[ 10] , a11[ 10] , a12[ 10] , a13[ 10] , a14[ 10] , a15[ 10])) , details::maybe_genmask<stype>(a0(a1[ 11] , a2[ 11] , a3[ 11] , a4[ 11] , a5[ 11] , a6[ 11] , a7[ 11] , a8[ 11] , a9[ 11] , a10[ 11] , a11[ 11] , a12[ 11] , a13[ 11] , a14[ 11] , a15[ 11])) , details::maybe_genmask<stype>(a0(a1[ 12] , a2[ 12] , a3[ 12] , a4[ 12] , a5[ 12] , a6[ 12] , a7[ 12] , a8[ 12] , a9[ 12] , a10[ 12] , a11[ 12] , a12[ 12] , a13[ 12] , a14[ 12] , a15[ 12])) , details::maybe_genmask<stype>(a0(a1[ 13] , a2[ 13] , a3[ 13] , a4[ 13] , a5[ 13] , a6[ 13] , a7[ 13] , a8[ 13] , a9[ 13] , a10[ 13] , a11[ 13] , a12[ 13] , a13[ 13] , a14[ 13] , a15[ 13])) , details::maybe_genmask<stype>(a0(a1[ 14] , a2[ 14] , a3[ 14] , a4[ 14] , a5[ 14] , a6[ 14] , a7[ 14] , a8[ 14] , a9[ 14] , a10[ 14] , a11[ 14] , a12[ 14] , a13[ 14] , a14[ 14] , a15[ 14])) , details::maybe_genmask<stype>(a0(a1[ 15] , a2[ 15] , a3[ 15] , a4[ 15] , a5[ 15] , a6[ 15] , a7[ 15] , a8[ 15] , a9[ 15] , a10[ 15] , a11[ 15] , a12[ 15] , a13[ 15] , a14[ 15] , a15[ 15]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints8_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints8_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints8_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7])) , details::maybe_genmask<stype>(a0(a1[ 8] , a2[ 8] , a3[ 8] , a4[ 8] , a5[ 8] , a6[ 8] , a7[ 8] , a8[ 8] , a9[ 8] , a10[ 8] , a11[ 8] , a12[ 8] , a13[ 8] , a14[ 8] , a15[ 8] , a16[ 8])) , details::maybe_genmask<stype>(a0(a1[ 9] , a2[ 9] , a3[ 9] , a4[ 9] , a5[ 9] , a6[ 9] , a7[ 9] , a8[ 9] , a9[ 9] , a10[ 9] , a11[ 9] , a12[ 9] , a13[ 9] , a14[ 9] , a15[ 9] , a16[ 9])) , details::maybe_genmask<stype>(a0(a1[ 10] , a2[ 10] , a3[ 10] , a4[ 10] , a5[ 10] , a6[ 10] , a7[ 10] , a8[ 10] , a9[ 10] , a10[ 10] , a11[ 10] , a12[ 10] , a13[ 10] , a14[ 10] , a15[ 10] , a16[ 10])) , details::maybe_genmask<stype>(a0(a1[ 11] , a2[ 11] , a3[ 11] , a4[ 11] , a5[ 11] , a6[ 11] , a7[ 11] , a8[ 11] , a9[ 11] , a10[ 11] , a11[ 11] , a12[ 11] , a13[ 11] , a14[ 11] , a15[ 11] , a16[ 11])) , details::maybe_genmask<stype>(a0(a1[ 12] , a2[ 12] , a3[ 12] , a4[ 12] , a5[ 12] , a6[ 12] , a7[ 12] , a8[ 12] , a9[ 12] , a10[ 12] , a11[ 12] , a12[ 12] , a13[ 12] , a14[ 12] , a15[ 12] , a16[ 12])) , details::maybe_genmask<stype>(a0(a1[ 13] , a2[ 13] , a3[ 13] , a4[ 13] , a5[ 13] , a6[ 13] , a7[ 13] , a8[ 13] , a9[ 13] , a10[ 13] , a11[ 13] , a12[ 13] , a13[ 13] , a14[ 13] , a15[ 13] , a16[ 13])) , details::maybe_genmask<stype>(a0(a1[ 14] , a2[ 14] , a3[ 14] , a4[ 14] , a5[ 14] , a6[ 14] , a7[ 14] , a8[ 14] , a9[ 14] , a10[ 14] , a11[ 14] , a12[ 14] , a13[ 14] , a14[ 14] , a15[ 14] , a16[ 14])) , details::maybe_genmask<stype>(a0(a1[ 15] , a2[ 15] , a3[ 15] , a4[ 15] , a5[ 15] , a6[ 15] , a7[ 15] , a8[ 15] , a9[ 15] , a10[ 15] , a11[ 15] , a12[ 15] , a13[ 15] , a14[ 15] , a15[ 15] , a16[ 15]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints8_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints8_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints8_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7])) , details::maybe_genmask<stype>(a0(a1[ 8] , a2[ 8] , a3[ 8] , a4[ 8] , a5[ 8] , a6[ 8] , a7[ 8] , a8[ 8] , a9[ 8] , a10[ 8] , a11[ 8] , a12[ 8] , a13[ 8] , a14[ 8] , a15[ 8] , a16[ 8] , a17[ 8])) , details::maybe_genmask<stype>(a0(a1[ 9] , a2[ 9] , a3[ 9] , a4[ 9] , a5[ 9] , a6[ 9] , a7[ 9] , a8[ 9] , a9[ 9] , a10[ 9] , a11[ 9] , a12[ 9] , a13[ 9] , a14[ 9] , a15[ 9] , a16[ 9] , a17[ 9])) , details::maybe_genmask<stype>(a0(a1[ 10] , a2[ 10] , a3[ 10] , a4[ 10] , a5[ 10] , a6[ 10] , a7[ 10] , a8[ 10] , a9[ 10] , a10[ 10] , a11[ 10] , a12[ 10] , a13[ 10] , a14[ 10] , a15[ 10] , a16[ 10] , a17[ 10])) , details::maybe_genmask<stype>(a0(a1[ 11] , a2[ 11] , a3[ 11] , a4[ 11] , a5[ 11] , a6[ 11] , a7[ 11] , a8[ 11] , a9[ 11] , a10[ 11] , a11[ 11] , a12[ 11] , a13[ 11] , a14[ 11] , a15[ 11] , a16[ 11] , a17[ 11])) , details::maybe_genmask<stype>(a0(a1[ 12] , a2[ 12] , a3[ 12] , a4[ 12] , a5[ 12] , a6[ 12] , a7[ 12] , a8[ 12] , a9[ 12] , a10[ 12] , a11[ 12] , a12[ 12] , a13[ 12] , a14[ 12] , a15[ 12] , a16[ 12] , a17[ 12])) , details::maybe_genmask<stype>(a0(a1[ 13] , a2[ 13] , a3[ 13] , a4[ 13] , a5[ 13] , a6[ 13] , a7[ 13] , a8[ 13] , a9[ 13] , a10[ 13] , a11[ 13] , a12[ 13] , a13[ 13] , a14[ 13] , a15[ 13] , a16[ 13] , a17[ 13])) , details::maybe_genmask<stype>(a0(a1[ 14] , a2[ 14] , a3[ 14] , a4[ 14] , a5[ 14] , a6[ 14] , a7[ 14] , a8[ 14] , a9[ 14] , a10[ 14] , a11[ 14] , a12[ 14] , a13[ 14] , a14[ 14] , a15[ 14] , a16[ 14] , a17[ 14])) , details::maybe_genmask<stype>(a0(a1[ 15] , a2[ 15] , a3[ 15] , a4[ 15] , a5[ 15] , a6[ 15] , a7[ 15] , a8[ 15] , a9[ 15] , a10[ 15] , a11[ 15] , a12[ 15] , a13[ 15] , a14[ 15] , a15[ 15] , a16[ 15] , a17[ 15]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints8_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints8_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints8_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4] , a18[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5] , a18[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6] , a18[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7] , a18[ 7])) , details::maybe_genmask<stype>(a0(a1[ 8] , a2[ 8] , a3[ 8] , a4[ 8] , a5[ 8] , a6[ 8] , a7[ 8] , a8[ 8] , a9[ 8] , a10[ 8] , a11[ 8] , a12[ 8] , a13[ 8] , a14[ 8] , a15[ 8] , a16[ 8] , a17[ 8] , a18[ 8])) , details::maybe_genmask<stype>(a0(a1[ 9] , a2[ 9] , a3[ 9] , a4[ 9] , a5[ 9] , a6[ 9] , a7[ 9] , a8[ 9] , a9[ 9] , a10[ 9] , a11[ 9] , a12[ 9] , a13[ 9] , a14[ 9] , a15[ 9] , a16[ 9] , a17[ 9] , a18[ 9])) , details::maybe_genmask<stype>(a0(a1[ 10] , a2[ 10] , a3[ 10] , a4[ 10] , a5[ 10] , a6[ 10] , a7[ 10] , a8[ 10] , a9[ 10] , a10[ 10] , a11[ 10] , a12[ 10] , a13[ 10] , a14[ 10] , a15[ 10] , a16[ 10] , a17[ 10] , a18[ 10])) , details::maybe_genmask<stype>(a0(a1[ 11] , a2[ 11] , a3[ 11] , a4[ 11] , a5[ 11] , a6[ 11] , a7[ 11] , a8[ 11] , a9[ 11] , a10[ 11] , a11[ 11] , a12[ 11] , a13[ 11] , a14[ 11] , a15[ 11] , a16[ 11] , a17[ 11] , a18[ 11])) , details::maybe_genmask<stype>(a0(a1[ 12] , a2[ 12] , a3[ 12] , a4[ 12] , a5[ 12] , a6[ 12] , a7[ 12] , a8[ 12] , a9[ 12] , a10[ 12] , a11[ 12] , a12[ 12] , a13[ 12] , a14[ 12] , a15[ 12] , a16[ 12] , a17[ 12] , a18[ 12])) , details::maybe_genmask<stype>(a0(a1[ 13] , a2[ 13] , a3[ 13] , a4[ 13] , a5[ 13] , a6[ 13] , a7[ 13] , a8[ 13] , a9[ 13] , a10[ 13] , a11[ 13] , a12[ 13] , a13[ 13] , a14[ 13] , a15[ 13] , a16[ 13] , a17[ 13] , a18[ 13])) , details::maybe_genmask<stype>(a0(a1[ 14] , a2[ 14] , a3[ 14] , a4[ 14] , a5[ 14] , a6[ 14] , a7[ 14] , a8[ 14] , a9[ 14] , a10[ 14] , a11[ 14] , a12[ 14] , a13[ 14] , a14[ 14] , a15[ 14] , a16[ 14] , a17[ 14] , a18[ 14])) , details::maybe_genmask<stype>(a0(a1[ 15] , a2[ 15] , a3[ 15] , a4[ 15] , a5[ 15] , a6[ 15] , a7[ 15] , a8[ 15] , a9[ 15] , a10[ 15] , a11[ 15] , a12[ 15] , a13[ 15] , a14[ 15] , a15[ 15] , a16[ 15] , a17[ 15] , a18[ 15]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints8_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints8_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints8_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4] , a18[ 4] , a19[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5] , a18[ 5] , a19[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6] , a18[ 6] , a19[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7] , a18[ 7] , a19[ 7])) , details::maybe_genmask<stype>(a0(a1[ 8] , a2[ 8] , a3[ 8] , a4[ 8] , a5[ 8] , a6[ 8] , a7[ 8] , a8[ 8] , a9[ 8] , a10[ 8] , a11[ 8] , a12[ 8] , a13[ 8] , a14[ 8] , a15[ 8] , a16[ 8] , a17[ 8] , a18[ 8] , a19[ 8])) , details::maybe_genmask<stype>(a0(a1[ 9] , a2[ 9] , a3[ 9] , a4[ 9] , a5[ 9] , a6[ 9] , a7[ 9] , a8[ 9] , a9[ 9] , a10[ 9] , a11[ 9] , a12[ 9] , a13[ 9] , a14[ 9] , a15[ 9] , a16[ 9] , a17[ 9] , a18[ 9] , a19[ 9])) , details::maybe_genmask<stype>(a0(a1[ 10] , a2[ 10] , a3[ 10] , a4[ 10] , a5[ 10] , a6[ 10] , a7[ 10] , a8[ 10] , a9[ 10] , a10[ 10] , a11[ 10] , a12[ 10] , a13[ 10] , a14[ 10] , a15[ 10] , a16[ 10] , a17[ 10] , a18[ 10] , a19[ 10])) , details::maybe_genmask<stype>(a0(a1[ 11] , a2[ 11] , a3[ 11] , a4[ 11] , a5[ 11] , a6[ 11] , a7[ 11] , a8[ 11] , a9[ 11] , a10[ 11] , a11[ 11] , a12[ 11] , a13[ 11] , a14[ 11] , a15[ 11] , a16[ 11] , a17[ 11] , a18[ 11] , a19[ 11])) , details::maybe_genmask<stype>(a0(a1[ 12] , a2[ 12] , a3[ 12] , a4[ 12] , a5[ 12] , a6[ 12] , a7[ 12] , a8[ 12] , a9[ 12] , a10[ 12] , a11[ 12] , a12[ 12] , a13[ 12] , a14[ 12] , a15[ 12] , a16[ 12] , a17[ 12] , a18[ 12] , a19[ 12])) , details::maybe_genmask<stype>(a0(a1[ 13] , a2[ 13] , a3[ 13] , a4[ 13] , a5[ 13] , a6[ 13] , a7[ 13] , a8[ 13] , a9[ 13] , a10[ 13] , a11[ 13] , a12[ 13] , a13[ 13] , a14[ 13] , a15[ 13] , a16[ 13] , a17[ 13] , a18[ 13] , a19[ 13])) , details::maybe_genmask<stype>(a0(a1[ 14] , a2[ 14] , a3[ 14] , a4[ 14] , a5[ 14] , a6[ 14] , a7[ 14] , a8[ 14] , a9[ 14] , a10[ 14] , a11[ 14] , a12[ 14] , a13[ 14] , a14[ 14] , a15[ 14] , a16[ 14] , a17[ 14] , a18[ 14] , a19[ 14])) , details::maybe_genmask<stype>(a0(a1[ 15] , a2[ 15] , a3[ 15] , a4[ 15] , a5[ 15] , a6[ 15] , a7[ 15] , a8[ 15] , a9[ 15] , a10[ 15] , a11[ 15] , a12[ 15] , a13[ 15] , a14[ 15] , a15[ 15] , a16[ 15] , a17[ 15] , a18[ 15] , a19[ 15]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints8_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints8_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints8_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4] , a18[ 4] , a19[ 4] , a20[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5] , a18[ 5] , a19[ 5] , a20[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6] , a18[ 6] , a19[ 6] , a20[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7] , a18[ 7] , a19[ 7] , a20[ 7])) , details::maybe_genmask<stype>(a0(a1[ 8] , a2[ 8] , a3[ 8] , a4[ 8] , a5[ 8] , a6[ 8] , a7[ 8] , a8[ 8] , a9[ 8] , a10[ 8] , a11[ 8] , a12[ 8] , a13[ 8] , a14[ 8] , a15[ 8] , a16[ 8] , a17[ 8] , a18[ 8] , a19[ 8] , a20[ 8])) , details::maybe_genmask<stype>(a0(a1[ 9] , a2[ 9] , a3[ 9] , a4[ 9] , a5[ 9] , a6[ 9] , a7[ 9] , a8[ 9] , a9[ 9] , a10[ 9] , a11[ 9] , a12[ 9] , a13[ 9] , a14[ 9] , a15[ 9] , a16[ 9] , a17[ 9] , a18[ 9] , a19[ 9] , a20[ 9])) , details::maybe_genmask<stype>(a0(a1[ 10] , a2[ 10] , a3[ 10] , a4[ 10] , a5[ 10] , a6[ 10] , a7[ 10] , a8[ 10] , a9[ 10] , a10[ 10] , a11[ 10] , a12[ 10] , a13[ 10] , a14[ 10] , a15[ 10] , a16[ 10] , a17[ 10] , a18[ 10] , a19[ 10] , a20[ 10])) , details::maybe_genmask<stype>(a0(a1[ 11] , a2[ 11] , a3[ 11] , a4[ 11] , a5[ 11] , a6[ 11] , a7[ 11] , a8[ 11] , a9[ 11] , a10[ 11] , a11[ 11] , a12[ 11] , a13[ 11] , a14[ 11] , a15[ 11] , a16[ 11] , a17[ 11] , a18[ 11] , a19[ 11] , a20[ 11])) , details::maybe_genmask<stype>(a0(a1[ 12] , a2[ 12] , a3[ 12] , a4[ 12] , a5[ 12] , a6[ 12] , a7[ 12] , a8[ 12] , a9[ 12] , a10[ 12] , a11[ 12] , a12[ 12] , a13[ 12] , a14[ 12] , a15[ 12] , a16[ 12] , a17[ 12] , a18[ 12] , a19[ 12] , a20[ 12])) , details::maybe_genmask<stype>(a0(a1[ 13] , a2[ 13] , a3[ 13] , a4[ 13] , a5[ 13] , a6[ 13] , a7[ 13] , a8[ 13] , a9[ 13] , a10[ 13] , a11[ 13] , a12[ 13] , a13[ 13] , a14[ 13] , a15[ 13] , a16[ 13] , a17[ 13] , a18[ 13] , a19[ 13] , a20[ 13])) , details::maybe_genmask<stype>(a0(a1[ 14] , a2[ 14] , a3[ 14] , a4[ 14] , a5[ 14] , a6[ 14] , a7[ 14] , a8[ 14] , a9[ 14] , a10[ 14] , a11[ 14] , a12[ 14] , a13[ 14] , a14[ 14] , a15[ 14] , a16[ 14] , a17[ 14] , a18[ 14] , a19[ 14] , a20[ 14])) , details::maybe_genmask<stype>(a0(a1[ 15] , a2[ 15] , a3[ 15] , a4[ 15] , a5[ 15] , a6[ 15] , a7[ 15] , a8[ 15] , a9[ 15] , a10[ 15] , a11[ 15] , a12[ 15] , a13[ 15] , a14[ 15] , a15[ 15] , a16[ 15] , a17[ 15] , a18[ 15] , a19[ 15] , a20[ 15]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints8_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints8_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints8_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4] , a18[ 4] , a19[ 4] , a20[ 4] , a21[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5] , a18[ 5] , a19[ 5] , a20[ 5] , a21[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6] , a18[ 6] , a19[ 6] , a20[ 6] , a21[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7] , a18[ 7] , a19[ 7] , a20[ 7] , a21[ 7])) , details::maybe_genmask<stype>(a0(a1[ 8] , a2[ 8] , a3[ 8] , a4[ 8] , a5[ 8] , a6[ 8] , a7[ 8] , a8[ 8] , a9[ 8] , a10[ 8] , a11[ 8] , a12[ 8] , a13[ 8] , a14[ 8] , a15[ 8] , a16[ 8] , a17[ 8] , a18[ 8] , a19[ 8] , a20[ 8] , a21[ 8])) , details::maybe_genmask<stype>(a0(a1[ 9] , a2[ 9] , a3[ 9] , a4[ 9] , a5[ 9] , a6[ 9] , a7[ 9] , a8[ 9] , a9[ 9] , a10[ 9] , a11[ 9] , a12[ 9] , a13[ 9] , a14[ 9] , a15[ 9] , a16[ 9] , a17[ 9] , a18[ 9] , a19[ 9] , a20[ 9] , a21[ 9])) , details::maybe_genmask<stype>(a0(a1[ 10] , a2[ 10] , a3[ 10] , a4[ 10] , a5[ 10] , a6[ 10] , a7[ 10] , a8[ 10] , a9[ 10] , a10[ 10] , a11[ 10] , a12[ 10] , a13[ 10] , a14[ 10] , a15[ 10] , a16[ 10] , a17[ 10] , a18[ 10] , a19[ 10] , a20[ 10] , a21[ 10])) , details::maybe_genmask<stype>(a0(a1[ 11] , a2[ 11] , a3[ 11] , a4[ 11] , a5[ 11] , a6[ 11] , a7[ 11] , a8[ 11] , a9[ 11] , a10[ 11] , a11[ 11] , a12[ 11] , a13[ 11] , a14[ 11] , a15[ 11] , a16[ 11] , a17[ 11] , a18[ 11] , a19[ 11] , a20[ 11] , a21[ 11])) , details::maybe_genmask<stype>(a0(a1[ 12] , a2[ 12] , a3[ 12] , a4[ 12] , a5[ 12] , a6[ 12] , a7[ 12] , a8[ 12] , a9[ 12] , a10[ 12] , a11[ 12] , a12[ 12] , a13[ 12] , a14[ 12] , a15[ 12] , a16[ 12] , a17[ 12] , a18[ 12] , a19[ 12] , a20[ 12] , a21[ 12])) , details::maybe_genmask<stype>(a0(a1[ 13] , a2[ 13] , a3[ 13] , a4[ 13] , a5[ 13] , a6[ 13] , a7[ 13] , a8[ 13] , a9[ 13] , a10[ 13] , a11[ 13] , a12[ 13] , a13[ 13] , a14[ 13] , a15[ 13] , a16[ 13] , a17[ 13] , a18[ 13] , a19[ 13] , a20[ 13] , a21[ 13])) , details::maybe_genmask<stype>(a0(a1[ 14] , a2[ 14] , a3[ 14] , a4[ 14] , a5[ 14] , a6[ 14] , a7[ 14] , a8[ 14] , a9[ 14] , a10[ 14] , a11[ 14] , a12[ 14] , a13[ 14] , a14[ 14] , a15[ 14] , a16[ 14] , a17[ 14] , a18[ 14] , a19[ 14] , a20[ 14] , a21[ 14])) , details::maybe_genmask<stype>(a0(a1[ 15] , a2[ 15] , a3[ 15] , a4[ 15] , a5[ 15] , a6[ 15] , a7[ 15] , a8[ 15] , a9[ 15] , a10[ 15] , a11[ 15] , a12[ 15] , a13[ 15] , a14[ 15] , a15[ 15] , a16[ 15] , a17[ 15] , a18[ 15] , a19[ 15] , a20[ 15] , a21[ 15]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints8_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints8_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints8_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4] , a18[ 4] , a19[ 4] , a20[ 4] , a21[ 4] , a22[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5] , a18[ 5] , a19[ 5] , a20[ 5] , a21[ 5] , a22[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6] , a18[ 6] , a19[ 6] , a20[ 6] , a21[ 6] , a22[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7] , a18[ 7] , a19[ 7] , a20[ 7] , a21[ 7] , a22[ 7])) , details::maybe_genmask<stype>(a0(a1[ 8] , a2[ 8] , a3[ 8] , a4[ 8] , a5[ 8] , a6[ 8] , a7[ 8] , a8[ 8] , a9[ 8] , a10[ 8] , a11[ 8] , a12[ 8] , a13[ 8] , a14[ 8] , a15[ 8] , a16[ 8] , a17[ 8] , a18[ 8] , a19[ 8] , a20[ 8] , a21[ 8] , a22[ 8])) , details::maybe_genmask<stype>(a0(a1[ 9] , a2[ 9] , a3[ 9] , a4[ 9] , a5[ 9] , a6[ 9] , a7[ 9] , a8[ 9] , a9[ 9] , a10[ 9] , a11[ 9] , a12[ 9] , a13[ 9] , a14[ 9] , a15[ 9] , a16[ 9] , a17[ 9] , a18[ 9] , a19[ 9] , a20[ 9] , a21[ 9] , a22[ 9])) , details::maybe_genmask<stype>(a0(a1[ 10] , a2[ 10] , a3[ 10] , a4[ 10] , a5[ 10] , a6[ 10] , a7[ 10] , a8[ 10] , a9[ 10] , a10[ 10] , a11[ 10] , a12[ 10] , a13[ 10] , a14[ 10] , a15[ 10] , a16[ 10] , a17[ 10] , a18[ 10] , a19[ 10] , a20[ 10] , a21[ 10] , a22[ 10])) , details::maybe_genmask<stype>(a0(a1[ 11] , a2[ 11] , a3[ 11] , a4[ 11] , a5[ 11] , a6[ 11] , a7[ 11] , a8[ 11] , a9[ 11] , a10[ 11] , a11[ 11] , a12[ 11] , a13[ 11] , a14[ 11] , a15[ 11] , a16[ 11] , a17[ 11] , a18[ 11] , a19[ 11] , a20[ 11] , a21[ 11] , a22[ 11])) , details::maybe_genmask<stype>(a0(a1[ 12] , a2[ 12] , a3[ 12] , a4[ 12] , a5[ 12] , a6[ 12] , a7[ 12] , a8[ 12] , a9[ 12] , a10[ 12] , a11[ 12] , a12[ 12] , a13[ 12] , a14[ 12] , a15[ 12] , a16[ 12] , a17[ 12] , a18[ 12] , a19[ 12] , a20[ 12] , a21[ 12] , a22[ 12])) , details::maybe_genmask<stype>(a0(a1[ 13] , a2[ 13] , a3[ 13] , a4[ 13] , a5[ 13] , a6[ 13] , a7[ 13] , a8[ 13] , a9[ 13] , a10[ 13] , a11[ 13] , a12[ 13] , a13[ 13] , a14[ 13] , a15[ 13] , a16[ 13] , a17[ 13] , a18[ 13] , a19[ 13] , a20[ 13] , a21[ 13] , a22[ 13])) , details::maybe_genmask<stype>(a0(a1[ 14] , a2[ 14] , a3[ 14] , a4[ 14] , a5[ 14] , a6[ 14] , a7[ 14] , a8[ 14] , a9[ 14] , a10[ 14] , a11[ 14] , a12[ 14] , a13[ 14] , a14[ 14] , a15[ 14] , a16[ 14] , a17[ 14] , a18[ 14] , a19[ 14] , a20[ 14] , a21[ 14] , a22[ 14])) , details::maybe_genmask<stype>(a0(a1[ 15] , a2[ 15] , a3[ 15] , a4[ 15] , a5[ 15] , a6[ 15] , a7[ 15] , a8[ 15] , a9[ 15] , a10[ 15] , a11[ 15] , a12[ 15] , a13[ 15] , a14[ 15] , a15[ 15] , a16[ 15] , a17[ 15] , a18[ 15] , a19[ 15] , a20[ 15] , a21[ 15] , a22[ 15]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints8_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints8_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints8_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4] , a18[ 4] , a19[ 4] , a20[ 4] , a21[ 4] , a22[ 4] , a23[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5] , a18[ 5] , a19[ 5] , a20[ 5] , a21[ 5] , a22[ 5] , a23[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6] , a18[ 6] , a19[ 6] , a20[ 6] , a21[ 6] , a22[ 6] , a23[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7] , a18[ 7] , a19[ 7] , a20[ 7] , a21[ 7] , a22[ 7] , a23[ 7])) , details::maybe_genmask<stype>(a0(a1[ 8] , a2[ 8] , a3[ 8] , a4[ 8] , a5[ 8] , a6[ 8] , a7[ 8] , a8[ 8] , a9[ 8] , a10[ 8] , a11[ 8] , a12[ 8] , a13[ 8] , a14[ 8] , a15[ 8] , a16[ 8] , a17[ 8] , a18[ 8] , a19[ 8] , a20[ 8] , a21[ 8] , a22[ 8] , a23[ 8])) , details::maybe_genmask<stype>(a0(a1[ 9] , a2[ 9] , a3[ 9] , a4[ 9] , a5[ 9] , a6[ 9] , a7[ 9] , a8[ 9] , a9[ 9] , a10[ 9] , a11[ 9] , a12[ 9] , a13[ 9] , a14[ 9] , a15[ 9] , a16[ 9] , a17[ 9] , a18[ 9] , a19[ 9] , a20[ 9] , a21[ 9] , a22[ 9] , a23[ 9])) , details::maybe_genmask<stype>(a0(a1[ 10] , a2[ 10] , a3[ 10] , a4[ 10] , a5[ 10] , a6[ 10] , a7[ 10] , a8[ 10] , a9[ 10] , a10[ 10] , a11[ 10] , a12[ 10] , a13[ 10] , a14[ 10] , a15[ 10] , a16[ 10] , a17[ 10] , a18[ 10] , a19[ 10] , a20[ 10] , a21[ 10] , a22[ 10] , a23[ 10])) , details::maybe_genmask<stype>(a0(a1[ 11] , a2[ 11] , a3[ 11] , a4[ 11] , a5[ 11] , a6[ 11] , a7[ 11] , a8[ 11] , a9[ 11] , a10[ 11] , a11[ 11] , a12[ 11] , a13[ 11] , a14[ 11] , a15[ 11] , a16[ 11] , a17[ 11] , a18[ 11] , a19[ 11] , a20[ 11] , a21[ 11] , a22[ 11] , a23[ 11])) , details::maybe_genmask<stype>(a0(a1[ 12] , a2[ 12] , a3[ 12] , a4[ 12] , a5[ 12] , a6[ 12] , a7[ 12] , a8[ 12] , a9[ 12] , a10[ 12] , a11[ 12] , a12[ 12] , a13[ 12] , a14[ 12] , a15[ 12] , a16[ 12] , a17[ 12] , a18[ 12] , a19[ 12] , a20[ 12] , a21[ 12] , a22[ 12] , a23[ 12])) , details::maybe_genmask<stype>(a0(a1[ 13] , a2[ 13] , a3[ 13] , a4[ 13] , a5[ 13] , a6[ 13] , a7[ 13] , a8[ 13] , a9[ 13] , a10[ 13] , a11[ 13] , a12[ 13] , a13[ 13] , a14[ 13] , a15[ 13] , a16[ 13] , a17[ 13] , a18[ 13] , a19[ 13] , a20[ 13] , a21[ 13] , a22[ 13] , a23[ 13])) , details::maybe_genmask<stype>(a0(a1[ 14] , a2[ 14] , a3[ 14] , a4[ 14] , a5[ 14] , a6[ 14] , a7[ 14] , a8[ 14] , a9[ 14] , a10[ 14] , a11[ 14] , a12[ 14] , a13[ 14] , a14[ 14] , a15[ 14] , a16[ 14] , a17[ 14] , a18[ 14] , a19[ 14] , a20[ 14] , a21[ 14] , a22[ 14] , a23[ 14])) , details::maybe_genmask<stype>(a0(a1[ 15] , a2[ 15] , a3[ 15] , a4[ 15] , a5[ 15] , a6[ 15] , a7[ 15] , a8[ 15] , a9[ 15] , a10[ 15] , a11[ 15] , a12[ 15] , a13[ 15] , a14[ 15] , a15[ 15] , a16[ 15] , a17[ 15] , a18[ 15] , a19[ 15] , a20[ 15] , a21[ 15] , a22[ 15] , a23[ 15]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints8_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints8_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints8_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4] , a18[ 4] , a19[ 4] , a20[ 4] , a21[ 4] , a22[ 4] , a23[ 4] , a24[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5] , a18[ 5] , a19[ 5] , a20[ 5] , a21[ 5] , a22[ 5] , a23[ 5] , a24[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6] , a18[ 6] , a19[ 6] , a20[ 6] , a21[ 6] , a22[ 6] , a23[ 6] , a24[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7] , a18[ 7] , a19[ 7] , a20[ 7] , a21[ 7] , a22[ 7] , a23[ 7] , a24[ 7])) , details::maybe_genmask<stype>(a0(a1[ 8] , a2[ 8] , a3[ 8] , a4[ 8] , a5[ 8] , a6[ 8] , a7[ 8] , a8[ 8] , a9[ 8] , a10[ 8] , a11[ 8] , a12[ 8] , a13[ 8] , a14[ 8] , a15[ 8] , a16[ 8] , a17[ 8] , a18[ 8] , a19[ 8] , a20[ 8] , a21[ 8] , a22[ 8] , a23[ 8] , a24[ 8])) , details::maybe_genmask<stype>(a0(a1[ 9] , a2[ 9] , a3[ 9] , a4[ 9] , a5[ 9] , a6[ 9] , a7[ 9] , a8[ 9] , a9[ 9] , a10[ 9] , a11[ 9] , a12[ 9] , a13[ 9] , a14[ 9] , a15[ 9] , a16[ 9] , a17[ 9] , a18[ 9] , a19[ 9] , a20[ 9] , a21[ 9] , a22[ 9] , a23[ 9] , a24[ 9])) , details::maybe_genmask<stype>(a0(a1[ 10] , a2[ 10] , a3[ 10] , a4[ 10] , a5[ 10] , a6[ 10] , a7[ 10] , a8[ 10] , a9[ 10] , a10[ 10] , a11[ 10] , a12[ 10] , a13[ 10] , a14[ 10] , a15[ 10] , a16[ 10] , a17[ 10] , a18[ 10] , a19[ 10] , a20[ 10] , a21[ 10] , a22[ 10] , a23[ 10] , a24[ 10])) , details::maybe_genmask<stype>(a0(a1[ 11] , a2[ 11] , a3[ 11] , a4[ 11] , a5[ 11] , a6[ 11] , a7[ 11] , a8[ 11] , a9[ 11] , a10[ 11] , a11[ 11] , a12[ 11] , a13[ 11] , a14[ 11] , a15[ 11] , a16[ 11] , a17[ 11] , a18[ 11] , a19[ 11] , a20[ 11] , a21[ 11] , a22[ 11] , a23[ 11] , a24[ 11])) , details::maybe_genmask<stype>(a0(a1[ 12] , a2[ 12] , a3[ 12] , a4[ 12] , a5[ 12] , a6[ 12] , a7[ 12] , a8[ 12] , a9[ 12] , a10[ 12] , a11[ 12] , a12[ 12] , a13[ 12] , a14[ 12] , a15[ 12] , a16[ 12] , a17[ 12] , a18[ 12] , a19[ 12] , a20[ 12] , a21[ 12] , a22[ 12] , a23[ 12] , a24[ 12])) , details::maybe_genmask<stype>(a0(a1[ 13] , a2[ 13] , a3[ 13] , a4[ 13] , a5[ 13] , a6[ 13] , a7[ 13] , a8[ 13] , a9[ 13] , a10[ 13] , a11[ 13] , a12[ 13] , a13[ 13] , a14[ 13] , a15[ 13] , a16[ 13] , a17[ 13] , a18[ 13] , a19[ 13] , a20[ 13] , a21[ 13] , a22[ 13] , a23[ 13] , a24[ 13])) , details::maybe_genmask<stype>(a0(a1[ 14] , a2[ 14] , a3[ 14] , a4[ 14] , a5[ 14] , a6[ 14] , a7[ 14] , a8[ 14] , a9[ 14] , a10[ 14] , a11[ 14] , a12[ 14] , a13[ 14] , a14[ 14] , a15[ 14] , a16[ 14] , a17[ 14] , a18[ 14] , a19[ 14] , a20[ 14] , a21[ 14] , a22[ 14] , a23[ 14] , a24[ 14])) , details::maybe_genmask<stype>(a0(a1[ 15] , a2[ 15] , a3[ 15] , a4[ 15] , a5[ 15] , a6[ 15] , a7[ 15] , a8[ 15] , a9[ 15] , a10[ 15] , a11[ 15] , a12[ 15] , a13[ 15] , a14[ 15] , a15[ 15] , a16[ 15] , a17[ 15] , a18[ 15] , a19[ 15] , a20[ 15] , a21[ 15] , a22[ 15] , a23[ 15] , a24[ 15]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints8_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints8_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints8_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4] , a18[ 4] , a19[ 4] , a20[ 4] , a21[ 4] , a22[ 4] , a23[ 4] , a24[ 4] , a25[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5] , a18[ 5] , a19[ 5] , a20[ 5] , a21[ 5] , a22[ 5] , a23[ 5] , a24[ 5] , a25[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6] , a18[ 6] , a19[ 6] , a20[ 6] , a21[ 6] , a22[ 6] , a23[ 6] , a24[ 6] , a25[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7] , a18[ 7] , a19[ 7] , a20[ 7] , a21[ 7] , a22[ 7] , a23[ 7] , a24[ 7] , a25[ 7])) , details::maybe_genmask<stype>(a0(a1[ 8] , a2[ 8] , a3[ 8] , a4[ 8] , a5[ 8] , a6[ 8] , a7[ 8] , a8[ 8] , a9[ 8] , a10[ 8] , a11[ 8] , a12[ 8] , a13[ 8] , a14[ 8] , a15[ 8] , a16[ 8] , a17[ 8] , a18[ 8] , a19[ 8] , a20[ 8] , a21[ 8] , a22[ 8] , a23[ 8] , a24[ 8] , a25[ 8])) , details::maybe_genmask<stype>(a0(a1[ 9] , a2[ 9] , a3[ 9] , a4[ 9] , a5[ 9] , a6[ 9] , a7[ 9] , a8[ 9] , a9[ 9] , a10[ 9] , a11[ 9] , a12[ 9] , a13[ 9] , a14[ 9] , a15[ 9] , a16[ 9] , a17[ 9] , a18[ 9] , a19[ 9] , a20[ 9] , a21[ 9] , a22[ 9] , a23[ 9] , a24[ 9] , a25[ 9])) , details::maybe_genmask<stype>(a0(a1[ 10] , a2[ 10] , a3[ 10] , a4[ 10] , a5[ 10] , a6[ 10] , a7[ 10] , a8[ 10] , a9[ 10] , a10[ 10] , a11[ 10] , a12[ 10] , a13[ 10] , a14[ 10] , a15[ 10] , a16[ 10] , a17[ 10] , a18[ 10] , a19[ 10] , a20[ 10] , a21[ 10] , a22[ 10] , a23[ 10] , a24[ 10] , a25[ 10])) , details::maybe_genmask<stype>(a0(a1[ 11] , a2[ 11] , a3[ 11] , a4[ 11] , a5[ 11] , a6[ 11] , a7[ 11] , a8[ 11] , a9[ 11] , a10[ 11] , a11[ 11] , a12[ 11] , a13[ 11] , a14[ 11] , a15[ 11] , a16[ 11] , a17[ 11] , a18[ 11] , a19[ 11] , a20[ 11] , a21[ 11] , a22[ 11] , a23[ 11] , a24[ 11] , a25[ 11])) , details::maybe_genmask<stype>(a0(a1[ 12] , a2[ 12] , a3[ 12] , a4[ 12] , a5[ 12] , a6[ 12] , a7[ 12] , a8[ 12] , a9[ 12] , a10[ 12] , a11[ 12] , a12[ 12] , a13[ 12] , a14[ 12] , a15[ 12] , a16[ 12] , a17[ 12] , a18[ 12] , a19[ 12] , a20[ 12] , a21[ 12] , a22[ 12] , a23[ 12] , a24[ 12] , a25[ 12])) , details::maybe_genmask<stype>(a0(a1[ 13] , a2[ 13] , a3[ 13] , a4[ 13] , a5[ 13] , a6[ 13] , a7[ 13] , a8[ 13] , a9[ 13] , a10[ 13] , a11[ 13] , a12[ 13] , a13[ 13] , a14[ 13] , a15[ 13] , a16[ 13] , a17[ 13] , a18[ 13] , a19[ 13] , a20[ 13] , a21[ 13] , a22[ 13] , a23[ 13] , a24[ 13] , a25[ 13])) , details::maybe_genmask<stype>(a0(a1[ 14] , a2[ 14] , a3[ 14] , a4[ 14] , a5[ 14] , a6[ 14] , a7[ 14] , a8[ 14] , a9[ 14] , a10[ 14] , a11[ 14] , a12[ 14] , a13[ 14] , a14[ 14] , a15[ 14] , a16[ 14] , a17[ 14] , a18[ 14] , a19[ 14] , a20[ 14] , a21[ 14] , a22[ 14] , a23[ 14] , a24[ 14] , a25[ 14])) , details::maybe_genmask<stype>(a0(a1[ 15] , a2[ 15] , a3[ 15] , a4[ 15] , a5[ 15] , a6[ 15] , a7[ 15] , a8[ 15] , a9[ 15] , a10[ 15] , a11[ 15] , a12[ 15] , a13[ 15] , a14[ 15] , a15[ 15] , a16[ 15] , a17[ 15] , a18[ 15] , a19[ 15] , a20[ 15] , a21[ 15] , a22[ 15] , a23[ 15] , a24[ 15] , a25[ 15]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints8_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints8_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints8_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4] , a18[ 4] , a19[ 4] , a20[ 4] , a21[ 4] , a22[ 4] , a23[ 4] , a24[ 4] , a25[ 4] , a26[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5] , a18[ 5] , a19[ 5] , a20[ 5] , a21[ 5] , a22[ 5] , a23[ 5] , a24[ 5] , a25[ 5] , a26[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6] , a18[ 6] , a19[ 6] , a20[ 6] , a21[ 6] , a22[ 6] , a23[ 6] , a24[ 6] , a25[ 6] , a26[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7] , a18[ 7] , a19[ 7] , a20[ 7] , a21[ 7] , a22[ 7] , a23[ 7] , a24[ 7] , a25[ 7] , a26[ 7])) , details::maybe_genmask<stype>(a0(a1[ 8] , a2[ 8] , a3[ 8] , a4[ 8] , a5[ 8] , a6[ 8] , a7[ 8] , a8[ 8] , a9[ 8] , a10[ 8] , a11[ 8] , a12[ 8] , a13[ 8] , a14[ 8] , a15[ 8] , a16[ 8] , a17[ 8] , a18[ 8] , a19[ 8] , a20[ 8] , a21[ 8] , a22[ 8] , a23[ 8] , a24[ 8] , a25[ 8] , a26[ 8])) , details::maybe_genmask<stype>(a0(a1[ 9] , a2[ 9] , a3[ 9] , a4[ 9] , a5[ 9] , a6[ 9] , a7[ 9] , a8[ 9] , a9[ 9] , a10[ 9] , a11[ 9] , a12[ 9] , a13[ 9] , a14[ 9] , a15[ 9] , a16[ 9] , a17[ 9] , a18[ 9] , a19[ 9] , a20[ 9] , a21[ 9] , a22[ 9] , a23[ 9] , a24[ 9] , a25[ 9] , a26[ 9])) , details::maybe_genmask<stype>(a0(a1[ 10] , a2[ 10] , a3[ 10] , a4[ 10] , a5[ 10] , a6[ 10] , a7[ 10] , a8[ 10] , a9[ 10] , a10[ 10] , a11[ 10] , a12[ 10] , a13[ 10] , a14[ 10] , a15[ 10] , a16[ 10] , a17[ 10] , a18[ 10] , a19[ 10] , a20[ 10] , a21[ 10] , a22[ 10] , a23[ 10] , a24[ 10] , a25[ 10] , a26[ 10])) , details::maybe_genmask<stype>(a0(a1[ 11] , a2[ 11] , a3[ 11] , a4[ 11] , a5[ 11] , a6[ 11] , a7[ 11] , a8[ 11] , a9[ 11] , a10[ 11] , a11[ 11] , a12[ 11] , a13[ 11] , a14[ 11] , a15[ 11] , a16[ 11] , a17[ 11] , a18[ 11] , a19[ 11] , a20[ 11] , a21[ 11] , a22[ 11] , a23[ 11] , a24[ 11] , a25[ 11] , a26[ 11])) , details::maybe_genmask<stype>(a0(a1[ 12] , a2[ 12] , a3[ 12] , a4[ 12] , a5[ 12] , a6[ 12] , a7[ 12] , a8[ 12] , a9[ 12] , a10[ 12] , a11[ 12] , a12[ 12] , a13[ 12] , a14[ 12] , a15[ 12] , a16[ 12] , a17[ 12] , a18[ 12] , a19[ 12] , a20[ 12] , a21[ 12] , a22[ 12] , a23[ 12] , a24[ 12] , a25[ 12] , a26[ 12])) , details::maybe_genmask<stype>(a0(a1[ 13] , a2[ 13] , a3[ 13] , a4[ 13] , a5[ 13] , a6[ 13] , a7[ 13] , a8[ 13] , a9[ 13] , a10[ 13] , a11[ 13] , a12[ 13] , a13[ 13] , a14[ 13] , a15[ 13] , a16[ 13] , a17[ 13] , a18[ 13] , a19[ 13] , a20[ 13] , a21[ 13] , a22[ 13] , a23[ 13] , a24[ 13] , a25[ 13] , a26[ 13])) , details::maybe_genmask<stype>(a0(a1[ 14] , a2[ 14] , a3[ 14] , a4[ 14] , a5[ 14] , a6[ 14] , a7[ 14] , a8[ 14] , a9[ 14] , a10[ 14] , a11[ 14] , a12[ 14] , a13[ 14] , a14[ 14] , a15[ 14] , a16[ 14] , a17[ 14] , a18[ 14] , a19[ 14] , a20[ 14] , a21[ 14] , a22[ 14] , a23[ 14] , a24[ 14] , a25[ 14] , a26[ 14])) , details::maybe_genmask<stype>(a0(a1[ 15] , a2[ 15] , a3[ 15] , a4[ 15] , a5[ 15] , a6[ 15] , a7[ 15] , a8[ 15] , a9[ 15] , a10[ 15] , a11[ 15] , a12[ 15] , a13[ 15] , a14[ 15] , a15[ 15] , a16[ 15] , a17[ 15] , a18[ 15] , a19[ 15] , a20[ 15] , a21[ 15] , a22[ 15] , a23[ 15] , a24[ 15] , a25[ 15] , a26[ 15]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints8_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints8_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints8_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4] , a18[ 4] , a19[ 4] , a20[ 4] , a21[ 4] , a22[ 4] , a23[ 4] , a24[ 4] , a25[ 4] , a26[ 4] , a27[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5] , a18[ 5] , a19[ 5] , a20[ 5] , a21[ 5] , a22[ 5] , a23[ 5] , a24[ 5] , a25[ 5] , a26[ 5] , a27[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6] , a18[ 6] , a19[ 6] , a20[ 6] , a21[ 6] , a22[ 6] , a23[ 6] , a24[ 6] , a25[ 6] , a26[ 6] , a27[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7] , a18[ 7] , a19[ 7] , a20[ 7] , a21[ 7] , a22[ 7] , a23[ 7] , a24[ 7] , a25[ 7] , a26[ 7] , a27[ 7])) , details::maybe_genmask<stype>(a0(a1[ 8] , a2[ 8] , a3[ 8] , a4[ 8] , a5[ 8] , a6[ 8] , a7[ 8] , a8[ 8] , a9[ 8] , a10[ 8] , a11[ 8] , a12[ 8] , a13[ 8] , a14[ 8] , a15[ 8] , a16[ 8] , a17[ 8] , a18[ 8] , a19[ 8] , a20[ 8] , a21[ 8] , a22[ 8] , a23[ 8] , a24[ 8] , a25[ 8] , a26[ 8] , a27[ 8])) , details::maybe_genmask<stype>(a0(a1[ 9] , a2[ 9] , a3[ 9] , a4[ 9] , a5[ 9] , a6[ 9] , a7[ 9] , a8[ 9] , a9[ 9] , a10[ 9] , a11[ 9] , a12[ 9] , a13[ 9] , a14[ 9] , a15[ 9] , a16[ 9] , a17[ 9] , a18[ 9] , a19[ 9] , a20[ 9] , a21[ 9] , a22[ 9] , a23[ 9] , a24[ 9] , a25[ 9] , a26[ 9] , a27[ 9])) , details::maybe_genmask<stype>(a0(a1[ 10] , a2[ 10] , a3[ 10] , a4[ 10] , a5[ 10] , a6[ 10] , a7[ 10] , a8[ 10] , a9[ 10] , a10[ 10] , a11[ 10] , a12[ 10] , a13[ 10] , a14[ 10] , a15[ 10] , a16[ 10] , a17[ 10] , a18[ 10] , a19[ 10] , a20[ 10] , a21[ 10] , a22[ 10] , a23[ 10] , a24[ 10] , a25[ 10] , a26[ 10] , a27[ 10])) , details::maybe_genmask<stype>(a0(a1[ 11] , a2[ 11] , a3[ 11] , a4[ 11] , a5[ 11] , a6[ 11] , a7[ 11] , a8[ 11] , a9[ 11] , a10[ 11] , a11[ 11] , a12[ 11] , a13[ 11] , a14[ 11] , a15[ 11] , a16[ 11] , a17[ 11] , a18[ 11] , a19[ 11] , a20[ 11] , a21[ 11] , a22[ 11] , a23[ 11] , a24[ 11] , a25[ 11] , a26[ 11] , a27[ 11])) , details::maybe_genmask<stype>(a0(a1[ 12] , a2[ 12] , a3[ 12] , a4[ 12] , a5[ 12] , a6[ 12] , a7[ 12] , a8[ 12] , a9[ 12] , a10[ 12] , a11[ 12] , a12[ 12] , a13[ 12] , a14[ 12] , a15[ 12] , a16[ 12] , a17[ 12] , a18[ 12] , a19[ 12] , a20[ 12] , a21[ 12] , a22[ 12] , a23[ 12] , a24[ 12] , a25[ 12] , a26[ 12] , a27[ 12])) , details::maybe_genmask<stype>(a0(a1[ 13] , a2[ 13] , a3[ 13] , a4[ 13] , a5[ 13] , a6[ 13] , a7[ 13] , a8[ 13] , a9[ 13] , a10[ 13] , a11[ 13] , a12[ 13] , a13[ 13] , a14[ 13] , a15[ 13] , a16[ 13] , a17[ 13] , a18[ 13] , a19[ 13] , a20[ 13] , a21[ 13] , a22[ 13] , a23[ 13] , a24[ 13] , a25[ 13] , a26[ 13] , a27[ 13])) , details::maybe_genmask<stype>(a0(a1[ 14] , a2[ 14] , a3[ 14] , a4[ 14] , a5[ 14] , a6[ 14] , a7[ 14] , a8[ 14] , a9[ 14] , a10[ 14] , a11[ 14] , a12[ 14] , a13[ 14] , a14[ 14] , a15[ 14] , a16[ 14] , a17[ 14] , a18[ 14] , a19[ 14] , a20[ 14] , a21[ 14] , a22[ 14] , a23[ 14] , a24[ 14] , a25[ 14] , a26[ 14] , a27[ 14])) , details::maybe_genmask<stype>(a0(a1[ 15] , a2[ 15] , a3[ 15] , a4[ 15] , a5[ 15] , a6[ 15] , a7[ 15] , a8[ 15] , a9[ 15] , a10[ 15] , a11[ 15] , a12[ 15] , a13[ 15] , a14[ 15] , a15[ 15] , a16[ 15] , a17[ 15] , a18[ 15] , a19[ 15] , a20[ 15] , a21[ 15] , a22[ 15] , a23[ 15] , a24[ 15] , a25[ 15] , a26[ 15] , a27[ 15]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints8_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints8_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints8_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4] , a18[ 4] , a19[ 4] , a20[ 4] , a21[ 4] , a22[ 4] , a23[ 4] , a24[ 4] , a25[ 4] , a26[ 4] , a27[ 4] , a28[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5] , a18[ 5] , a19[ 5] , a20[ 5] , a21[ 5] , a22[ 5] , a23[ 5] , a24[ 5] , a25[ 5] , a26[ 5] , a27[ 5] , a28[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6] , a18[ 6] , a19[ 6] , a20[ 6] , a21[ 6] , a22[ 6] , a23[ 6] , a24[ 6] , a25[ 6] , a26[ 6] , a27[ 6] , a28[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7] , a18[ 7] , a19[ 7] , a20[ 7] , a21[ 7] , a22[ 7] , a23[ 7] , a24[ 7] , a25[ 7] , a26[ 7] , a27[ 7] , a28[ 7])) , details::maybe_genmask<stype>(a0(a1[ 8] , a2[ 8] , a3[ 8] , a4[ 8] , a5[ 8] , a6[ 8] , a7[ 8] , a8[ 8] , a9[ 8] , a10[ 8] , a11[ 8] , a12[ 8] , a13[ 8] , a14[ 8] , a15[ 8] , a16[ 8] , a17[ 8] , a18[ 8] , a19[ 8] , a20[ 8] , a21[ 8] , a22[ 8] , a23[ 8] , a24[ 8] , a25[ 8] , a26[ 8] , a27[ 8] , a28[ 8])) , details::maybe_genmask<stype>(a0(a1[ 9] , a2[ 9] , a3[ 9] , a4[ 9] , a5[ 9] , a6[ 9] , a7[ 9] , a8[ 9] , a9[ 9] , a10[ 9] , a11[ 9] , a12[ 9] , a13[ 9] , a14[ 9] , a15[ 9] , a16[ 9] , a17[ 9] , a18[ 9] , a19[ 9] , a20[ 9] , a21[ 9] , a22[ 9] , a23[ 9] , a24[ 9] , a25[ 9] , a26[ 9] , a27[ 9] , a28[ 9])) , details::maybe_genmask<stype>(a0(a1[ 10] , a2[ 10] , a3[ 10] , a4[ 10] , a5[ 10] , a6[ 10] , a7[ 10] , a8[ 10] , a9[ 10] , a10[ 10] , a11[ 10] , a12[ 10] , a13[ 10] , a14[ 10] , a15[ 10] , a16[ 10] , a17[ 10] , a18[ 10] , a19[ 10] , a20[ 10] , a21[ 10] , a22[ 10] , a23[ 10] , a24[ 10] , a25[ 10] , a26[ 10] , a27[ 10] , a28[ 10])) , details::maybe_genmask<stype>(a0(a1[ 11] , a2[ 11] , a3[ 11] , a4[ 11] , a5[ 11] , a6[ 11] , a7[ 11] , a8[ 11] , a9[ 11] , a10[ 11] , a11[ 11] , a12[ 11] , a13[ 11] , a14[ 11] , a15[ 11] , a16[ 11] , a17[ 11] , a18[ 11] , a19[ 11] , a20[ 11] , a21[ 11] , a22[ 11] , a23[ 11] , a24[ 11] , a25[ 11] , a26[ 11] , a27[ 11] , a28[ 11])) , details::maybe_genmask<stype>(a0(a1[ 12] , a2[ 12] , a3[ 12] , a4[ 12] , a5[ 12] , a6[ 12] , a7[ 12] , a8[ 12] , a9[ 12] , a10[ 12] , a11[ 12] , a12[ 12] , a13[ 12] , a14[ 12] , a15[ 12] , a16[ 12] , a17[ 12] , a18[ 12] , a19[ 12] , a20[ 12] , a21[ 12] , a22[ 12] , a23[ 12] , a24[ 12] , a25[ 12] , a26[ 12] , a27[ 12] , a28[ 12])) , details::maybe_genmask<stype>(a0(a1[ 13] , a2[ 13] , a3[ 13] , a4[ 13] , a5[ 13] , a6[ 13] , a7[ 13] , a8[ 13] , a9[ 13] , a10[ 13] , a11[ 13] , a12[ 13] , a13[ 13] , a14[ 13] , a15[ 13] , a16[ 13] , a17[ 13] , a18[ 13] , a19[ 13] , a20[ 13] , a21[ 13] , a22[ 13] , a23[ 13] , a24[ 13] , a25[ 13] , a26[ 13] , a27[ 13] , a28[ 13])) , details::maybe_genmask<stype>(a0(a1[ 14] , a2[ 14] , a3[ 14] , a4[ 14] , a5[ 14] , a6[ 14] , a7[ 14] , a8[ 14] , a9[ 14] , a10[ 14] , a11[ 14] , a12[ 14] , a13[ 14] , a14[ 14] , a15[ 14] , a16[ 14] , a17[ 14] , a18[ 14] , a19[ 14] , a20[ 14] , a21[ 14] , a22[ 14] , a23[ 14] , a24[ 14] , a25[ 14] , a26[ 14] , a27[ 14] , a28[ 14])) , details::maybe_genmask<stype>(a0(a1[ 15] , a2[ 15] , a3[ 15] , a4[ 15] , a5[ 15] , a6[ 15] , a7[ 15] , a8[ 15] , a9[ 15] , a10[ 15] , a11[ 15] , a12[ 15] , a13[ 15] , a14[ 15] , a15[ 15] , a16[ 15] , a17[ 15] , a18[ 15] , a19[ 15] , a20[ 15] , a21[ 15] , a22[ 15] , a23[ 15] , a24[ 15] , a25[ 15] , a26[ 15] , a27[ 15] , a28[ 15]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints8_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints8_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints8_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4] , a18[ 4] , a19[ 4] , a20[ 4] , a21[ 4] , a22[ 4] , a23[ 4] , a24[ 4] , a25[ 4] , a26[ 4] , a27[ 4] , a28[ 4] , a29[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5] , a18[ 5] , a19[ 5] , a20[ 5] , a21[ 5] , a22[ 5] , a23[ 5] , a24[ 5] , a25[ 5] , a26[ 5] , a27[ 5] , a28[ 5] , a29[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6] , a18[ 6] , a19[ 6] , a20[ 6] , a21[ 6] , a22[ 6] , a23[ 6] , a24[ 6] , a25[ 6] , a26[ 6] , a27[ 6] , a28[ 6] , a29[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7] , a18[ 7] , a19[ 7] , a20[ 7] , a21[ 7] , a22[ 7] , a23[ 7] , a24[ 7] , a25[ 7] , a26[ 7] , a27[ 7] , a28[ 7] , a29[ 7])) , details::maybe_genmask<stype>(a0(a1[ 8] , a2[ 8] , a3[ 8] , a4[ 8] , a5[ 8] , a6[ 8] , a7[ 8] , a8[ 8] , a9[ 8] , a10[ 8] , a11[ 8] , a12[ 8] , a13[ 8] , a14[ 8] , a15[ 8] , a16[ 8] , a17[ 8] , a18[ 8] , a19[ 8] , a20[ 8] , a21[ 8] , a22[ 8] , a23[ 8] , a24[ 8] , a25[ 8] , a26[ 8] , a27[ 8] , a28[ 8] , a29[ 8])) , details::maybe_genmask<stype>(a0(a1[ 9] , a2[ 9] , a3[ 9] , a4[ 9] , a5[ 9] , a6[ 9] , a7[ 9] , a8[ 9] , a9[ 9] , a10[ 9] , a11[ 9] , a12[ 9] , a13[ 9] , a14[ 9] , a15[ 9] , a16[ 9] , a17[ 9] , a18[ 9] , a19[ 9] , a20[ 9] , a21[ 9] , a22[ 9] , a23[ 9] , a24[ 9] , a25[ 9] , a26[ 9] , a27[ 9] , a28[ 9] , a29[ 9])) , details::maybe_genmask<stype>(a0(a1[ 10] , a2[ 10] , a3[ 10] , a4[ 10] , a5[ 10] , a6[ 10] , a7[ 10] , a8[ 10] , a9[ 10] , a10[ 10] , a11[ 10] , a12[ 10] , a13[ 10] , a14[ 10] , a15[ 10] , a16[ 10] , a17[ 10] , a18[ 10] , a19[ 10] , a20[ 10] , a21[ 10] , a22[ 10] , a23[ 10] , a24[ 10] , a25[ 10] , a26[ 10] , a27[ 10] , a28[ 10] , a29[ 10])) , details::maybe_genmask<stype>(a0(a1[ 11] , a2[ 11] , a3[ 11] , a4[ 11] , a5[ 11] , a6[ 11] , a7[ 11] , a8[ 11] , a9[ 11] , a10[ 11] , a11[ 11] , a12[ 11] , a13[ 11] , a14[ 11] , a15[ 11] , a16[ 11] , a17[ 11] , a18[ 11] , a19[ 11] , a20[ 11] , a21[ 11] , a22[ 11] , a23[ 11] , a24[ 11] , a25[ 11] , a26[ 11] , a27[ 11] , a28[ 11] , a29[ 11])) , details::maybe_genmask<stype>(a0(a1[ 12] , a2[ 12] , a3[ 12] , a4[ 12] , a5[ 12] , a6[ 12] , a7[ 12] , a8[ 12] , a9[ 12] , a10[ 12] , a11[ 12] , a12[ 12] , a13[ 12] , a14[ 12] , a15[ 12] , a16[ 12] , a17[ 12] , a18[ 12] , a19[ 12] , a20[ 12] , a21[ 12] , a22[ 12] , a23[ 12] , a24[ 12] , a25[ 12] , a26[ 12] , a27[ 12] , a28[ 12] , a29[ 12])) , details::maybe_genmask<stype>(a0(a1[ 13] , a2[ 13] , a3[ 13] , a4[ 13] , a5[ 13] , a6[ 13] , a7[ 13] , a8[ 13] , a9[ 13] , a10[ 13] , a11[ 13] , a12[ 13] , a13[ 13] , a14[ 13] , a15[ 13] , a16[ 13] , a17[ 13] , a18[ 13] , a19[ 13] , a20[ 13] , a21[ 13] , a22[ 13] , a23[ 13] , a24[ 13] , a25[ 13] , a26[ 13] , a27[ 13] , a28[ 13] , a29[ 13])) , details::maybe_genmask<stype>(a0(a1[ 14] , a2[ 14] , a3[ 14] , a4[ 14] , a5[ 14] , a6[ 14] , a7[ 14] , a8[ 14] , a9[ 14] , a10[ 14] , a11[ 14] , a12[ 14] , a13[ 14] , a14[ 14] , a15[ 14] , a16[ 14] , a17[ 14] , a18[ 14] , a19[ 14] , a20[ 14] , a21[ 14] , a22[ 14] , a23[ 14] , a24[ 14] , a25[ 14] , a26[ 14] , a27[ 14] , a28[ 14] , a29[ 14])) , details::maybe_genmask<stype>(a0(a1[ 15] , a2[ 15] , a3[ 15] , a4[ 15] , a5[ 15] , a6[ 15] , a7[ 15] , a8[ 15] , a9[ 15] , a10[ 15] , a11[ 15] , a12[ 15] , a13[ 15] , a14[ 15] , a15[ 15] , a16[ 15] , a17[ 15] , a18[ 15] , a19[ 15] , a20[ 15] , a21[ 15] , a22[ 15] , a23[ 15] , a24[ 15] , a25[ 15] , a26[ 15] , a27[ 15] , a28[ 15] , a29[ 15]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints8_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints8_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints8_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4] , a18[ 4] , a19[ 4] , a20[ 4] , a21[ 4] , a22[ 4] , a23[ 4] , a24[ 4] , a25[ 4] , a26[ 4] , a27[ 4] , a28[ 4] , a29[ 4] , a30[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5] , a18[ 5] , a19[ 5] , a20[ 5] , a21[ 5] , a22[ 5] , a23[ 5] , a24[ 5] , a25[ 5] , a26[ 5] , a27[ 5] , a28[ 5] , a29[ 5] , a30[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6] , a18[ 6] , a19[ 6] , a20[ 6] , a21[ 6] , a22[ 6] , a23[ 6] , a24[ 6] , a25[ 6] , a26[ 6] , a27[ 6] , a28[ 6] , a29[ 6] , a30[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7] , a18[ 7] , a19[ 7] , a20[ 7] , a21[ 7] , a22[ 7] , a23[ 7] , a24[ 7] , a25[ 7] , a26[ 7] , a27[ 7] , a28[ 7] , a29[ 7] , a30[ 7])) , details::maybe_genmask<stype>(a0(a1[ 8] , a2[ 8] , a3[ 8] , a4[ 8] , a5[ 8] , a6[ 8] , a7[ 8] , a8[ 8] , a9[ 8] , a10[ 8] , a11[ 8] , a12[ 8] , a13[ 8] , a14[ 8] , a15[ 8] , a16[ 8] , a17[ 8] , a18[ 8] , a19[ 8] , a20[ 8] , a21[ 8] , a22[ 8] , a23[ 8] , a24[ 8] , a25[ 8] , a26[ 8] , a27[ 8] , a28[ 8] , a29[ 8] , a30[ 8])) , details::maybe_genmask<stype>(a0(a1[ 9] , a2[ 9] , a3[ 9] , a4[ 9] , a5[ 9] , a6[ 9] , a7[ 9] , a8[ 9] , a9[ 9] , a10[ 9] , a11[ 9] , a12[ 9] , a13[ 9] , a14[ 9] , a15[ 9] , a16[ 9] , a17[ 9] , a18[ 9] , a19[ 9] , a20[ 9] , a21[ 9] , a22[ 9] , a23[ 9] , a24[ 9] , a25[ 9] , a26[ 9] , a27[ 9] , a28[ 9] , a29[ 9] , a30[ 9])) , details::maybe_genmask<stype>(a0(a1[ 10] , a2[ 10] , a3[ 10] , a4[ 10] , a5[ 10] , a6[ 10] , a7[ 10] , a8[ 10] , a9[ 10] , a10[ 10] , a11[ 10] , a12[ 10] , a13[ 10] , a14[ 10] , a15[ 10] , a16[ 10] , a17[ 10] , a18[ 10] , a19[ 10] , a20[ 10] , a21[ 10] , a22[ 10] , a23[ 10] , a24[ 10] , a25[ 10] , a26[ 10] , a27[ 10] , a28[ 10] , a29[ 10] , a30[ 10])) , details::maybe_genmask<stype>(a0(a1[ 11] , a2[ 11] , a3[ 11] , a4[ 11] , a5[ 11] , a6[ 11] , a7[ 11] , a8[ 11] , a9[ 11] , a10[ 11] , a11[ 11] , a12[ 11] , a13[ 11] , a14[ 11] , a15[ 11] , a16[ 11] , a17[ 11] , a18[ 11] , a19[ 11] , a20[ 11] , a21[ 11] , a22[ 11] , a23[ 11] , a24[ 11] , a25[ 11] , a26[ 11] , a27[ 11] , a28[ 11] , a29[ 11] , a30[ 11])) , details::maybe_genmask<stype>(a0(a1[ 12] , a2[ 12] , a3[ 12] , a4[ 12] , a5[ 12] , a6[ 12] , a7[ 12] , a8[ 12] , a9[ 12] , a10[ 12] , a11[ 12] , a12[ 12] , a13[ 12] , a14[ 12] , a15[ 12] , a16[ 12] , a17[ 12] , a18[ 12] , a19[ 12] , a20[ 12] , a21[ 12] , a22[ 12] , a23[ 12] , a24[ 12] , a25[ 12] , a26[ 12] , a27[ 12] , a28[ 12] , a29[ 12] , a30[ 12])) , details::maybe_genmask<stype>(a0(a1[ 13] , a2[ 13] , a3[ 13] , a4[ 13] , a5[ 13] , a6[ 13] , a7[ 13] , a8[ 13] , a9[ 13] , a10[ 13] , a11[ 13] , a12[ 13] , a13[ 13] , a14[ 13] , a15[ 13] , a16[ 13] , a17[ 13] , a18[ 13] , a19[ 13] , a20[ 13] , a21[ 13] , a22[ 13] , a23[ 13] , a24[ 13] , a25[ 13] , a26[ 13] , a27[ 13] , a28[ 13] , a29[ 13] , a30[ 13])) , details::maybe_genmask<stype>(a0(a1[ 14] , a2[ 14] , a3[ 14] , a4[ 14] , a5[ 14] , a6[ 14] , a7[ 14] , a8[ 14] , a9[ 14] , a10[ 14] , a11[ 14] , a12[ 14] , a13[ 14] , a14[ 14] , a15[ 14] , a16[ 14] , a17[ 14] , a18[ 14] , a19[ 14] , a20[ 14] , a21[ 14] , a22[ 14] , a23[ 14] , a24[ 14] , a25[ 14] , a26[ 14] , a27[ 14] , a28[ 14] , a29[ 14] , a30[ 14])) , details::maybe_genmask<stype>(a0(a1[ 15] , a2[ 15] , a3[ 15] , a4[ 15] , a5[ 15] , a6[ 15] , a7[ 15] , a8[ 15] , a9[ 15] , a10[ 15] , a11[ 15] , a12[ 15] , a13[ 15] , a14[ 15] , a15[ 15] , a16[ 15] , a17[ 15] , a18[ 15] , a19[ 15] , a20[ 15] , a21[ 15] , a22[ 15] , a23[ 15] , a24[ 15] , a25[ 15] , a26[ 15] , a27[ 15] , a28[ 15] , a29[ 15] , a30[ 15]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints8_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints8_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints8_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4] , a18[ 4] , a19[ 4] , a20[ 4] , a21[ 4] , a22[ 4] , a23[ 4] , a24[ 4] , a25[ 4] , a26[ 4] , a27[ 4] , a28[ 4] , a29[ 4] , a30[ 4] , a31[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5] , a18[ 5] , a19[ 5] , a20[ 5] , a21[ 5] , a22[ 5] , a23[ 5] , a24[ 5] , a25[ 5] , a26[ 5] , a27[ 5] , a28[ 5] , a29[ 5] , a30[ 5] , a31[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6] , a18[ 6] , a19[ 6] , a20[ 6] , a21[ 6] , a22[ 6] , a23[ 6] , a24[ 6] , a25[ 6] , a26[ 6] , a27[ 6] , a28[ 6] , a29[ 6] , a30[ 6] , a31[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7] , a18[ 7] , a19[ 7] , a20[ 7] , a21[ 7] , a22[ 7] , a23[ 7] , a24[ 7] , a25[ 7] , a26[ 7] , a27[ 7] , a28[ 7] , a29[ 7] , a30[ 7] , a31[ 7])) , details::maybe_genmask<stype>(a0(a1[ 8] , a2[ 8] , a3[ 8] , a4[ 8] , a5[ 8] , a6[ 8] , a7[ 8] , a8[ 8] , a9[ 8] , a10[ 8] , a11[ 8] , a12[ 8] , a13[ 8] , a14[ 8] , a15[ 8] , a16[ 8] , a17[ 8] , a18[ 8] , a19[ 8] , a20[ 8] , a21[ 8] , a22[ 8] , a23[ 8] , a24[ 8] , a25[ 8] , a26[ 8] , a27[ 8] , a28[ 8] , a29[ 8] , a30[ 8] , a31[ 8])) , details::maybe_genmask<stype>(a0(a1[ 9] , a2[ 9] , a3[ 9] , a4[ 9] , a5[ 9] , a6[ 9] , a7[ 9] , a8[ 9] , a9[ 9] , a10[ 9] , a11[ 9] , a12[ 9] , a13[ 9] , a14[ 9] , a15[ 9] , a16[ 9] , a17[ 9] , a18[ 9] , a19[ 9] , a20[ 9] , a21[ 9] , a22[ 9] , a23[ 9] , a24[ 9] , a25[ 9] , a26[ 9] , a27[ 9] , a28[ 9] , a29[ 9] , a30[ 9] , a31[ 9])) , details::maybe_genmask<stype>(a0(a1[ 10] , a2[ 10] , a3[ 10] , a4[ 10] , a5[ 10] , a6[ 10] , a7[ 10] , a8[ 10] , a9[ 10] , a10[ 10] , a11[ 10] , a12[ 10] , a13[ 10] , a14[ 10] , a15[ 10] , a16[ 10] , a17[ 10] , a18[ 10] , a19[ 10] , a20[ 10] , a21[ 10] , a22[ 10] , a23[ 10] , a24[ 10] , a25[ 10] , a26[ 10] , a27[ 10] , a28[ 10] , a29[ 10] , a30[ 10] , a31[ 10])) , details::maybe_genmask<stype>(a0(a1[ 11] , a2[ 11] , a3[ 11] , a4[ 11] , a5[ 11] , a6[ 11] , a7[ 11] , a8[ 11] , a9[ 11] , a10[ 11] , a11[ 11] , a12[ 11] , a13[ 11] , a14[ 11] , a15[ 11] , a16[ 11] , a17[ 11] , a18[ 11] , a19[ 11] , a20[ 11] , a21[ 11] , a22[ 11] , a23[ 11] , a24[ 11] , a25[ 11] , a26[ 11] , a27[ 11] , a28[ 11] , a29[ 11] , a30[ 11] , a31[ 11])) , details::maybe_genmask<stype>(a0(a1[ 12] , a2[ 12] , a3[ 12] , a4[ 12] , a5[ 12] , a6[ 12] , a7[ 12] , a8[ 12] , a9[ 12] , a10[ 12] , a11[ 12] , a12[ 12] , a13[ 12] , a14[ 12] , a15[ 12] , a16[ 12] , a17[ 12] , a18[ 12] , a19[ 12] , a20[ 12] , a21[ 12] , a22[ 12] , a23[ 12] , a24[ 12] , a25[ 12] , a26[ 12] , a27[ 12] , a28[ 12] , a29[ 12] , a30[ 12] , a31[ 12])) , details::maybe_genmask<stype>(a0(a1[ 13] , a2[ 13] , a3[ 13] , a4[ 13] , a5[ 13] , a6[ 13] , a7[ 13] , a8[ 13] , a9[ 13] , a10[ 13] , a11[ 13] , a12[ 13] , a13[ 13] , a14[ 13] , a15[ 13] , a16[ 13] , a17[ 13] , a18[ 13] , a19[ 13] , a20[ 13] , a21[ 13] , a22[ 13] , a23[ 13] , a24[ 13] , a25[ 13] , a26[ 13] , a27[ 13] , a28[ 13] , a29[ 13] , a30[ 13] , a31[ 13])) , details::maybe_genmask<stype>(a0(a1[ 14] , a2[ 14] , a3[ 14] , a4[ 14] , a5[ 14] , a6[ 14] , a7[ 14] , a8[ 14] , a9[ 14] , a10[ 14] , a11[ 14] , a12[ 14] , a13[ 14] , a14[ 14] , a15[ 14] , a16[ 14] , a17[ 14] , a18[ 14] , a19[ 14] , a20[ 14] , a21[ 14] , a22[ 14] , a23[ 14] , a24[ 14] , a25[ 14] , a26[ 14] , a27[ 14] , a28[ 14] , a29[ 14] , a30[ 14] , a31[ 14])) , details::maybe_genmask<stype>(a0(a1[ 15] , a2[ 15] , a3[ 15] , a4[ 15] , a5[ 15] , a6[ 15] , a7[ 15] , a8[ 15] , a9[ 15] , a10[ 15] , a11[ 15] , a12[ 15] , a13[ 15] , a14[ 15] , a15[ 15] , a16[ 15] , a17[ 15] , a18[ 15] , a19[ 15] , a20[ 15] , a21[ 15] , a22[ 15] , a23[ 15] , a24[ 15] , a25[ 15] , a26[ 15] , a27[ 15] , a28[ 15] , a29[ 15] , a30[ 15] , a31[ 15]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints8_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints8_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints8_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4] , a18[ 4] , a19[ 4] , a20[ 4] , a21[ 4] , a22[ 4] , a23[ 4] , a24[ 4] , a25[ 4] , a26[ 4] , a27[ 4] , a28[ 4] , a29[ 4] , a30[ 4] , a31[ 4] , a32[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5] , a18[ 5] , a19[ 5] , a20[ 5] , a21[ 5] , a22[ 5] , a23[ 5] , a24[ 5] , a25[ 5] , a26[ 5] , a27[ 5] , a28[ 5] , a29[ 5] , a30[ 5] , a31[ 5] , a32[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6] , a18[ 6] , a19[ 6] , a20[ 6] , a21[ 6] , a22[ 6] , a23[ 6] , a24[ 6] , a25[ 6] , a26[ 6] , a27[ 6] , a28[ 6] , a29[ 6] , a30[ 6] , a31[ 6] , a32[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7] , a18[ 7] , a19[ 7] , a20[ 7] , a21[ 7] , a22[ 7] , a23[ 7] , a24[ 7] , a25[ 7] , a26[ 7] , a27[ 7] , a28[ 7] , a29[ 7] , a30[ 7] , a31[ 7] , a32[ 7])) , details::maybe_genmask<stype>(a0(a1[ 8] , a2[ 8] , a3[ 8] , a4[ 8] , a5[ 8] , a6[ 8] , a7[ 8] , a8[ 8] , a9[ 8] , a10[ 8] , a11[ 8] , a12[ 8] , a13[ 8] , a14[ 8] , a15[ 8] , a16[ 8] , a17[ 8] , a18[ 8] , a19[ 8] , a20[ 8] , a21[ 8] , a22[ 8] , a23[ 8] , a24[ 8] , a25[ 8] , a26[ 8] , a27[ 8] , a28[ 8] , a29[ 8] , a30[ 8] , a31[ 8] , a32[ 8])) , details::maybe_genmask<stype>(a0(a1[ 9] , a2[ 9] , a3[ 9] , a4[ 9] , a5[ 9] , a6[ 9] , a7[ 9] , a8[ 9] , a9[ 9] , a10[ 9] , a11[ 9] , a12[ 9] , a13[ 9] , a14[ 9] , a15[ 9] , a16[ 9] , a17[ 9] , a18[ 9] , a19[ 9] , a20[ 9] , a21[ 9] , a22[ 9] , a23[ 9] , a24[ 9] , a25[ 9] , a26[ 9] , a27[ 9] , a28[ 9] , a29[ 9] , a30[ 9] , a31[ 9] , a32[ 9])) , details::maybe_genmask<stype>(a0(a1[ 10] , a2[ 10] , a3[ 10] , a4[ 10] , a5[ 10] , a6[ 10] , a7[ 10] , a8[ 10] , a9[ 10] , a10[ 10] , a11[ 10] , a12[ 10] , a13[ 10] , a14[ 10] , a15[ 10] , a16[ 10] , a17[ 10] , a18[ 10] , a19[ 10] , a20[ 10] , a21[ 10] , a22[ 10] , a23[ 10] , a24[ 10] , a25[ 10] , a26[ 10] , a27[ 10] , a28[ 10] , a29[ 10] , a30[ 10] , a31[ 10] , a32[ 10])) , details::maybe_genmask<stype>(a0(a1[ 11] , a2[ 11] , a3[ 11] , a4[ 11] , a5[ 11] , a6[ 11] , a7[ 11] , a8[ 11] , a9[ 11] , a10[ 11] , a11[ 11] , a12[ 11] , a13[ 11] , a14[ 11] , a15[ 11] , a16[ 11] , a17[ 11] , a18[ 11] , a19[ 11] , a20[ 11] , a21[ 11] , a22[ 11] , a23[ 11] , a24[ 11] , a25[ 11] , a26[ 11] , a27[ 11] , a28[ 11] , a29[ 11] , a30[ 11] , a31[ 11] , a32[ 11])) , details::maybe_genmask<stype>(a0(a1[ 12] , a2[ 12] , a3[ 12] , a4[ 12] , a5[ 12] , a6[ 12] , a7[ 12] , a8[ 12] , a9[ 12] , a10[ 12] , a11[ 12] , a12[ 12] , a13[ 12] , a14[ 12] , a15[ 12] , a16[ 12] , a17[ 12] , a18[ 12] , a19[ 12] , a20[ 12] , a21[ 12] , a22[ 12] , a23[ 12] , a24[ 12] , a25[ 12] , a26[ 12] , a27[ 12] , a28[ 12] , a29[ 12] , a30[ 12] , a31[ 12] , a32[ 12])) , details::maybe_genmask<stype>(a0(a1[ 13] , a2[ 13] , a3[ 13] , a4[ 13] , a5[ 13] , a6[ 13] , a7[ 13] , a8[ 13] , a9[ 13] , a10[ 13] , a11[ 13] , a12[ 13] , a13[ 13] , a14[ 13] , a15[ 13] , a16[ 13] , a17[ 13] , a18[ 13] , a19[ 13] , a20[ 13] , a21[ 13] , a22[ 13] , a23[ 13] , a24[ 13] , a25[ 13] , a26[ 13] , a27[ 13] , a28[ 13] , a29[ 13] , a30[ 13] , a31[ 13] , a32[ 13])) , details::maybe_genmask<stype>(a0(a1[ 14] , a2[ 14] , a3[ 14] , a4[ 14] , a5[ 14] , a6[ 14] , a7[ 14] , a8[ 14] , a9[ 14] , a10[ 14] , a11[ 14] , a12[ 14] , a13[ 14] , a14[ 14] , a15[ 14] , a16[ 14] , a17[ 14] , a18[ 14] , a19[ 14] , a20[ 14] , a21[ 14] , a22[ 14] , a23[ 14] , a24[ 14] , a25[ 14] , a26[ 14] , a27[ 14] , a28[ 14] , a29[ 14] , a30[ 14] , a31[ 14] , a32[ 14])) , details::maybe_genmask<stype>(a0(a1[ 15] , a2[ 15] , a3[ 15] , a4[ 15] , a5[ 15] , a6[ 15] , a7[ 15] , a8[ 15] , a9[ 15] , a10[ 15] , a11[ 15] , a12[ 15] , a13[ 15] , a14[ 15] , a15[ 15] , a16[ 15] , a17[ 15] , a18[ 15] , a19[ 15] , a20[ 15] , a21[ 15] , a22[ 15] , a23[ 15] , a24[ 15] , a25[ 15] , a26[ 15] , a27[ 15] , a28[ 15] , a29[ 15] , a30[ 15] , a31[ 15] , a32[ 15]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints8_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints8_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints8_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4] , a18[ 4] , a19[ 4] , a20[ 4] , a21[ 4] , a22[ 4] , a23[ 4] , a24[ 4] , a25[ 4] , a26[ 4] , a27[ 4] , a28[ 4] , a29[ 4] , a30[ 4] , a31[ 4] , a32[ 4] , a33[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5] , a18[ 5] , a19[ 5] , a20[ 5] , a21[ 5] , a22[ 5] , a23[ 5] , a24[ 5] , a25[ 5] , a26[ 5] , a27[ 5] , a28[ 5] , a29[ 5] , a30[ 5] , a31[ 5] , a32[ 5] , a33[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6] , a18[ 6] , a19[ 6] , a20[ 6] , a21[ 6] , a22[ 6] , a23[ 6] , a24[ 6] , a25[ 6] , a26[ 6] , a27[ 6] , a28[ 6] , a29[ 6] , a30[ 6] , a31[ 6] , a32[ 6] , a33[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7] , a18[ 7] , a19[ 7] , a20[ 7] , a21[ 7] , a22[ 7] , a23[ 7] , a24[ 7] , a25[ 7] , a26[ 7] , a27[ 7] , a28[ 7] , a29[ 7] , a30[ 7] , a31[ 7] , a32[ 7] , a33[ 7])) , details::maybe_genmask<stype>(a0(a1[ 8] , a2[ 8] , a3[ 8] , a4[ 8] , a5[ 8] , a6[ 8] , a7[ 8] , a8[ 8] , a9[ 8] , a10[ 8] , a11[ 8] , a12[ 8] , a13[ 8] , a14[ 8] , a15[ 8] , a16[ 8] , a17[ 8] , a18[ 8] , a19[ 8] , a20[ 8] , a21[ 8] , a22[ 8] , a23[ 8] , a24[ 8] , a25[ 8] , a26[ 8] , a27[ 8] , a28[ 8] , a29[ 8] , a30[ 8] , a31[ 8] , a32[ 8] , a33[ 8])) , details::maybe_genmask<stype>(a0(a1[ 9] , a2[ 9] , a3[ 9] , a4[ 9] , a5[ 9] , a6[ 9] , a7[ 9] , a8[ 9] , a9[ 9] , a10[ 9] , a11[ 9] , a12[ 9] , a13[ 9] , a14[ 9] , a15[ 9] , a16[ 9] , a17[ 9] , a18[ 9] , a19[ 9] , a20[ 9] , a21[ 9] , a22[ 9] , a23[ 9] , a24[ 9] , a25[ 9] , a26[ 9] , a27[ 9] , a28[ 9] , a29[ 9] , a30[ 9] , a31[ 9] , a32[ 9] , a33[ 9])) , details::maybe_genmask<stype>(a0(a1[ 10] , a2[ 10] , a3[ 10] , a4[ 10] , a5[ 10] , a6[ 10] , a7[ 10] , a8[ 10] , a9[ 10] , a10[ 10] , a11[ 10] , a12[ 10] , a13[ 10] , a14[ 10] , a15[ 10] , a16[ 10] , a17[ 10] , a18[ 10] , a19[ 10] , a20[ 10] , a21[ 10] , a22[ 10] , a23[ 10] , a24[ 10] , a25[ 10] , a26[ 10] , a27[ 10] , a28[ 10] , a29[ 10] , a30[ 10] , a31[ 10] , a32[ 10] , a33[ 10])) , details::maybe_genmask<stype>(a0(a1[ 11] , a2[ 11] , a3[ 11] , a4[ 11] , a5[ 11] , a6[ 11] , a7[ 11] , a8[ 11] , a9[ 11] , a10[ 11] , a11[ 11] , a12[ 11] , a13[ 11] , a14[ 11] , a15[ 11] , a16[ 11] , a17[ 11] , a18[ 11] , a19[ 11] , a20[ 11] , a21[ 11] , a22[ 11] , a23[ 11] , a24[ 11] , a25[ 11] , a26[ 11] , a27[ 11] , a28[ 11] , a29[ 11] , a30[ 11] , a31[ 11] , a32[ 11] , a33[ 11])) , details::maybe_genmask<stype>(a0(a1[ 12] , a2[ 12] , a3[ 12] , a4[ 12] , a5[ 12] , a6[ 12] , a7[ 12] , a8[ 12] , a9[ 12] , a10[ 12] , a11[ 12] , a12[ 12] , a13[ 12] , a14[ 12] , a15[ 12] , a16[ 12] , a17[ 12] , a18[ 12] , a19[ 12] , a20[ 12] , a21[ 12] , a22[ 12] , a23[ 12] , a24[ 12] , a25[ 12] , a26[ 12] , a27[ 12] , a28[ 12] , a29[ 12] , a30[ 12] , a31[ 12] , a32[ 12] , a33[ 12])) , details::maybe_genmask<stype>(a0(a1[ 13] , a2[ 13] , a3[ 13] , a4[ 13] , a5[ 13] , a6[ 13] , a7[ 13] , a8[ 13] , a9[ 13] , a10[ 13] , a11[ 13] , a12[ 13] , a13[ 13] , a14[ 13] , a15[ 13] , a16[ 13] , a17[ 13] , a18[ 13] , a19[ 13] , a20[ 13] , a21[ 13] , a22[ 13] , a23[ 13] , a24[ 13] , a25[ 13] , a26[ 13] , a27[ 13] , a28[ 13] , a29[ 13] , a30[ 13] , a31[ 13] , a32[ 13] , a33[ 13])) , details::maybe_genmask<stype>(a0(a1[ 14] , a2[ 14] , a3[ 14] , a4[ 14] , a5[ 14] , a6[ 14] , a7[ 14] , a8[ 14] , a9[ 14] , a10[ 14] , a11[ 14] , a12[ 14] , a13[ 14] , a14[ 14] , a15[ 14] , a16[ 14] , a17[ 14] , a18[ 14] , a19[ 14] , a20[ 14] , a21[ 14] , a22[ 14] , a23[ 14] , a24[ 14] , a25[ 14] , a26[ 14] , a27[ 14] , a28[ 14] , a29[ 14] , a30[ 14] , a31[ 14] , a32[ 14] , a33[ 14])) , details::maybe_genmask<stype>(a0(a1[ 15] , a2[ 15] , a3[ 15] , a4[ 15] , a5[ 15] , a6[ 15] , a7[ 15] , a8[ 15] , a9[ 15] , a10[ 15] , a11[ 15] , a12[ 15] , a13[ 15] , a14[ 15] , a15[ 15] , a16[ 15] , a17[ 15] , a18[ 15] , a19[ 15] , a20[ 15] , a21[ 15] , a22[ 15] , a23[ 15] , a24[ 15] , a25[ 15] , a26[ 15] , a27[ 15] , a28[ 15] , a29[ 15] , a30[ 15] , a31[ 15] , a32[ 15] , a33[ 15]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints8_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints8_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints8_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2] , a34[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3] , a34[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4] , a18[ 4] , a19[ 4] , a20[ 4] , a21[ 4] , a22[ 4] , a23[ 4] , a24[ 4] , a25[ 4] , a26[ 4] , a27[ 4] , a28[ 4] , a29[ 4] , a30[ 4] , a31[ 4] , a32[ 4] , a33[ 4] , a34[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5] , a18[ 5] , a19[ 5] , a20[ 5] , a21[ 5] , a22[ 5] , a23[ 5] , a24[ 5] , a25[ 5] , a26[ 5] , a27[ 5] , a28[ 5] , a29[ 5] , a30[ 5] , a31[ 5] , a32[ 5] , a33[ 5] , a34[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6] , a18[ 6] , a19[ 6] , a20[ 6] , a21[ 6] , a22[ 6] , a23[ 6] , a24[ 6] , a25[ 6] , a26[ 6] , a27[ 6] , a28[ 6] , a29[ 6] , a30[ 6] , a31[ 6] , a32[ 6] , a33[ 6] , a34[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7] , a18[ 7] , a19[ 7] , a20[ 7] , a21[ 7] , a22[ 7] , a23[ 7] , a24[ 7] , a25[ 7] , a26[ 7] , a27[ 7] , a28[ 7] , a29[ 7] , a30[ 7] , a31[ 7] , a32[ 7] , a33[ 7] , a34[ 7])) , details::maybe_genmask<stype>(a0(a1[ 8] , a2[ 8] , a3[ 8] , a4[ 8] , a5[ 8] , a6[ 8] , a7[ 8] , a8[ 8] , a9[ 8] , a10[ 8] , a11[ 8] , a12[ 8] , a13[ 8] , a14[ 8] , a15[ 8] , a16[ 8] , a17[ 8] , a18[ 8] , a19[ 8] , a20[ 8] , a21[ 8] , a22[ 8] , a23[ 8] , a24[ 8] , a25[ 8] , a26[ 8] , a27[ 8] , a28[ 8] , a29[ 8] , a30[ 8] , a31[ 8] , a32[ 8] , a33[ 8] , a34[ 8])) , details::maybe_genmask<stype>(a0(a1[ 9] , a2[ 9] , a3[ 9] , a4[ 9] , a5[ 9] , a6[ 9] , a7[ 9] , a8[ 9] , a9[ 9] , a10[ 9] , a11[ 9] , a12[ 9] , a13[ 9] , a14[ 9] , a15[ 9] , a16[ 9] , a17[ 9] , a18[ 9] , a19[ 9] , a20[ 9] , a21[ 9] , a22[ 9] , a23[ 9] , a24[ 9] , a25[ 9] , a26[ 9] , a27[ 9] , a28[ 9] , a29[ 9] , a30[ 9] , a31[ 9] , a32[ 9] , a33[ 9] , a34[ 9])) , details::maybe_genmask<stype>(a0(a1[ 10] , a2[ 10] , a3[ 10] , a4[ 10] , a5[ 10] , a6[ 10] , a7[ 10] , a8[ 10] , a9[ 10] , a10[ 10] , a11[ 10] , a12[ 10] , a13[ 10] , a14[ 10] , a15[ 10] , a16[ 10] , a17[ 10] , a18[ 10] , a19[ 10] , a20[ 10] , a21[ 10] , a22[ 10] , a23[ 10] , a24[ 10] , a25[ 10] , a26[ 10] , a27[ 10] , a28[ 10] , a29[ 10] , a30[ 10] , a31[ 10] , a32[ 10] , a33[ 10] , a34[ 10])) , details::maybe_genmask<stype>(a0(a1[ 11] , a2[ 11] , a3[ 11] , a4[ 11] , a5[ 11] , a6[ 11] , a7[ 11] , a8[ 11] , a9[ 11] , a10[ 11] , a11[ 11] , a12[ 11] , a13[ 11] , a14[ 11] , a15[ 11] , a16[ 11] , a17[ 11] , a18[ 11] , a19[ 11] , a20[ 11] , a21[ 11] , a22[ 11] , a23[ 11] , a24[ 11] , a25[ 11] , a26[ 11] , a27[ 11] , a28[ 11] , a29[ 11] , a30[ 11] , a31[ 11] , a32[ 11] , a33[ 11] , a34[ 11])) , details::maybe_genmask<stype>(a0(a1[ 12] , a2[ 12] , a3[ 12] , a4[ 12] , a5[ 12] , a6[ 12] , a7[ 12] , a8[ 12] , a9[ 12] , a10[ 12] , a11[ 12] , a12[ 12] , a13[ 12] , a14[ 12] , a15[ 12] , a16[ 12] , a17[ 12] , a18[ 12] , a19[ 12] , a20[ 12] , a21[ 12] , a22[ 12] , a23[ 12] , a24[ 12] , a25[ 12] , a26[ 12] , a27[ 12] , a28[ 12] , a29[ 12] , a30[ 12] , a31[ 12] , a32[ 12] , a33[ 12] , a34[ 12])) , details::maybe_genmask<stype>(a0(a1[ 13] , a2[ 13] , a3[ 13] , a4[ 13] , a5[ 13] , a6[ 13] , a7[ 13] , a8[ 13] , a9[ 13] , a10[ 13] , a11[ 13] , a12[ 13] , a13[ 13] , a14[ 13] , a15[ 13] , a16[ 13] , a17[ 13] , a18[ 13] , a19[ 13] , a20[ 13] , a21[ 13] , a22[ 13] , a23[ 13] , a24[ 13] , a25[ 13] , a26[ 13] , a27[ 13] , a28[ 13] , a29[ 13] , a30[ 13] , a31[ 13] , a32[ 13] , a33[ 13] , a34[ 13])) , details::maybe_genmask<stype>(a0(a1[ 14] , a2[ 14] , a3[ 14] , a4[ 14] , a5[ 14] , a6[ 14] , a7[ 14] , a8[ 14] , a9[ 14] , a10[ 14] , a11[ 14] , a12[ 14] , a13[ 14] , a14[ 14] , a15[ 14] , a16[ 14] , a17[ 14] , a18[ 14] , a19[ 14] , a20[ 14] , a21[ 14] , a22[ 14] , a23[ 14] , a24[ 14] , a25[ 14] , a26[ 14] , a27[ 14] , a28[ 14] , a29[ 14] , a30[ 14] , a31[ 14] , a32[ 14] , a33[ 14] , a34[ 14])) , details::maybe_genmask<stype>(a0(a1[ 15] , a2[ 15] , a3[ 15] , a4[ 15] , a5[ 15] , a6[ 15] , a7[ 15] , a8[ 15] , a9[ 15] , a10[ 15] , a11[ 15] , a12[ 15] , a13[ 15] , a14[ 15] , a15[ 15] , a16[ 15] , a17[ 15] , a18[ 15] , a19[ 15] , a20[ 15] , a21[ 15] , a22[ 15] , a23[ 15] , a24[ 15] , a25[ 15] , a26[ 15] , a27[ 15] , a28[ 15] , a29[ 15] , a30[ 15] , a31[ 15] , a32[ 15] , a33[ 15] , a34[ 15]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints8_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints8_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints8_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2] , a34[ 2] , a35[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3] , a34[ 3] , a35[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4] , a18[ 4] , a19[ 4] , a20[ 4] , a21[ 4] , a22[ 4] , a23[ 4] , a24[ 4] , a25[ 4] , a26[ 4] , a27[ 4] , a28[ 4] , a29[ 4] , a30[ 4] , a31[ 4] , a32[ 4] , a33[ 4] , a34[ 4] , a35[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5] , a18[ 5] , a19[ 5] , a20[ 5] , a21[ 5] , a22[ 5] , a23[ 5] , a24[ 5] , a25[ 5] , a26[ 5] , a27[ 5] , a28[ 5] , a29[ 5] , a30[ 5] , a31[ 5] , a32[ 5] , a33[ 5] , a34[ 5] , a35[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6] , a18[ 6] , a19[ 6] , a20[ 6] , a21[ 6] , a22[ 6] , a23[ 6] , a24[ 6] , a25[ 6] , a26[ 6] , a27[ 6] , a28[ 6] , a29[ 6] , a30[ 6] , a31[ 6] , a32[ 6] , a33[ 6] , a34[ 6] , a35[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7] , a18[ 7] , a19[ 7] , a20[ 7] , a21[ 7] , a22[ 7] , a23[ 7] , a24[ 7] , a25[ 7] , a26[ 7] , a27[ 7] , a28[ 7] , a29[ 7] , a30[ 7] , a31[ 7] , a32[ 7] , a33[ 7] , a34[ 7] , a35[ 7])) , details::maybe_genmask<stype>(a0(a1[ 8] , a2[ 8] , a3[ 8] , a4[ 8] , a5[ 8] , a6[ 8] , a7[ 8] , a8[ 8] , a9[ 8] , a10[ 8] , a11[ 8] , a12[ 8] , a13[ 8] , a14[ 8] , a15[ 8] , a16[ 8] , a17[ 8] , a18[ 8] , a19[ 8] , a20[ 8] , a21[ 8] , a22[ 8] , a23[ 8] , a24[ 8] , a25[ 8] , a26[ 8] , a27[ 8] , a28[ 8] , a29[ 8] , a30[ 8] , a31[ 8] , a32[ 8] , a33[ 8] , a34[ 8] , a35[ 8])) , details::maybe_genmask<stype>(a0(a1[ 9] , a2[ 9] , a3[ 9] , a4[ 9] , a5[ 9] , a6[ 9] , a7[ 9] , a8[ 9] , a9[ 9] , a10[ 9] , a11[ 9] , a12[ 9] , a13[ 9] , a14[ 9] , a15[ 9] , a16[ 9] , a17[ 9] , a18[ 9] , a19[ 9] , a20[ 9] , a21[ 9] , a22[ 9] , a23[ 9] , a24[ 9] , a25[ 9] , a26[ 9] , a27[ 9] , a28[ 9] , a29[ 9] , a30[ 9] , a31[ 9] , a32[ 9] , a33[ 9] , a34[ 9] , a35[ 9])) , details::maybe_genmask<stype>(a0(a1[ 10] , a2[ 10] , a3[ 10] , a4[ 10] , a5[ 10] , a6[ 10] , a7[ 10] , a8[ 10] , a9[ 10] , a10[ 10] , a11[ 10] , a12[ 10] , a13[ 10] , a14[ 10] , a15[ 10] , a16[ 10] , a17[ 10] , a18[ 10] , a19[ 10] , a20[ 10] , a21[ 10] , a22[ 10] , a23[ 10] , a24[ 10] , a25[ 10] , a26[ 10] , a27[ 10] , a28[ 10] , a29[ 10] , a30[ 10] , a31[ 10] , a32[ 10] , a33[ 10] , a34[ 10] , a35[ 10])) , details::maybe_genmask<stype>(a0(a1[ 11] , a2[ 11] , a3[ 11] , a4[ 11] , a5[ 11] , a6[ 11] , a7[ 11] , a8[ 11] , a9[ 11] , a10[ 11] , a11[ 11] , a12[ 11] , a13[ 11] , a14[ 11] , a15[ 11] , a16[ 11] , a17[ 11] , a18[ 11] , a19[ 11] , a20[ 11] , a21[ 11] , a22[ 11] , a23[ 11] , a24[ 11] , a25[ 11] , a26[ 11] , a27[ 11] , a28[ 11] , a29[ 11] , a30[ 11] , a31[ 11] , a32[ 11] , a33[ 11] , a34[ 11] , a35[ 11])) , details::maybe_genmask<stype>(a0(a1[ 12] , a2[ 12] , a3[ 12] , a4[ 12] , a5[ 12] , a6[ 12] , a7[ 12] , a8[ 12] , a9[ 12] , a10[ 12] , a11[ 12] , a12[ 12] , a13[ 12] , a14[ 12] , a15[ 12] , a16[ 12] , a17[ 12] , a18[ 12] , a19[ 12] , a20[ 12] , a21[ 12] , a22[ 12] , a23[ 12] , a24[ 12] , a25[ 12] , a26[ 12] , a27[ 12] , a28[ 12] , a29[ 12] , a30[ 12] , a31[ 12] , a32[ 12] , a33[ 12] , a34[ 12] , a35[ 12])) , details::maybe_genmask<stype>(a0(a1[ 13] , a2[ 13] , a3[ 13] , a4[ 13] , a5[ 13] , a6[ 13] , a7[ 13] , a8[ 13] , a9[ 13] , a10[ 13] , a11[ 13] , a12[ 13] , a13[ 13] , a14[ 13] , a15[ 13] , a16[ 13] , a17[ 13] , a18[ 13] , a19[ 13] , a20[ 13] , a21[ 13] , a22[ 13] , a23[ 13] , a24[ 13] , a25[ 13] , a26[ 13] , a27[ 13] , a28[ 13] , a29[ 13] , a30[ 13] , a31[ 13] , a32[ 13] , a33[ 13] , a34[ 13] , a35[ 13])) , details::maybe_genmask<stype>(a0(a1[ 14] , a2[ 14] , a3[ 14] , a4[ 14] , a5[ 14] , a6[ 14] , a7[ 14] , a8[ 14] , a9[ 14] , a10[ 14] , a11[ 14] , a12[ 14] , a13[ 14] , a14[ 14] , a15[ 14] , a16[ 14] , a17[ 14] , a18[ 14] , a19[ 14] , a20[ 14] , a21[ 14] , a22[ 14] , a23[ 14] , a24[ 14] , a25[ 14] , a26[ 14] , a27[ 14] , a28[ 14] , a29[ 14] , a30[ 14] , a31[ 14] , a32[ 14] , a33[ 14] , a34[ 14] , a35[ 14])) , details::maybe_genmask<stype>(a0(a1[ 15] , a2[ 15] , a3[ 15] , a4[ 15] , a5[ 15] , a6[ 15] , a7[ 15] , a8[ 15] , a9[ 15] , a10[ 15] , a11[ 15] , a12[ 15] , a13[ 15] , a14[ 15] , a15[ 15] , a16[ 15] , a17[ 15] , a18[ 15] , a19[ 15] , a20[ 15] , a21[ 15] , a22[ 15] , a23[ 15] , a24[ 15] , a25[ 15] , a26[ 15] , a27[ 15] , a28[ 15] , a29[ 15] , a30[ 15] , a31[ 15] , a32[ 15] , a33[ 15] , a34[ 15] , a35[ 15]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints8_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints8_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints8_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2] , a34[ 2] , a35[ 2] , a36[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3] , a34[ 3] , a35[ 3] , a36[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4] , a18[ 4] , a19[ 4] , a20[ 4] , a21[ 4] , a22[ 4] , a23[ 4] , a24[ 4] , a25[ 4] , a26[ 4] , a27[ 4] , a28[ 4] , a29[ 4] , a30[ 4] , a31[ 4] , a32[ 4] , a33[ 4] , a34[ 4] , a35[ 4] , a36[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5] , a18[ 5] , a19[ 5] , a20[ 5] , a21[ 5] , a22[ 5] , a23[ 5] , a24[ 5] , a25[ 5] , a26[ 5] , a27[ 5] , a28[ 5] , a29[ 5] , a30[ 5] , a31[ 5] , a32[ 5] , a33[ 5] , a34[ 5] , a35[ 5] , a36[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6] , a18[ 6] , a19[ 6] , a20[ 6] , a21[ 6] , a22[ 6] , a23[ 6] , a24[ 6] , a25[ 6] , a26[ 6] , a27[ 6] , a28[ 6] , a29[ 6] , a30[ 6] , a31[ 6] , a32[ 6] , a33[ 6] , a34[ 6] , a35[ 6] , a36[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7] , a18[ 7] , a19[ 7] , a20[ 7] , a21[ 7] , a22[ 7] , a23[ 7] , a24[ 7] , a25[ 7] , a26[ 7] , a27[ 7] , a28[ 7] , a29[ 7] , a30[ 7] , a31[ 7] , a32[ 7] , a33[ 7] , a34[ 7] , a35[ 7] , a36[ 7])) , details::maybe_genmask<stype>(a0(a1[ 8] , a2[ 8] , a3[ 8] , a4[ 8] , a5[ 8] , a6[ 8] , a7[ 8] , a8[ 8] , a9[ 8] , a10[ 8] , a11[ 8] , a12[ 8] , a13[ 8] , a14[ 8] , a15[ 8] , a16[ 8] , a17[ 8] , a18[ 8] , a19[ 8] , a20[ 8] , a21[ 8] , a22[ 8] , a23[ 8] , a24[ 8] , a25[ 8] , a26[ 8] , a27[ 8] , a28[ 8] , a29[ 8] , a30[ 8] , a31[ 8] , a32[ 8] , a33[ 8] , a34[ 8] , a35[ 8] , a36[ 8])) , details::maybe_genmask<stype>(a0(a1[ 9] , a2[ 9] , a3[ 9] , a4[ 9] , a5[ 9] , a6[ 9] , a7[ 9] , a8[ 9] , a9[ 9] , a10[ 9] , a11[ 9] , a12[ 9] , a13[ 9] , a14[ 9] , a15[ 9] , a16[ 9] , a17[ 9] , a18[ 9] , a19[ 9] , a20[ 9] , a21[ 9] , a22[ 9] , a23[ 9] , a24[ 9] , a25[ 9] , a26[ 9] , a27[ 9] , a28[ 9] , a29[ 9] , a30[ 9] , a31[ 9] , a32[ 9] , a33[ 9] , a34[ 9] , a35[ 9] , a36[ 9])) , details::maybe_genmask<stype>(a0(a1[ 10] , a2[ 10] , a3[ 10] , a4[ 10] , a5[ 10] , a6[ 10] , a7[ 10] , a8[ 10] , a9[ 10] , a10[ 10] , a11[ 10] , a12[ 10] , a13[ 10] , a14[ 10] , a15[ 10] , a16[ 10] , a17[ 10] , a18[ 10] , a19[ 10] , a20[ 10] , a21[ 10] , a22[ 10] , a23[ 10] , a24[ 10] , a25[ 10] , a26[ 10] , a27[ 10] , a28[ 10] , a29[ 10] , a30[ 10] , a31[ 10] , a32[ 10] , a33[ 10] , a34[ 10] , a35[ 10] , a36[ 10])) , details::maybe_genmask<stype>(a0(a1[ 11] , a2[ 11] , a3[ 11] , a4[ 11] , a5[ 11] , a6[ 11] , a7[ 11] , a8[ 11] , a9[ 11] , a10[ 11] , a11[ 11] , a12[ 11] , a13[ 11] , a14[ 11] , a15[ 11] , a16[ 11] , a17[ 11] , a18[ 11] , a19[ 11] , a20[ 11] , a21[ 11] , a22[ 11] , a23[ 11] , a24[ 11] , a25[ 11] , a26[ 11] , a27[ 11] , a28[ 11] , a29[ 11] , a30[ 11] , a31[ 11] , a32[ 11] , a33[ 11] , a34[ 11] , a35[ 11] , a36[ 11])) , details::maybe_genmask<stype>(a0(a1[ 12] , a2[ 12] , a3[ 12] , a4[ 12] , a5[ 12] , a6[ 12] , a7[ 12] , a8[ 12] , a9[ 12] , a10[ 12] , a11[ 12] , a12[ 12] , a13[ 12] , a14[ 12] , a15[ 12] , a16[ 12] , a17[ 12] , a18[ 12] , a19[ 12] , a20[ 12] , a21[ 12] , a22[ 12] , a23[ 12] , a24[ 12] , a25[ 12] , a26[ 12] , a27[ 12] , a28[ 12] , a29[ 12] , a30[ 12] , a31[ 12] , a32[ 12] , a33[ 12] , a34[ 12] , a35[ 12] , a36[ 12])) , details::maybe_genmask<stype>(a0(a1[ 13] , a2[ 13] , a3[ 13] , a4[ 13] , a5[ 13] , a6[ 13] , a7[ 13] , a8[ 13] , a9[ 13] , a10[ 13] , a11[ 13] , a12[ 13] , a13[ 13] , a14[ 13] , a15[ 13] , a16[ 13] , a17[ 13] , a18[ 13] , a19[ 13] , a20[ 13] , a21[ 13] , a22[ 13] , a23[ 13] , a24[ 13] , a25[ 13] , a26[ 13] , a27[ 13] , a28[ 13] , a29[ 13] , a30[ 13] , a31[ 13] , a32[ 13] , a33[ 13] , a34[ 13] , a35[ 13] , a36[ 13])) , details::maybe_genmask<stype>(a0(a1[ 14] , a2[ 14] , a3[ 14] , a4[ 14] , a5[ 14] , a6[ 14] , a7[ 14] , a8[ 14] , a9[ 14] , a10[ 14] , a11[ 14] , a12[ 14] , a13[ 14] , a14[ 14] , a15[ 14] , a16[ 14] , a17[ 14] , a18[ 14] , a19[ 14] , a20[ 14] , a21[ 14] , a22[ 14] , a23[ 14] , a24[ 14] , a25[ 14] , a26[ 14] , a27[ 14] , a28[ 14] , a29[ 14] , a30[ 14] , a31[ 14] , a32[ 14] , a33[ 14] , a34[ 14] , a35[ 14] , a36[ 14])) , details::maybe_genmask<stype>(a0(a1[ 15] , a2[ 15] , a3[ 15] , a4[ 15] , a5[ 15] , a6[ 15] , a7[ 15] , a8[ 15] , a9[ 15] , a10[ 15] , a11[ 15] , a12[ 15] , a13[ 15] , a14[ 15] , a15[ 15] , a16[ 15] , a17[ 15] , a18[ 15] , a19[ 15] , a20[ 15] , a21[ 15] , a22[ 15] , a23[ 15] , a24[ 15] , a25[ 15] , a26[ 15] , a27[ 15] , a28[ 15] , a29[ 15] , a30[ 15] , a31[ 15] , a32[ 15] , a33[ 15] , a34[ 15] , a35[ 15] , a36[ 15]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints8_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints8_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints8_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2] , a34[ 2] , a35[ 2] , a36[ 2] , a37[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3] , a34[ 3] , a35[ 3] , a36[ 3] , a37[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4] , a18[ 4] , a19[ 4] , a20[ 4] , a21[ 4] , a22[ 4] , a23[ 4] , a24[ 4] , a25[ 4] , a26[ 4] , a27[ 4] , a28[ 4] , a29[ 4] , a30[ 4] , a31[ 4] , a32[ 4] , a33[ 4] , a34[ 4] , a35[ 4] , a36[ 4] , a37[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5] , a18[ 5] , a19[ 5] , a20[ 5] , a21[ 5] , a22[ 5] , a23[ 5] , a24[ 5] , a25[ 5] , a26[ 5] , a27[ 5] , a28[ 5] , a29[ 5] , a30[ 5] , a31[ 5] , a32[ 5] , a33[ 5] , a34[ 5] , a35[ 5] , a36[ 5] , a37[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6] , a18[ 6] , a19[ 6] , a20[ 6] , a21[ 6] , a22[ 6] , a23[ 6] , a24[ 6] , a25[ 6] , a26[ 6] , a27[ 6] , a28[ 6] , a29[ 6] , a30[ 6] , a31[ 6] , a32[ 6] , a33[ 6] , a34[ 6] , a35[ 6] , a36[ 6] , a37[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7] , a18[ 7] , a19[ 7] , a20[ 7] , a21[ 7] , a22[ 7] , a23[ 7] , a24[ 7] , a25[ 7] , a26[ 7] , a27[ 7] , a28[ 7] , a29[ 7] , a30[ 7] , a31[ 7] , a32[ 7] , a33[ 7] , a34[ 7] , a35[ 7] , a36[ 7] , a37[ 7])) , details::maybe_genmask<stype>(a0(a1[ 8] , a2[ 8] , a3[ 8] , a4[ 8] , a5[ 8] , a6[ 8] , a7[ 8] , a8[ 8] , a9[ 8] , a10[ 8] , a11[ 8] , a12[ 8] , a13[ 8] , a14[ 8] , a15[ 8] , a16[ 8] , a17[ 8] , a18[ 8] , a19[ 8] , a20[ 8] , a21[ 8] , a22[ 8] , a23[ 8] , a24[ 8] , a25[ 8] , a26[ 8] , a27[ 8] , a28[ 8] , a29[ 8] , a30[ 8] , a31[ 8] , a32[ 8] , a33[ 8] , a34[ 8] , a35[ 8] , a36[ 8] , a37[ 8])) , details::maybe_genmask<stype>(a0(a1[ 9] , a2[ 9] , a3[ 9] , a4[ 9] , a5[ 9] , a6[ 9] , a7[ 9] , a8[ 9] , a9[ 9] , a10[ 9] , a11[ 9] , a12[ 9] , a13[ 9] , a14[ 9] , a15[ 9] , a16[ 9] , a17[ 9] , a18[ 9] , a19[ 9] , a20[ 9] , a21[ 9] , a22[ 9] , a23[ 9] , a24[ 9] , a25[ 9] , a26[ 9] , a27[ 9] , a28[ 9] , a29[ 9] , a30[ 9] , a31[ 9] , a32[ 9] , a33[ 9] , a34[ 9] , a35[ 9] , a36[ 9] , a37[ 9])) , details::maybe_genmask<stype>(a0(a1[ 10] , a2[ 10] , a3[ 10] , a4[ 10] , a5[ 10] , a6[ 10] , a7[ 10] , a8[ 10] , a9[ 10] , a10[ 10] , a11[ 10] , a12[ 10] , a13[ 10] , a14[ 10] , a15[ 10] , a16[ 10] , a17[ 10] , a18[ 10] , a19[ 10] , a20[ 10] , a21[ 10] , a22[ 10] , a23[ 10] , a24[ 10] , a25[ 10] , a26[ 10] , a27[ 10] , a28[ 10] , a29[ 10] , a30[ 10] , a31[ 10] , a32[ 10] , a33[ 10] , a34[ 10] , a35[ 10] , a36[ 10] , a37[ 10])) , details::maybe_genmask<stype>(a0(a1[ 11] , a2[ 11] , a3[ 11] , a4[ 11] , a5[ 11] , a6[ 11] , a7[ 11] , a8[ 11] , a9[ 11] , a10[ 11] , a11[ 11] , a12[ 11] , a13[ 11] , a14[ 11] , a15[ 11] , a16[ 11] , a17[ 11] , a18[ 11] , a19[ 11] , a20[ 11] , a21[ 11] , a22[ 11] , a23[ 11] , a24[ 11] , a25[ 11] , a26[ 11] , a27[ 11] , a28[ 11] , a29[ 11] , a30[ 11] , a31[ 11] , a32[ 11] , a33[ 11] , a34[ 11] , a35[ 11] , a36[ 11] , a37[ 11])) , details::maybe_genmask<stype>(a0(a1[ 12] , a2[ 12] , a3[ 12] , a4[ 12] , a5[ 12] , a6[ 12] , a7[ 12] , a8[ 12] , a9[ 12] , a10[ 12] , a11[ 12] , a12[ 12] , a13[ 12] , a14[ 12] , a15[ 12] , a16[ 12] , a17[ 12] , a18[ 12] , a19[ 12] , a20[ 12] , a21[ 12] , a22[ 12] , a23[ 12] , a24[ 12] , a25[ 12] , a26[ 12] , a27[ 12] , a28[ 12] , a29[ 12] , a30[ 12] , a31[ 12] , a32[ 12] , a33[ 12] , a34[ 12] , a35[ 12] , a36[ 12] , a37[ 12])) , details::maybe_genmask<stype>(a0(a1[ 13] , a2[ 13] , a3[ 13] , a4[ 13] , a5[ 13] , a6[ 13] , a7[ 13] , a8[ 13] , a9[ 13] , a10[ 13] , a11[ 13] , a12[ 13] , a13[ 13] , a14[ 13] , a15[ 13] , a16[ 13] , a17[ 13] , a18[ 13] , a19[ 13] , a20[ 13] , a21[ 13] , a22[ 13] , a23[ 13] , a24[ 13] , a25[ 13] , a26[ 13] , a27[ 13] , a28[ 13] , a29[ 13] , a30[ 13] , a31[ 13] , a32[ 13] , a33[ 13] , a34[ 13] , a35[ 13] , a36[ 13] , a37[ 13])) , details::maybe_genmask<stype>(a0(a1[ 14] , a2[ 14] , a3[ 14] , a4[ 14] , a5[ 14] , a6[ 14] , a7[ 14] , a8[ 14] , a9[ 14] , a10[ 14] , a11[ 14] , a12[ 14] , a13[ 14] , a14[ 14] , a15[ 14] , a16[ 14] , a17[ 14] , a18[ 14] , a19[ 14] , a20[ 14] , a21[ 14] , a22[ 14] , a23[ 14] , a24[ 14] , a25[ 14] , a26[ 14] , a27[ 14] , a28[ 14] , a29[ 14] , a30[ 14] , a31[ 14] , a32[ 14] , a33[ 14] , a34[ 14] , a35[ 14] , a36[ 14] , a37[ 14])) , details::maybe_genmask<stype>(a0(a1[ 15] , a2[ 15] , a3[ 15] , a4[ 15] , a5[ 15] , a6[ 15] , a7[ 15] , a8[ 15] , a9[ 15] , a10[ 15] , a11[ 15] , a12[ 15] , a13[ 15] , a14[ 15] , a15[ 15] , a16[ 15] , a17[ 15] , a18[ 15] , a19[ 15] , a20[ 15] , a21[ 15] , a22[ 15] , a23[ 15] , a24[ 15] , a25[ 15] , a26[ 15] , a27[ 15] , a28[ 15] , a29[ 15] , a30[ 15] , a31[ 15] , a32[ 15] , a33[ 15] , a34[ 15] , a35[ 15] , a36[ 15] , a37[ 15]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints8_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints8_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints8_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2] , a34[ 2] , a35[ 2] , a36[ 2] , a37[ 2] , a38[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3] , a34[ 3] , a35[ 3] , a36[ 3] , a37[ 3] , a38[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4] , a18[ 4] , a19[ 4] , a20[ 4] , a21[ 4] , a22[ 4] , a23[ 4] , a24[ 4] , a25[ 4] , a26[ 4] , a27[ 4] , a28[ 4] , a29[ 4] , a30[ 4] , a31[ 4] , a32[ 4] , a33[ 4] , a34[ 4] , a35[ 4] , a36[ 4] , a37[ 4] , a38[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5] , a18[ 5] , a19[ 5] , a20[ 5] , a21[ 5] , a22[ 5] , a23[ 5] , a24[ 5] , a25[ 5] , a26[ 5] , a27[ 5] , a28[ 5] , a29[ 5] , a30[ 5] , a31[ 5] , a32[ 5] , a33[ 5] , a34[ 5] , a35[ 5] , a36[ 5] , a37[ 5] , a38[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6] , a18[ 6] , a19[ 6] , a20[ 6] , a21[ 6] , a22[ 6] , a23[ 6] , a24[ 6] , a25[ 6] , a26[ 6] , a27[ 6] , a28[ 6] , a29[ 6] , a30[ 6] , a31[ 6] , a32[ 6] , a33[ 6] , a34[ 6] , a35[ 6] , a36[ 6] , a37[ 6] , a38[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7] , a18[ 7] , a19[ 7] , a20[ 7] , a21[ 7] , a22[ 7] , a23[ 7] , a24[ 7] , a25[ 7] , a26[ 7] , a27[ 7] , a28[ 7] , a29[ 7] , a30[ 7] , a31[ 7] , a32[ 7] , a33[ 7] , a34[ 7] , a35[ 7] , a36[ 7] , a37[ 7] , a38[ 7])) , details::maybe_genmask<stype>(a0(a1[ 8] , a2[ 8] , a3[ 8] , a4[ 8] , a5[ 8] , a6[ 8] , a7[ 8] , a8[ 8] , a9[ 8] , a10[ 8] , a11[ 8] , a12[ 8] , a13[ 8] , a14[ 8] , a15[ 8] , a16[ 8] , a17[ 8] , a18[ 8] , a19[ 8] , a20[ 8] , a21[ 8] , a22[ 8] , a23[ 8] , a24[ 8] , a25[ 8] , a26[ 8] , a27[ 8] , a28[ 8] , a29[ 8] , a30[ 8] , a31[ 8] , a32[ 8] , a33[ 8] , a34[ 8] , a35[ 8] , a36[ 8] , a37[ 8] , a38[ 8])) , details::maybe_genmask<stype>(a0(a1[ 9] , a2[ 9] , a3[ 9] , a4[ 9] , a5[ 9] , a6[ 9] , a7[ 9] , a8[ 9] , a9[ 9] , a10[ 9] , a11[ 9] , a12[ 9] , a13[ 9] , a14[ 9] , a15[ 9] , a16[ 9] , a17[ 9] , a18[ 9] , a19[ 9] , a20[ 9] , a21[ 9] , a22[ 9] , a23[ 9] , a24[ 9] , a25[ 9] , a26[ 9] , a27[ 9] , a28[ 9] , a29[ 9] , a30[ 9] , a31[ 9] , a32[ 9] , a33[ 9] , a34[ 9] , a35[ 9] , a36[ 9] , a37[ 9] , a38[ 9])) , details::maybe_genmask<stype>(a0(a1[ 10] , a2[ 10] , a3[ 10] , a4[ 10] , a5[ 10] , a6[ 10] , a7[ 10] , a8[ 10] , a9[ 10] , a10[ 10] , a11[ 10] , a12[ 10] , a13[ 10] , a14[ 10] , a15[ 10] , a16[ 10] , a17[ 10] , a18[ 10] , a19[ 10] , a20[ 10] , a21[ 10] , a22[ 10] , a23[ 10] , a24[ 10] , a25[ 10] , a26[ 10] , a27[ 10] , a28[ 10] , a29[ 10] , a30[ 10] , a31[ 10] , a32[ 10] , a33[ 10] , a34[ 10] , a35[ 10] , a36[ 10] , a37[ 10] , a38[ 10])) , details::maybe_genmask<stype>(a0(a1[ 11] , a2[ 11] , a3[ 11] , a4[ 11] , a5[ 11] , a6[ 11] , a7[ 11] , a8[ 11] , a9[ 11] , a10[ 11] , a11[ 11] , a12[ 11] , a13[ 11] , a14[ 11] , a15[ 11] , a16[ 11] , a17[ 11] , a18[ 11] , a19[ 11] , a20[ 11] , a21[ 11] , a22[ 11] , a23[ 11] , a24[ 11] , a25[ 11] , a26[ 11] , a27[ 11] , a28[ 11] , a29[ 11] , a30[ 11] , a31[ 11] , a32[ 11] , a33[ 11] , a34[ 11] , a35[ 11] , a36[ 11] , a37[ 11] , a38[ 11])) , details::maybe_genmask<stype>(a0(a1[ 12] , a2[ 12] , a3[ 12] , a4[ 12] , a5[ 12] , a6[ 12] , a7[ 12] , a8[ 12] , a9[ 12] , a10[ 12] , a11[ 12] , a12[ 12] , a13[ 12] , a14[ 12] , a15[ 12] , a16[ 12] , a17[ 12] , a18[ 12] , a19[ 12] , a20[ 12] , a21[ 12] , a22[ 12] , a23[ 12] , a24[ 12] , a25[ 12] , a26[ 12] , a27[ 12] , a28[ 12] , a29[ 12] , a30[ 12] , a31[ 12] , a32[ 12] , a33[ 12] , a34[ 12] , a35[ 12] , a36[ 12] , a37[ 12] , a38[ 12])) , details::maybe_genmask<stype>(a0(a1[ 13] , a2[ 13] , a3[ 13] , a4[ 13] , a5[ 13] , a6[ 13] , a7[ 13] , a8[ 13] , a9[ 13] , a10[ 13] , a11[ 13] , a12[ 13] , a13[ 13] , a14[ 13] , a15[ 13] , a16[ 13] , a17[ 13] , a18[ 13] , a19[ 13] , a20[ 13] , a21[ 13] , a22[ 13] , a23[ 13] , a24[ 13] , a25[ 13] , a26[ 13] , a27[ 13] , a28[ 13] , a29[ 13] , a30[ 13] , a31[ 13] , a32[ 13] , a33[ 13] , a34[ 13] , a35[ 13] , a36[ 13] , a37[ 13] , a38[ 13])) , details::maybe_genmask<stype>(a0(a1[ 14] , a2[ 14] , a3[ 14] , a4[ 14] , a5[ 14] , a6[ 14] , a7[ 14] , a8[ 14] , a9[ 14] , a10[ 14] , a11[ 14] , a12[ 14] , a13[ 14] , a14[ 14] , a15[ 14] , a16[ 14] , a17[ 14] , a18[ 14] , a19[ 14] , a20[ 14] , a21[ 14] , a22[ 14] , a23[ 14] , a24[ 14] , a25[ 14] , a26[ 14] , a27[ 14] , a28[ 14] , a29[ 14] , a30[ 14] , a31[ 14] , a32[ 14] , a33[ 14] , a34[ 14] , a35[ 14] , a36[ 14] , a37[ 14] , a38[ 14])) , details::maybe_genmask<stype>(a0(a1[ 15] , a2[ 15] , a3[ 15] , a4[ 15] , a5[ 15] , a6[ 15] , a7[ 15] , a8[ 15] , a9[ 15] , a10[ 15] , a11[ 15] , a12[ 15] , a13[ 15] , a14[ 15] , a15[ 15] , a16[ 15] , a17[ 15] , a18[ 15] , a19[ 15] , a20[ 15] , a21[ 15] , a22[ 15] , a23[ 15] , a24[ 15] , a25[ 15] , a26[ 15] , a27[ 15] , a28[ 15] , a29[ 15] , a30[ 15] , a31[ 15] , a32[ 15] , a33[ 15] , a34[ 15] , a35[ 15] , a36[ 15] , a37[ 15] , a38[ 15]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints8_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints8_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints8_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2] , a34[ 2] , a35[ 2] , a36[ 2] , a37[ 2] , a38[ 2] , a39[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3] , a34[ 3] , a35[ 3] , a36[ 3] , a37[ 3] , a38[ 3] , a39[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4] , a18[ 4] , a19[ 4] , a20[ 4] , a21[ 4] , a22[ 4] , a23[ 4] , a24[ 4] , a25[ 4] , a26[ 4] , a27[ 4] , a28[ 4] , a29[ 4] , a30[ 4] , a31[ 4] , a32[ 4] , a33[ 4] , a34[ 4] , a35[ 4] , a36[ 4] , a37[ 4] , a38[ 4] , a39[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5] , a18[ 5] , a19[ 5] , a20[ 5] , a21[ 5] , a22[ 5] , a23[ 5] , a24[ 5] , a25[ 5] , a26[ 5] , a27[ 5] , a28[ 5] , a29[ 5] , a30[ 5] , a31[ 5] , a32[ 5] , a33[ 5] , a34[ 5] , a35[ 5] , a36[ 5] , a37[ 5] , a38[ 5] , a39[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6] , a18[ 6] , a19[ 6] , a20[ 6] , a21[ 6] , a22[ 6] , a23[ 6] , a24[ 6] , a25[ 6] , a26[ 6] , a27[ 6] , a28[ 6] , a29[ 6] , a30[ 6] , a31[ 6] , a32[ 6] , a33[ 6] , a34[ 6] , a35[ 6] , a36[ 6] , a37[ 6] , a38[ 6] , a39[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7] , a18[ 7] , a19[ 7] , a20[ 7] , a21[ 7] , a22[ 7] , a23[ 7] , a24[ 7] , a25[ 7] , a26[ 7] , a27[ 7] , a28[ 7] , a29[ 7] , a30[ 7] , a31[ 7] , a32[ 7] , a33[ 7] , a34[ 7] , a35[ 7] , a36[ 7] , a37[ 7] , a38[ 7] , a39[ 7])) , details::maybe_genmask<stype>(a0(a1[ 8] , a2[ 8] , a3[ 8] , a4[ 8] , a5[ 8] , a6[ 8] , a7[ 8] , a8[ 8] , a9[ 8] , a10[ 8] , a11[ 8] , a12[ 8] , a13[ 8] , a14[ 8] , a15[ 8] , a16[ 8] , a17[ 8] , a18[ 8] , a19[ 8] , a20[ 8] , a21[ 8] , a22[ 8] , a23[ 8] , a24[ 8] , a25[ 8] , a26[ 8] , a27[ 8] , a28[ 8] , a29[ 8] , a30[ 8] , a31[ 8] , a32[ 8] , a33[ 8] , a34[ 8] , a35[ 8] , a36[ 8] , a37[ 8] , a38[ 8] , a39[ 8])) , details::maybe_genmask<stype>(a0(a1[ 9] , a2[ 9] , a3[ 9] , a4[ 9] , a5[ 9] , a6[ 9] , a7[ 9] , a8[ 9] , a9[ 9] , a10[ 9] , a11[ 9] , a12[ 9] , a13[ 9] , a14[ 9] , a15[ 9] , a16[ 9] , a17[ 9] , a18[ 9] , a19[ 9] , a20[ 9] , a21[ 9] , a22[ 9] , a23[ 9] , a24[ 9] , a25[ 9] , a26[ 9] , a27[ 9] , a28[ 9] , a29[ 9] , a30[ 9] , a31[ 9] , a32[ 9] , a33[ 9] , a34[ 9] , a35[ 9] , a36[ 9] , a37[ 9] , a38[ 9] , a39[ 9])) , details::maybe_genmask<stype>(a0(a1[ 10] , a2[ 10] , a3[ 10] , a4[ 10] , a5[ 10] , a6[ 10] , a7[ 10] , a8[ 10] , a9[ 10] , a10[ 10] , a11[ 10] , a12[ 10] , a13[ 10] , a14[ 10] , a15[ 10] , a16[ 10] , a17[ 10] , a18[ 10] , a19[ 10] , a20[ 10] , a21[ 10] , a22[ 10] , a23[ 10] , a24[ 10] , a25[ 10] , a26[ 10] , a27[ 10] , a28[ 10] , a29[ 10] , a30[ 10] , a31[ 10] , a32[ 10] , a33[ 10] , a34[ 10] , a35[ 10] , a36[ 10] , a37[ 10] , a38[ 10] , a39[ 10])) , details::maybe_genmask<stype>(a0(a1[ 11] , a2[ 11] , a3[ 11] , a4[ 11] , a5[ 11] , a6[ 11] , a7[ 11] , a8[ 11] , a9[ 11] , a10[ 11] , a11[ 11] , a12[ 11] , a13[ 11] , a14[ 11] , a15[ 11] , a16[ 11] , a17[ 11] , a18[ 11] , a19[ 11] , a20[ 11] , a21[ 11] , a22[ 11] , a23[ 11] , a24[ 11] , a25[ 11] , a26[ 11] , a27[ 11] , a28[ 11] , a29[ 11] , a30[ 11] , a31[ 11] , a32[ 11] , a33[ 11] , a34[ 11] , a35[ 11] , a36[ 11] , a37[ 11] , a38[ 11] , a39[ 11])) , details::maybe_genmask<stype>(a0(a1[ 12] , a2[ 12] , a3[ 12] , a4[ 12] , a5[ 12] , a6[ 12] , a7[ 12] , a8[ 12] , a9[ 12] , a10[ 12] , a11[ 12] , a12[ 12] , a13[ 12] , a14[ 12] , a15[ 12] , a16[ 12] , a17[ 12] , a18[ 12] , a19[ 12] , a20[ 12] , a21[ 12] , a22[ 12] , a23[ 12] , a24[ 12] , a25[ 12] , a26[ 12] , a27[ 12] , a28[ 12] , a29[ 12] , a30[ 12] , a31[ 12] , a32[ 12] , a33[ 12] , a34[ 12] , a35[ 12] , a36[ 12] , a37[ 12] , a38[ 12] , a39[ 12])) , details::maybe_genmask<stype>(a0(a1[ 13] , a2[ 13] , a3[ 13] , a4[ 13] , a5[ 13] , a6[ 13] , a7[ 13] , a8[ 13] , a9[ 13] , a10[ 13] , a11[ 13] , a12[ 13] , a13[ 13] , a14[ 13] , a15[ 13] , a16[ 13] , a17[ 13] , a18[ 13] , a19[ 13] , a20[ 13] , a21[ 13] , a22[ 13] , a23[ 13] , a24[ 13] , a25[ 13] , a26[ 13] , a27[ 13] , a28[ 13] , a29[ 13] , a30[ 13] , a31[ 13] , a32[ 13] , a33[ 13] , a34[ 13] , a35[ 13] , a36[ 13] , a37[ 13] , a38[ 13] , a39[ 13])) , details::maybe_genmask<stype>(a0(a1[ 14] , a2[ 14] , a3[ 14] , a4[ 14] , a5[ 14] , a6[ 14] , a7[ 14] , a8[ 14] , a9[ 14] , a10[ 14] , a11[ 14] , a12[ 14] , a13[ 14] , a14[ 14] , a15[ 14] , a16[ 14] , a17[ 14] , a18[ 14] , a19[ 14] , a20[ 14] , a21[ 14] , a22[ 14] , a23[ 14] , a24[ 14] , a25[ 14] , a26[ 14] , a27[ 14] , a28[ 14] , a29[ 14] , a30[ 14] , a31[ 14] , a32[ 14] , a33[ 14] , a34[ 14] , a35[ 14] , a36[ 14] , a37[ 14] , a38[ 14] , a39[ 14])) , details::maybe_genmask<stype>(a0(a1[ 15] , a2[ 15] , a3[ 15] , a4[ 15] , a5[ 15] , a6[ 15] , a7[ 15] , a8[ 15] , a9[ 15] , a10[ 15] , a11[ 15] , a12[ 15] , a13[ 15] , a14[ 15] , a15[ 15] , a16[ 15] , a17[ 15] , a18[ 15] , a19[ 15] , a20[ 15] , a21[ 15] , a22[ 15] , a23[ 15] , a24[ 15] , a25[ 15] , a26[ 15] , a27[ 15] , a28[ 15] , a29[ 15] , a30[ 15] , a31[ 15] , a32[ 15] , a33[ 15] , a34[ 15] , a35[ 15] , a36[ 15] , a37[ 15] , a38[ 15] , a39[ 15]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints8_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A39>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints8_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A39>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints8_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type , typename meta::scalar_of<A39>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0] , a40[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1] , a40[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2] , a34[ 2] , a35[ 2] , a36[ 2] , a37[ 2] , a38[ 2] , a39[ 2] , a40[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3] , a34[ 3] , a35[ 3] , a36[ 3] , a37[ 3] , a38[ 3] , a39[ 3] , a40[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4] , a18[ 4] , a19[ 4] , a20[ 4] , a21[ 4] , a22[ 4] , a23[ 4] , a24[ 4] , a25[ 4] , a26[ 4] , a27[ 4] , a28[ 4] , a29[ 4] , a30[ 4] , a31[ 4] , a32[ 4] , a33[ 4] , a34[ 4] , a35[ 4] , a36[ 4] , a37[ 4] , a38[ 4] , a39[ 4] , a40[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5] , a18[ 5] , a19[ 5] , a20[ 5] , a21[ 5] , a22[ 5] , a23[ 5] , a24[ 5] , a25[ 5] , a26[ 5] , a27[ 5] , a28[ 5] , a29[ 5] , a30[ 5] , a31[ 5] , a32[ 5] , a33[ 5] , a34[ 5] , a35[ 5] , a36[ 5] , a37[ 5] , a38[ 5] , a39[ 5] , a40[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6] , a18[ 6] , a19[ 6] , a20[ 6] , a21[ 6] , a22[ 6] , a23[ 6] , a24[ 6] , a25[ 6] , a26[ 6] , a27[ 6] , a28[ 6] , a29[ 6] , a30[ 6] , a31[ 6] , a32[ 6] , a33[ 6] , a34[ 6] , a35[ 6] , a36[ 6] , a37[ 6] , a38[ 6] , a39[ 6] , a40[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7] , a18[ 7] , a19[ 7] , a20[ 7] , a21[ 7] , a22[ 7] , a23[ 7] , a24[ 7] , a25[ 7] , a26[ 7] , a27[ 7] , a28[ 7] , a29[ 7] , a30[ 7] , a31[ 7] , a32[ 7] , a33[ 7] , a34[ 7] , a35[ 7] , a36[ 7] , a37[ 7] , a38[ 7] , a39[ 7] , a40[ 7])) , details::maybe_genmask<stype>(a0(a1[ 8] , a2[ 8] , a3[ 8] , a4[ 8] , a5[ 8] , a6[ 8] , a7[ 8] , a8[ 8] , a9[ 8] , a10[ 8] , a11[ 8] , a12[ 8] , a13[ 8] , a14[ 8] , a15[ 8] , a16[ 8] , a17[ 8] , a18[ 8] , a19[ 8] , a20[ 8] , a21[ 8] , a22[ 8] , a23[ 8] , a24[ 8] , a25[ 8] , a26[ 8] , a27[ 8] , a28[ 8] , a29[ 8] , a30[ 8] , a31[ 8] , a32[ 8] , a33[ 8] , a34[ 8] , a35[ 8] , a36[ 8] , a37[ 8] , a38[ 8] , a39[ 8] , a40[ 8])) , details::maybe_genmask<stype>(a0(a1[ 9] , a2[ 9] , a3[ 9] , a4[ 9] , a5[ 9] , a6[ 9] , a7[ 9] , a8[ 9] , a9[ 9] , a10[ 9] , a11[ 9] , a12[ 9] , a13[ 9] , a14[ 9] , a15[ 9] , a16[ 9] , a17[ 9] , a18[ 9] , a19[ 9] , a20[ 9] , a21[ 9] , a22[ 9] , a23[ 9] , a24[ 9] , a25[ 9] , a26[ 9] , a27[ 9] , a28[ 9] , a29[ 9] , a30[ 9] , a31[ 9] , a32[ 9] , a33[ 9] , a34[ 9] , a35[ 9] , a36[ 9] , a37[ 9] , a38[ 9] , a39[ 9] , a40[ 9])) , details::maybe_genmask<stype>(a0(a1[ 10] , a2[ 10] , a3[ 10] , a4[ 10] , a5[ 10] , a6[ 10] , a7[ 10] , a8[ 10] , a9[ 10] , a10[ 10] , a11[ 10] , a12[ 10] , a13[ 10] , a14[ 10] , a15[ 10] , a16[ 10] , a17[ 10] , a18[ 10] , a19[ 10] , a20[ 10] , a21[ 10] , a22[ 10] , a23[ 10] , a24[ 10] , a25[ 10] , a26[ 10] , a27[ 10] , a28[ 10] , a29[ 10] , a30[ 10] , a31[ 10] , a32[ 10] , a33[ 10] , a34[ 10] , a35[ 10] , a36[ 10] , a37[ 10] , a38[ 10] , a39[ 10] , a40[ 10])) , details::maybe_genmask<stype>(a0(a1[ 11] , a2[ 11] , a3[ 11] , a4[ 11] , a5[ 11] , a6[ 11] , a7[ 11] , a8[ 11] , a9[ 11] , a10[ 11] , a11[ 11] , a12[ 11] , a13[ 11] , a14[ 11] , a15[ 11] , a16[ 11] , a17[ 11] , a18[ 11] , a19[ 11] , a20[ 11] , a21[ 11] , a22[ 11] , a23[ 11] , a24[ 11] , a25[ 11] , a26[ 11] , a27[ 11] , a28[ 11] , a29[ 11] , a30[ 11] , a31[ 11] , a32[ 11] , a33[ 11] , a34[ 11] , a35[ 11] , a36[ 11] , a37[ 11] , a38[ 11] , a39[ 11] , a40[ 11])) , details::maybe_genmask<stype>(a0(a1[ 12] , a2[ 12] , a3[ 12] , a4[ 12] , a5[ 12] , a6[ 12] , a7[ 12] , a8[ 12] , a9[ 12] , a10[ 12] , a11[ 12] , a12[ 12] , a13[ 12] , a14[ 12] , a15[ 12] , a16[ 12] , a17[ 12] , a18[ 12] , a19[ 12] , a20[ 12] , a21[ 12] , a22[ 12] , a23[ 12] , a24[ 12] , a25[ 12] , a26[ 12] , a27[ 12] , a28[ 12] , a29[ 12] , a30[ 12] , a31[ 12] , a32[ 12] , a33[ 12] , a34[ 12] , a35[ 12] , a36[ 12] , a37[ 12] , a38[ 12] , a39[ 12] , a40[ 12])) , details::maybe_genmask<stype>(a0(a1[ 13] , a2[ 13] , a3[ 13] , a4[ 13] , a5[ 13] , a6[ 13] , a7[ 13] , a8[ 13] , a9[ 13] , a10[ 13] , a11[ 13] , a12[ 13] , a13[ 13] , a14[ 13] , a15[ 13] , a16[ 13] , a17[ 13] , a18[ 13] , a19[ 13] , a20[ 13] , a21[ 13] , a22[ 13] , a23[ 13] , a24[ 13] , a25[ 13] , a26[ 13] , a27[ 13] , a28[ 13] , a29[ 13] , a30[ 13] , a31[ 13] , a32[ 13] , a33[ 13] , a34[ 13] , a35[ 13] , a36[ 13] , a37[ 13] , a38[ 13] , a39[ 13] , a40[ 13])) , details::maybe_genmask<stype>(a0(a1[ 14] , a2[ 14] , a3[ 14] , a4[ 14] , a5[ 14] , a6[ 14] , a7[ 14] , a8[ 14] , a9[ 14] , a10[ 14] , a11[ 14] , a12[ 14] , a13[ 14] , a14[ 14] , a15[ 14] , a16[ 14] , a17[ 14] , a18[ 14] , a19[ 14] , a20[ 14] , a21[ 14] , a22[ 14] , a23[ 14] , a24[ 14] , a25[ 14] , a26[ 14] , a27[ 14] , a28[ 14] , a29[ 14] , a30[ 14] , a31[ 14] , a32[ 14] , a33[ 14] , a34[ 14] , a35[ 14] , a36[ 14] , a37[ 14] , a38[ 14] , a39[ 14] , a40[ 14])) , details::maybe_genmask<stype>(a0(a1[ 15] , a2[ 15] , a3[ 15] , a4[ 15] , a5[ 15] , a6[ 15] , a7[ 15] , a8[ 15] , a9[ 15] , a10[ 15] , a11[ 15] , a12[ 15] , a13[ 15] , a14[ 15] , a15[ 15] , a16[ 15] , a17[ 15] , a18[ 15] , a19[ 15] , a20[ 15] , a21[ 15] , a22[ 15] , a23[ 15] , a24[ 15] , a25[ 15] , a26[ 15] , a27[ 15] , a28[ 15] , a29[ 15] , a30[ 15] , a31[ 15] , a32[ 15] , a33[ 15] , a34[ 15] , a35[ 15] , a36[ 15] , a37[ 15] , a38[ 15] , a39[ 15] , a40[ 15]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints8_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A39>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A40>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints8_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A39>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A40>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints8_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type , typename meta::scalar_of<A39>::type , typename meta::scalar_of<A40>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const& , A41 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 , A41 const& a41 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0] , a40[ 0] , a41[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1] , a40[ 1] , a41[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2] , a34[ 2] , a35[ 2] , a36[ 2] , a37[ 2] , a38[ 2] , a39[ 2] , a40[ 2] , a41[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3] , a34[ 3] , a35[ 3] , a36[ 3] , a37[ 3] , a38[ 3] , a39[ 3] , a40[ 3] , a41[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4] , a18[ 4] , a19[ 4] , a20[ 4] , a21[ 4] , a22[ 4] , a23[ 4] , a24[ 4] , a25[ 4] , a26[ 4] , a27[ 4] , a28[ 4] , a29[ 4] , a30[ 4] , a31[ 4] , a32[ 4] , a33[ 4] , a34[ 4] , a35[ 4] , a36[ 4] , a37[ 4] , a38[ 4] , a39[ 4] , a40[ 4] , a41[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5] , a18[ 5] , a19[ 5] , a20[ 5] , a21[ 5] , a22[ 5] , a23[ 5] , a24[ 5] , a25[ 5] , a26[ 5] , a27[ 5] , a28[ 5] , a29[ 5] , a30[ 5] , a31[ 5] , a32[ 5] , a33[ 5] , a34[ 5] , a35[ 5] , a36[ 5] , a37[ 5] , a38[ 5] , a39[ 5] , a40[ 5] , a41[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6] , a18[ 6] , a19[ 6] , a20[ 6] , a21[ 6] , a22[ 6] , a23[ 6] , a24[ 6] , a25[ 6] , a26[ 6] , a27[ 6] , a28[ 6] , a29[ 6] , a30[ 6] , a31[ 6] , a32[ 6] , a33[ 6] , a34[ 6] , a35[ 6] , a36[ 6] , a37[ 6] , a38[ 6] , a39[ 6] , a40[ 6] , a41[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7] , a18[ 7] , a19[ 7] , a20[ 7] , a21[ 7] , a22[ 7] , a23[ 7] , a24[ 7] , a25[ 7] , a26[ 7] , a27[ 7] , a28[ 7] , a29[ 7] , a30[ 7] , a31[ 7] , a32[ 7] , a33[ 7] , a34[ 7] , a35[ 7] , a36[ 7] , a37[ 7] , a38[ 7] , a39[ 7] , a40[ 7] , a41[ 7])) , details::maybe_genmask<stype>(a0(a1[ 8] , a2[ 8] , a3[ 8] , a4[ 8] , a5[ 8] , a6[ 8] , a7[ 8] , a8[ 8] , a9[ 8] , a10[ 8] , a11[ 8] , a12[ 8] , a13[ 8] , a14[ 8] , a15[ 8] , a16[ 8] , a17[ 8] , a18[ 8] , a19[ 8] , a20[ 8] , a21[ 8] , a22[ 8] , a23[ 8] , a24[ 8] , a25[ 8] , a26[ 8] , a27[ 8] , a28[ 8] , a29[ 8] , a30[ 8] , a31[ 8] , a32[ 8] , a33[ 8] , a34[ 8] , a35[ 8] , a36[ 8] , a37[ 8] , a38[ 8] , a39[ 8] , a40[ 8] , a41[ 8])) , details::maybe_genmask<stype>(a0(a1[ 9] , a2[ 9] , a3[ 9] , a4[ 9] , a5[ 9] , a6[ 9] , a7[ 9] , a8[ 9] , a9[ 9] , a10[ 9] , a11[ 9] , a12[ 9] , a13[ 9] , a14[ 9] , a15[ 9] , a16[ 9] , a17[ 9] , a18[ 9] , a19[ 9] , a20[ 9] , a21[ 9] , a22[ 9] , a23[ 9] , a24[ 9] , a25[ 9] , a26[ 9] , a27[ 9] , a28[ 9] , a29[ 9] , a30[ 9] , a31[ 9] , a32[ 9] , a33[ 9] , a34[ 9] , a35[ 9] , a36[ 9] , a37[ 9] , a38[ 9] , a39[ 9] , a40[ 9] , a41[ 9])) , details::maybe_genmask<stype>(a0(a1[ 10] , a2[ 10] , a3[ 10] , a4[ 10] , a5[ 10] , a6[ 10] , a7[ 10] , a8[ 10] , a9[ 10] , a10[ 10] , a11[ 10] , a12[ 10] , a13[ 10] , a14[ 10] , a15[ 10] , a16[ 10] , a17[ 10] , a18[ 10] , a19[ 10] , a20[ 10] , a21[ 10] , a22[ 10] , a23[ 10] , a24[ 10] , a25[ 10] , a26[ 10] , a27[ 10] , a28[ 10] , a29[ 10] , a30[ 10] , a31[ 10] , a32[ 10] , a33[ 10] , a34[ 10] , a35[ 10] , a36[ 10] , a37[ 10] , a38[ 10] , a39[ 10] , a40[ 10] , a41[ 10])) , details::maybe_genmask<stype>(a0(a1[ 11] , a2[ 11] , a3[ 11] , a4[ 11] , a5[ 11] , a6[ 11] , a7[ 11] , a8[ 11] , a9[ 11] , a10[ 11] , a11[ 11] , a12[ 11] , a13[ 11] , a14[ 11] , a15[ 11] , a16[ 11] , a17[ 11] , a18[ 11] , a19[ 11] , a20[ 11] , a21[ 11] , a22[ 11] , a23[ 11] , a24[ 11] , a25[ 11] , a26[ 11] , a27[ 11] , a28[ 11] , a29[ 11] , a30[ 11] , a31[ 11] , a32[ 11] , a33[ 11] , a34[ 11] , a35[ 11] , a36[ 11] , a37[ 11] , a38[ 11] , a39[ 11] , a40[ 11] , a41[ 11])) , details::maybe_genmask<stype>(a0(a1[ 12] , a2[ 12] , a3[ 12] , a4[ 12] , a5[ 12] , a6[ 12] , a7[ 12] , a8[ 12] , a9[ 12] , a10[ 12] , a11[ 12] , a12[ 12] , a13[ 12] , a14[ 12] , a15[ 12] , a16[ 12] , a17[ 12] , a18[ 12] , a19[ 12] , a20[ 12] , a21[ 12] , a22[ 12] , a23[ 12] , a24[ 12] , a25[ 12] , a26[ 12] , a27[ 12] , a28[ 12] , a29[ 12] , a30[ 12] , a31[ 12] , a32[ 12] , a33[ 12] , a34[ 12] , a35[ 12] , a36[ 12] , a37[ 12] , a38[ 12] , a39[ 12] , a40[ 12] , a41[ 12])) , details::maybe_genmask<stype>(a0(a1[ 13] , a2[ 13] , a3[ 13] , a4[ 13] , a5[ 13] , a6[ 13] , a7[ 13] , a8[ 13] , a9[ 13] , a10[ 13] , a11[ 13] , a12[ 13] , a13[ 13] , a14[ 13] , a15[ 13] , a16[ 13] , a17[ 13] , a18[ 13] , a19[ 13] , a20[ 13] , a21[ 13] , a22[ 13] , a23[ 13] , a24[ 13] , a25[ 13] , a26[ 13] , a27[ 13] , a28[ 13] , a29[ 13] , a30[ 13] , a31[ 13] , a32[ 13] , a33[ 13] , a34[ 13] , a35[ 13] , a36[ 13] , a37[ 13] , a38[ 13] , a39[ 13] , a40[ 13] , a41[ 13])) , details::maybe_genmask<stype>(a0(a1[ 14] , a2[ 14] , a3[ 14] , a4[ 14] , a5[ 14] , a6[ 14] , a7[ 14] , a8[ 14] , a9[ 14] , a10[ 14] , a11[ 14] , a12[ 14] , a13[ 14] , a14[ 14] , a15[ 14] , a16[ 14] , a17[ 14] , a18[ 14] , a19[ 14] , a20[ 14] , a21[ 14] , a22[ 14] , a23[ 14] , a24[ 14] , a25[ 14] , a26[ 14] , a27[ 14] , a28[ 14] , a29[ 14] , a30[ 14] , a31[ 14] , a32[ 14] , a33[ 14] , a34[ 14] , a35[ 14] , a36[ 14] , a37[ 14] , a38[ 14] , a39[ 14] , a40[ 14] , a41[ 14])) , details::maybe_genmask<stype>(a0(a1[ 15] , a2[ 15] , a3[ 15] , a4[ 15] , a5[ 15] , a6[ 15] , a7[ 15] , a8[ 15] , a9[ 15] , a10[ 15] , a11[ 15] , a12[ 15] , a13[ 15] , a14[ 15] , a15[ 15] , a16[ 15] , a17[ 15] , a18[ 15] , a19[ 15] , a20[ 15] , a21[ 15] , a22[ 15] , a23[ 15] , a24[ 15] , a25[ 15] , a26[ 15] , a27[ 15] , a28[ 15] , a29[ 15] , a30[ 15] , a31[ 15] , a32[ 15] , a33[ 15] , a34[ 15] , a35[ 15] , a36[ 15] , a37[ 15] , a38[ 15] , a39[ 15] , a40[ 15] , a41[ 15]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints8_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A39>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A40>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A41>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints8_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A39>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A40>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A41>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints8_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type , typename meta::scalar_of<A39>::type , typename meta::scalar_of<A40>::type , typename meta::scalar_of<A41>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const& , A41 const& , A42 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 , A41 const& a41 , A42 const& a42 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0] , a40[ 0] , a41[ 0] , a42[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1] , a40[ 1] , a41[ 1] , a42[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2] , a34[ 2] , a35[ 2] , a36[ 2] , a37[ 2] , a38[ 2] , a39[ 2] , a40[ 2] , a41[ 2] , a42[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3] , a34[ 3] , a35[ 3] , a36[ 3] , a37[ 3] , a38[ 3] , a39[ 3] , a40[ 3] , a41[ 3] , a42[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4] , a18[ 4] , a19[ 4] , a20[ 4] , a21[ 4] , a22[ 4] , a23[ 4] , a24[ 4] , a25[ 4] , a26[ 4] , a27[ 4] , a28[ 4] , a29[ 4] , a30[ 4] , a31[ 4] , a32[ 4] , a33[ 4] , a34[ 4] , a35[ 4] , a36[ 4] , a37[ 4] , a38[ 4] , a39[ 4] , a40[ 4] , a41[ 4] , a42[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5] , a18[ 5] , a19[ 5] , a20[ 5] , a21[ 5] , a22[ 5] , a23[ 5] , a24[ 5] , a25[ 5] , a26[ 5] , a27[ 5] , a28[ 5] , a29[ 5] , a30[ 5] , a31[ 5] , a32[ 5] , a33[ 5] , a34[ 5] , a35[ 5] , a36[ 5] , a37[ 5] , a38[ 5] , a39[ 5] , a40[ 5] , a41[ 5] , a42[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6] , a18[ 6] , a19[ 6] , a20[ 6] , a21[ 6] , a22[ 6] , a23[ 6] , a24[ 6] , a25[ 6] , a26[ 6] , a27[ 6] , a28[ 6] , a29[ 6] , a30[ 6] , a31[ 6] , a32[ 6] , a33[ 6] , a34[ 6] , a35[ 6] , a36[ 6] , a37[ 6] , a38[ 6] , a39[ 6] , a40[ 6] , a41[ 6] , a42[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7] , a18[ 7] , a19[ 7] , a20[ 7] , a21[ 7] , a22[ 7] , a23[ 7] , a24[ 7] , a25[ 7] , a26[ 7] , a27[ 7] , a28[ 7] , a29[ 7] , a30[ 7] , a31[ 7] , a32[ 7] , a33[ 7] , a34[ 7] , a35[ 7] , a36[ 7] , a37[ 7] , a38[ 7] , a39[ 7] , a40[ 7] , a41[ 7] , a42[ 7])) , details::maybe_genmask<stype>(a0(a1[ 8] , a2[ 8] , a3[ 8] , a4[ 8] , a5[ 8] , a6[ 8] , a7[ 8] , a8[ 8] , a9[ 8] , a10[ 8] , a11[ 8] , a12[ 8] , a13[ 8] , a14[ 8] , a15[ 8] , a16[ 8] , a17[ 8] , a18[ 8] , a19[ 8] , a20[ 8] , a21[ 8] , a22[ 8] , a23[ 8] , a24[ 8] , a25[ 8] , a26[ 8] , a27[ 8] , a28[ 8] , a29[ 8] , a30[ 8] , a31[ 8] , a32[ 8] , a33[ 8] , a34[ 8] , a35[ 8] , a36[ 8] , a37[ 8] , a38[ 8] , a39[ 8] , a40[ 8] , a41[ 8] , a42[ 8])) , details::maybe_genmask<stype>(a0(a1[ 9] , a2[ 9] , a3[ 9] , a4[ 9] , a5[ 9] , a6[ 9] , a7[ 9] , a8[ 9] , a9[ 9] , a10[ 9] , a11[ 9] , a12[ 9] , a13[ 9] , a14[ 9] , a15[ 9] , a16[ 9] , a17[ 9] , a18[ 9] , a19[ 9] , a20[ 9] , a21[ 9] , a22[ 9] , a23[ 9] , a24[ 9] , a25[ 9] , a26[ 9] , a27[ 9] , a28[ 9] , a29[ 9] , a30[ 9] , a31[ 9] , a32[ 9] , a33[ 9] , a34[ 9] , a35[ 9] , a36[ 9] , a37[ 9] , a38[ 9] , a39[ 9] , a40[ 9] , a41[ 9] , a42[ 9])) , details::maybe_genmask<stype>(a0(a1[ 10] , a2[ 10] , a3[ 10] , a4[ 10] , a5[ 10] , a6[ 10] , a7[ 10] , a8[ 10] , a9[ 10] , a10[ 10] , a11[ 10] , a12[ 10] , a13[ 10] , a14[ 10] , a15[ 10] , a16[ 10] , a17[ 10] , a18[ 10] , a19[ 10] , a20[ 10] , a21[ 10] , a22[ 10] , a23[ 10] , a24[ 10] , a25[ 10] , a26[ 10] , a27[ 10] , a28[ 10] , a29[ 10] , a30[ 10] , a31[ 10] , a32[ 10] , a33[ 10] , a34[ 10] , a35[ 10] , a36[ 10] , a37[ 10] , a38[ 10] , a39[ 10] , a40[ 10] , a41[ 10] , a42[ 10])) , details::maybe_genmask<stype>(a0(a1[ 11] , a2[ 11] , a3[ 11] , a4[ 11] , a5[ 11] , a6[ 11] , a7[ 11] , a8[ 11] , a9[ 11] , a10[ 11] , a11[ 11] , a12[ 11] , a13[ 11] , a14[ 11] , a15[ 11] , a16[ 11] , a17[ 11] , a18[ 11] , a19[ 11] , a20[ 11] , a21[ 11] , a22[ 11] , a23[ 11] , a24[ 11] , a25[ 11] , a26[ 11] , a27[ 11] , a28[ 11] , a29[ 11] , a30[ 11] , a31[ 11] , a32[ 11] , a33[ 11] , a34[ 11] , a35[ 11] , a36[ 11] , a37[ 11] , a38[ 11] , a39[ 11] , a40[ 11] , a41[ 11] , a42[ 11])) , details::maybe_genmask<stype>(a0(a1[ 12] , a2[ 12] , a3[ 12] , a4[ 12] , a5[ 12] , a6[ 12] , a7[ 12] , a8[ 12] , a9[ 12] , a10[ 12] , a11[ 12] , a12[ 12] , a13[ 12] , a14[ 12] , a15[ 12] , a16[ 12] , a17[ 12] , a18[ 12] , a19[ 12] , a20[ 12] , a21[ 12] , a22[ 12] , a23[ 12] , a24[ 12] , a25[ 12] , a26[ 12] , a27[ 12] , a28[ 12] , a29[ 12] , a30[ 12] , a31[ 12] , a32[ 12] , a33[ 12] , a34[ 12] , a35[ 12] , a36[ 12] , a37[ 12] , a38[ 12] , a39[ 12] , a40[ 12] , a41[ 12] , a42[ 12])) , details::maybe_genmask<stype>(a0(a1[ 13] , a2[ 13] , a3[ 13] , a4[ 13] , a5[ 13] , a6[ 13] , a7[ 13] , a8[ 13] , a9[ 13] , a10[ 13] , a11[ 13] , a12[ 13] , a13[ 13] , a14[ 13] , a15[ 13] , a16[ 13] , a17[ 13] , a18[ 13] , a19[ 13] , a20[ 13] , a21[ 13] , a22[ 13] , a23[ 13] , a24[ 13] , a25[ 13] , a26[ 13] , a27[ 13] , a28[ 13] , a29[ 13] , a30[ 13] , a31[ 13] , a32[ 13] , a33[ 13] , a34[ 13] , a35[ 13] , a36[ 13] , a37[ 13] , a38[ 13] , a39[ 13] , a40[ 13] , a41[ 13] , a42[ 13])) , details::maybe_genmask<stype>(a0(a1[ 14] , a2[ 14] , a3[ 14] , a4[ 14] , a5[ 14] , a6[ 14] , a7[ 14] , a8[ 14] , a9[ 14] , a10[ 14] , a11[ 14] , a12[ 14] , a13[ 14] , a14[ 14] , a15[ 14] , a16[ 14] , a17[ 14] , a18[ 14] , a19[ 14] , a20[ 14] , a21[ 14] , a22[ 14] , a23[ 14] , a24[ 14] , a25[ 14] , a26[ 14] , a27[ 14] , a28[ 14] , a29[ 14] , a30[ 14] , a31[ 14] , a32[ 14] , a33[ 14] , a34[ 14] , a35[ 14] , a36[ 14] , a37[ 14] , a38[ 14] , a39[ 14] , a40[ 14] , a41[ 14] , a42[ 14])) , details::maybe_genmask<stype>(a0(a1[ 15] , a2[ 15] , a3[ 15] , a4[ 15] , a5[ 15] , a6[ 15] , a7[ 15] , a8[ 15] , a9[ 15] , a10[ 15] , a11[ 15] , a12[ 15] , a13[ 15] , a14[ 15] , a15[ 15] , a16[ 15] , a17[ 15] , a18[ 15] , a19[ 15] , a20[ 15] , a21[ 15] , a22[ 15] , a23[ 15] , a24[ 15] , a25[ 15] , a26[ 15] , a27[ 15] , a28[ 15] , a29[ 15] , a30[ 15] , a31[ 15] , a32[ 15] , a33[ 15] , a34[ 15] , a35[ 15] , a36[ 15] , a37[ 15] , a38[ 15] , a39[ 15] , a40[ 15] , a41[ 15] , a42[ 15]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints8_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A39>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A40>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A41>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A42>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints8_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A39>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A40>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A41>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A42>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints8_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type , typename meta::scalar_of<A39>::type , typename meta::scalar_of<A40>::type , typename meta::scalar_of<A41>::type , typename meta::scalar_of<A42>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const& , A41 const& , A42 const& , A43 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 , A41 const& a41 , A42 const& a42 , A43 const& a43 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0] , a40[ 0] , a41[ 0] , a42[ 0] , a43[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1] , a40[ 1] , a41[ 1] , a42[ 1] , a43[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2] , a34[ 2] , a35[ 2] , a36[ 2] , a37[ 2] , a38[ 2] , a39[ 2] , a40[ 2] , a41[ 2] , a42[ 2] , a43[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3] , a34[ 3] , a35[ 3] , a36[ 3] , a37[ 3] , a38[ 3] , a39[ 3] , a40[ 3] , a41[ 3] , a42[ 3] , a43[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4] , a18[ 4] , a19[ 4] , a20[ 4] , a21[ 4] , a22[ 4] , a23[ 4] , a24[ 4] , a25[ 4] , a26[ 4] , a27[ 4] , a28[ 4] , a29[ 4] , a30[ 4] , a31[ 4] , a32[ 4] , a33[ 4] , a34[ 4] , a35[ 4] , a36[ 4] , a37[ 4] , a38[ 4] , a39[ 4] , a40[ 4] , a41[ 4] , a42[ 4] , a43[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5] , a18[ 5] , a19[ 5] , a20[ 5] , a21[ 5] , a22[ 5] , a23[ 5] , a24[ 5] , a25[ 5] , a26[ 5] , a27[ 5] , a28[ 5] , a29[ 5] , a30[ 5] , a31[ 5] , a32[ 5] , a33[ 5] , a34[ 5] , a35[ 5] , a36[ 5] , a37[ 5] , a38[ 5] , a39[ 5] , a40[ 5] , a41[ 5] , a42[ 5] , a43[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6] , a18[ 6] , a19[ 6] , a20[ 6] , a21[ 6] , a22[ 6] , a23[ 6] , a24[ 6] , a25[ 6] , a26[ 6] , a27[ 6] , a28[ 6] , a29[ 6] , a30[ 6] , a31[ 6] , a32[ 6] , a33[ 6] , a34[ 6] , a35[ 6] , a36[ 6] , a37[ 6] , a38[ 6] , a39[ 6] , a40[ 6] , a41[ 6] , a42[ 6] , a43[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7] , a18[ 7] , a19[ 7] , a20[ 7] , a21[ 7] , a22[ 7] , a23[ 7] , a24[ 7] , a25[ 7] , a26[ 7] , a27[ 7] , a28[ 7] , a29[ 7] , a30[ 7] , a31[ 7] , a32[ 7] , a33[ 7] , a34[ 7] , a35[ 7] , a36[ 7] , a37[ 7] , a38[ 7] , a39[ 7] , a40[ 7] , a41[ 7] , a42[ 7] , a43[ 7])) , details::maybe_genmask<stype>(a0(a1[ 8] , a2[ 8] , a3[ 8] , a4[ 8] , a5[ 8] , a6[ 8] , a7[ 8] , a8[ 8] , a9[ 8] , a10[ 8] , a11[ 8] , a12[ 8] , a13[ 8] , a14[ 8] , a15[ 8] , a16[ 8] , a17[ 8] , a18[ 8] , a19[ 8] , a20[ 8] , a21[ 8] , a22[ 8] , a23[ 8] , a24[ 8] , a25[ 8] , a26[ 8] , a27[ 8] , a28[ 8] , a29[ 8] , a30[ 8] , a31[ 8] , a32[ 8] , a33[ 8] , a34[ 8] , a35[ 8] , a36[ 8] , a37[ 8] , a38[ 8] , a39[ 8] , a40[ 8] , a41[ 8] , a42[ 8] , a43[ 8])) , details::maybe_genmask<stype>(a0(a1[ 9] , a2[ 9] , a3[ 9] , a4[ 9] , a5[ 9] , a6[ 9] , a7[ 9] , a8[ 9] , a9[ 9] , a10[ 9] , a11[ 9] , a12[ 9] , a13[ 9] , a14[ 9] , a15[ 9] , a16[ 9] , a17[ 9] , a18[ 9] , a19[ 9] , a20[ 9] , a21[ 9] , a22[ 9] , a23[ 9] , a24[ 9] , a25[ 9] , a26[ 9] , a27[ 9] , a28[ 9] , a29[ 9] , a30[ 9] , a31[ 9] , a32[ 9] , a33[ 9] , a34[ 9] , a35[ 9] , a36[ 9] , a37[ 9] , a38[ 9] , a39[ 9] , a40[ 9] , a41[ 9] , a42[ 9] , a43[ 9])) , details::maybe_genmask<stype>(a0(a1[ 10] , a2[ 10] , a3[ 10] , a4[ 10] , a5[ 10] , a6[ 10] , a7[ 10] , a8[ 10] , a9[ 10] , a10[ 10] , a11[ 10] , a12[ 10] , a13[ 10] , a14[ 10] , a15[ 10] , a16[ 10] , a17[ 10] , a18[ 10] , a19[ 10] , a20[ 10] , a21[ 10] , a22[ 10] , a23[ 10] , a24[ 10] , a25[ 10] , a26[ 10] , a27[ 10] , a28[ 10] , a29[ 10] , a30[ 10] , a31[ 10] , a32[ 10] , a33[ 10] , a34[ 10] , a35[ 10] , a36[ 10] , a37[ 10] , a38[ 10] , a39[ 10] , a40[ 10] , a41[ 10] , a42[ 10] , a43[ 10])) , details::maybe_genmask<stype>(a0(a1[ 11] , a2[ 11] , a3[ 11] , a4[ 11] , a5[ 11] , a6[ 11] , a7[ 11] , a8[ 11] , a9[ 11] , a10[ 11] , a11[ 11] , a12[ 11] , a13[ 11] , a14[ 11] , a15[ 11] , a16[ 11] , a17[ 11] , a18[ 11] , a19[ 11] , a20[ 11] , a21[ 11] , a22[ 11] , a23[ 11] , a24[ 11] , a25[ 11] , a26[ 11] , a27[ 11] , a28[ 11] , a29[ 11] , a30[ 11] , a31[ 11] , a32[ 11] , a33[ 11] , a34[ 11] , a35[ 11] , a36[ 11] , a37[ 11] , a38[ 11] , a39[ 11] , a40[ 11] , a41[ 11] , a42[ 11] , a43[ 11])) , details::maybe_genmask<stype>(a0(a1[ 12] , a2[ 12] , a3[ 12] , a4[ 12] , a5[ 12] , a6[ 12] , a7[ 12] , a8[ 12] , a9[ 12] , a10[ 12] , a11[ 12] , a12[ 12] , a13[ 12] , a14[ 12] , a15[ 12] , a16[ 12] , a17[ 12] , a18[ 12] , a19[ 12] , a20[ 12] , a21[ 12] , a22[ 12] , a23[ 12] , a24[ 12] , a25[ 12] , a26[ 12] , a27[ 12] , a28[ 12] , a29[ 12] , a30[ 12] , a31[ 12] , a32[ 12] , a33[ 12] , a34[ 12] , a35[ 12] , a36[ 12] , a37[ 12] , a38[ 12] , a39[ 12] , a40[ 12] , a41[ 12] , a42[ 12] , a43[ 12])) , details::maybe_genmask<stype>(a0(a1[ 13] , a2[ 13] , a3[ 13] , a4[ 13] , a5[ 13] , a6[ 13] , a7[ 13] , a8[ 13] , a9[ 13] , a10[ 13] , a11[ 13] , a12[ 13] , a13[ 13] , a14[ 13] , a15[ 13] , a16[ 13] , a17[ 13] , a18[ 13] , a19[ 13] , a20[ 13] , a21[ 13] , a22[ 13] , a23[ 13] , a24[ 13] , a25[ 13] , a26[ 13] , a27[ 13] , a28[ 13] , a29[ 13] , a30[ 13] , a31[ 13] , a32[ 13] , a33[ 13] , a34[ 13] , a35[ 13] , a36[ 13] , a37[ 13] , a38[ 13] , a39[ 13] , a40[ 13] , a41[ 13] , a42[ 13] , a43[ 13])) , details::maybe_genmask<stype>(a0(a1[ 14] , a2[ 14] , a3[ 14] , a4[ 14] , a5[ 14] , a6[ 14] , a7[ 14] , a8[ 14] , a9[ 14] , a10[ 14] , a11[ 14] , a12[ 14] , a13[ 14] , a14[ 14] , a15[ 14] , a16[ 14] , a17[ 14] , a18[ 14] , a19[ 14] , a20[ 14] , a21[ 14] , a22[ 14] , a23[ 14] , a24[ 14] , a25[ 14] , a26[ 14] , a27[ 14] , a28[ 14] , a29[ 14] , a30[ 14] , a31[ 14] , a32[ 14] , a33[ 14] , a34[ 14] , a35[ 14] , a36[ 14] , a37[ 14] , a38[ 14] , a39[ 14] , a40[ 14] , a41[ 14] , a42[ 14] , a43[ 14])) , details::maybe_genmask<stype>(a0(a1[ 15] , a2[ 15] , a3[ 15] , a4[ 15] , a5[ 15] , a6[ 15] , a7[ 15] , a8[ 15] , a9[ 15] , a10[ 15] , a11[ 15] , a12[ 15] , a13[ 15] , a14[ 15] , a15[ 15] , a16[ 15] , a17[ 15] , a18[ 15] , a19[ 15] , a20[ 15] , a21[ 15] , a22[ 15] , a23[ 15] , a24[ 15] , a25[ 15] , a26[ 15] , a27[ 15] , a28[ 15] , a29[ 15] , a30[ 15] , a31[ 15] , a32[ 15] , a33[ 15] , a34[ 15] , a35[ 15] , a36[ 15] , a37[ 15] , a38[ 15] , a39[ 15] , a40[ 15] , a41[ 15] , a42[ 15] , a43[ 15]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints8_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A39>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A40>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A41>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A42>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A43>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints8_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A39>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A40>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A41>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A42>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A43>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints8_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type , typename meta::scalar_of<A39>::type , typename meta::scalar_of<A40>::type , typename meta::scalar_of<A41>::type , typename meta::scalar_of<A42>::type , typename meta::scalar_of<A43>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const& , A41 const& , A42 const& , A43 const& , A44 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 , A41 const& a41 , A42 const& a42 , A43 const& a43 , A44 const& a44 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0] , a40[ 0] , a41[ 0] , a42[ 0] , a43[ 0] , a44[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1] , a40[ 1] , a41[ 1] , a42[ 1] , a43[ 1] , a44[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2] , a34[ 2] , a35[ 2] , a36[ 2] , a37[ 2] , a38[ 2] , a39[ 2] , a40[ 2] , a41[ 2] , a42[ 2] , a43[ 2] , a44[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3] , a34[ 3] , a35[ 3] , a36[ 3] , a37[ 3] , a38[ 3] , a39[ 3] , a40[ 3] , a41[ 3] , a42[ 3] , a43[ 3] , a44[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4] , a18[ 4] , a19[ 4] , a20[ 4] , a21[ 4] , a22[ 4] , a23[ 4] , a24[ 4] , a25[ 4] , a26[ 4] , a27[ 4] , a28[ 4] , a29[ 4] , a30[ 4] , a31[ 4] , a32[ 4] , a33[ 4] , a34[ 4] , a35[ 4] , a36[ 4] , a37[ 4] , a38[ 4] , a39[ 4] , a40[ 4] , a41[ 4] , a42[ 4] , a43[ 4] , a44[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5] , a18[ 5] , a19[ 5] , a20[ 5] , a21[ 5] , a22[ 5] , a23[ 5] , a24[ 5] , a25[ 5] , a26[ 5] , a27[ 5] , a28[ 5] , a29[ 5] , a30[ 5] , a31[ 5] , a32[ 5] , a33[ 5] , a34[ 5] , a35[ 5] , a36[ 5] , a37[ 5] , a38[ 5] , a39[ 5] , a40[ 5] , a41[ 5] , a42[ 5] , a43[ 5] , a44[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6] , a18[ 6] , a19[ 6] , a20[ 6] , a21[ 6] , a22[ 6] , a23[ 6] , a24[ 6] , a25[ 6] , a26[ 6] , a27[ 6] , a28[ 6] , a29[ 6] , a30[ 6] , a31[ 6] , a32[ 6] , a33[ 6] , a34[ 6] , a35[ 6] , a36[ 6] , a37[ 6] , a38[ 6] , a39[ 6] , a40[ 6] , a41[ 6] , a42[ 6] , a43[ 6] , a44[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7] , a18[ 7] , a19[ 7] , a20[ 7] , a21[ 7] , a22[ 7] , a23[ 7] , a24[ 7] , a25[ 7] , a26[ 7] , a27[ 7] , a28[ 7] , a29[ 7] , a30[ 7] , a31[ 7] , a32[ 7] , a33[ 7] , a34[ 7] , a35[ 7] , a36[ 7] , a37[ 7] , a38[ 7] , a39[ 7] , a40[ 7] , a41[ 7] , a42[ 7] , a43[ 7] , a44[ 7])) , details::maybe_genmask<stype>(a0(a1[ 8] , a2[ 8] , a3[ 8] , a4[ 8] , a5[ 8] , a6[ 8] , a7[ 8] , a8[ 8] , a9[ 8] , a10[ 8] , a11[ 8] , a12[ 8] , a13[ 8] , a14[ 8] , a15[ 8] , a16[ 8] , a17[ 8] , a18[ 8] , a19[ 8] , a20[ 8] , a21[ 8] , a22[ 8] , a23[ 8] , a24[ 8] , a25[ 8] , a26[ 8] , a27[ 8] , a28[ 8] , a29[ 8] , a30[ 8] , a31[ 8] , a32[ 8] , a33[ 8] , a34[ 8] , a35[ 8] , a36[ 8] , a37[ 8] , a38[ 8] , a39[ 8] , a40[ 8] , a41[ 8] , a42[ 8] , a43[ 8] , a44[ 8])) , details::maybe_genmask<stype>(a0(a1[ 9] , a2[ 9] , a3[ 9] , a4[ 9] , a5[ 9] , a6[ 9] , a7[ 9] , a8[ 9] , a9[ 9] , a10[ 9] , a11[ 9] , a12[ 9] , a13[ 9] , a14[ 9] , a15[ 9] , a16[ 9] , a17[ 9] , a18[ 9] , a19[ 9] , a20[ 9] , a21[ 9] , a22[ 9] , a23[ 9] , a24[ 9] , a25[ 9] , a26[ 9] , a27[ 9] , a28[ 9] , a29[ 9] , a30[ 9] , a31[ 9] , a32[ 9] , a33[ 9] , a34[ 9] , a35[ 9] , a36[ 9] , a37[ 9] , a38[ 9] , a39[ 9] , a40[ 9] , a41[ 9] , a42[ 9] , a43[ 9] , a44[ 9])) , details::maybe_genmask<stype>(a0(a1[ 10] , a2[ 10] , a3[ 10] , a4[ 10] , a5[ 10] , a6[ 10] , a7[ 10] , a8[ 10] , a9[ 10] , a10[ 10] , a11[ 10] , a12[ 10] , a13[ 10] , a14[ 10] , a15[ 10] , a16[ 10] , a17[ 10] , a18[ 10] , a19[ 10] , a20[ 10] , a21[ 10] , a22[ 10] , a23[ 10] , a24[ 10] , a25[ 10] , a26[ 10] , a27[ 10] , a28[ 10] , a29[ 10] , a30[ 10] , a31[ 10] , a32[ 10] , a33[ 10] , a34[ 10] , a35[ 10] , a36[ 10] , a37[ 10] , a38[ 10] , a39[ 10] , a40[ 10] , a41[ 10] , a42[ 10] , a43[ 10] , a44[ 10])) , details::maybe_genmask<stype>(a0(a1[ 11] , a2[ 11] , a3[ 11] , a4[ 11] , a5[ 11] , a6[ 11] , a7[ 11] , a8[ 11] , a9[ 11] , a10[ 11] , a11[ 11] , a12[ 11] , a13[ 11] , a14[ 11] , a15[ 11] , a16[ 11] , a17[ 11] , a18[ 11] , a19[ 11] , a20[ 11] , a21[ 11] , a22[ 11] , a23[ 11] , a24[ 11] , a25[ 11] , a26[ 11] , a27[ 11] , a28[ 11] , a29[ 11] , a30[ 11] , a31[ 11] , a32[ 11] , a33[ 11] , a34[ 11] , a35[ 11] , a36[ 11] , a37[ 11] , a38[ 11] , a39[ 11] , a40[ 11] , a41[ 11] , a42[ 11] , a43[ 11] , a44[ 11])) , details::maybe_genmask<stype>(a0(a1[ 12] , a2[ 12] , a3[ 12] , a4[ 12] , a5[ 12] , a6[ 12] , a7[ 12] , a8[ 12] , a9[ 12] , a10[ 12] , a11[ 12] , a12[ 12] , a13[ 12] , a14[ 12] , a15[ 12] , a16[ 12] , a17[ 12] , a18[ 12] , a19[ 12] , a20[ 12] , a21[ 12] , a22[ 12] , a23[ 12] , a24[ 12] , a25[ 12] , a26[ 12] , a27[ 12] , a28[ 12] , a29[ 12] , a30[ 12] , a31[ 12] , a32[ 12] , a33[ 12] , a34[ 12] , a35[ 12] , a36[ 12] , a37[ 12] , a38[ 12] , a39[ 12] , a40[ 12] , a41[ 12] , a42[ 12] , a43[ 12] , a44[ 12])) , details::maybe_genmask<stype>(a0(a1[ 13] , a2[ 13] , a3[ 13] , a4[ 13] , a5[ 13] , a6[ 13] , a7[ 13] , a8[ 13] , a9[ 13] , a10[ 13] , a11[ 13] , a12[ 13] , a13[ 13] , a14[ 13] , a15[ 13] , a16[ 13] , a17[ 13] , a18[ 13] , a19[ 13] , a20[ 13] , a21[ 13] , a22[ 13] , a23[ 13] , a24[ 13] , a25[ 13] , a26[ 13] , a27[ 13] , a28[ 13] , a29[ 13] , a30[ 13] , a31[ 13] , a32[ 13] , a33[ 13] , a34[ 13] , a35[ 13] , a36[ 13] , a37[ 13] , a38[ 13] , a39[ 13] , a40[ 13] , a41[ 13] , a42[ 13] , a43[ 13] , a44[ 13])) , details::maybe_genmask<stype>(a0(a1[ 14] , a2[ 14] , a3[ 14] , a4[ 14] , a5[ 14] , a6[ 14] , a7[ 14] , a8[ 14] , a9[ 14] , a10[ 14] , a11[ 14] , a12[ 14] , a13[ 14] , a14[ 14] , a15[ 14] , a16[ 14] , a17[ 14] , a18[ 14] , a19[ 14] , a20[ 14] , a21[ 14] , a22[ 14] , a23[ 14] , a24[ 14] , a25[ 14] , a26[ 14] , a27[ 14] , a28[ 14] , a29[ 14] , a30[ 14] , a31[ 14] , a32[ 14] , a33[ 14] , a34[ 14] , a35[ 14] , a36[ 14] , a37[ 14] , a38[ 14] , a39[ 14] , a40[ 14] , a41[ 14] , a42[ 14] , a43[ 14] , a44[ 14])) , details::maybe_genmask<stype>(a0(a1[ 15] , a2[ 15] , a3[ 15] , a4[ 15] , a5[ 15] , a6[ 15] , a7[ 15] , a8[ 15] , a9[ 15] , a10[ 15] , a11[ 15] , a12[ 15] , a13[ 15] , a14[ 15] , a15[ 15] , a16[ 15] , a17[ 15] , a18[ 15] , a19[ 15] , a20[ 15] , a21[ 15] , a22[ 15] , a23[ 15] , a24[ 15] , a25[ 15] , a26[ 15] , a27[ 15] , a28[ 15] , a29[ 15] , a30[ 15] , a31[ 15] , a32[ 15] , a33[ 15] , a34[ 15] , a35[ 15] , a36[ 15] , a37[ 15] , a38[ 15] , a39[ 15] , a40[ 15] , a41[ 15] , a42[ 15] , a43[ 15] , a44[ 15]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints8_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A39>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A40>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A41>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A42>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A43>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A44>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints8_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A39>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A40>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A41>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A42>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A43>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A44>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints8_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type , typename meta::scalar_of<A39>::type , typename meta::scalar_of<A40>::type , typename meta::scalar_of<A41>::type , typename meta::scalar_of<A42>::type , typename meta::scalar_of<A43>::type , typename meta::scalar_of<A44>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const& , A41 const& , A42 const& , A43 const& , A44 const& , A45 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 , A41 const& a41 , A42 const& a42 , A43 const& a43 , A44 const& a44 , A45 const& a45 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0] , a40[ 0] , a41[ 0] , a42[ 0] , a43[ 0] , a44[ 0] , a45[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1] , a40[ 1] , a41[ 1] , a42[ 1] , a43[ 1] , a44[ 1] , a45[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2] , a34[ 2] , a35[ 2] , a36[ 2] , a37[ 2] , a38[ 2] , a39[ 2] , a40[ 2] , a41[ 2] , a42[ 2] , a43[ 2] , a44[ 2] , a45[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3] , a34[ 3] , a35[ 3] , a36[ 3] , a37[ 3] , a38[ 3] , a39[ 3] , a40[ 3] , a41[ 3] , a42[ 3] , a43[ 3] , a44[ 3] , a45[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4] , a18[ 4] , a19[ 4] , a20[ 4] , a21[ 4] , a22[ 4] , a23[ 4] , a24[ 4] , a25[ 4] , a26[ 4] , a27[ 4] , a28[ 4] , a29[ 4] , a30[ 4] , a31[ 4] , a32[ 4] , a33[ 4] , a34[ 4] , a35[ 4] , a36[ 4] , a37[ 4] , a38[ 4] , a39[ 4] , a40[ 4] , a41[ 4] , a42[ 4] , a43[ 4] , a44[ 4] , a45[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5] , a18[ 5] , a19[ 5] , a20[ 5] , a21[ 5] , a22[ 5] , a23[ 5] , a24[ 5] , a25[ 5] , a26[ 5] , a27[ 5] , a28[ 5] , a29[ 5] , a30[ 5] , a31[ 5] , a32[ 5] , a33[ 5] , a34[ 5] , a35[ 5] , a36[ 5] , a37[ 5] , a38[ 5] , a39[ 5] , a40[ 5] , a41[ 5] , a42[ 5] , a43[ 5] , a44[ 5] , a45[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6] , a18[ 6] , a19[ 6] , a20[ 6] , a21[ 6] , a22[ 6] , a23[ 6] , a24[ 6] , a25[ 6] , a26[ 6] , a27[ 6] , a28[ 6] , a29[ 6] , a30[ 6] , a31[ 6] , a32[ 6] , a33[ 6] , a34[ 6] , a35[ 6] , a36[ 6] , a37[ 6] , a38[ 6] , a39[ 6] , a40[ 6] , a41[ 6] , a42[ 6] , a43[ 6] , a44[ 6] , a45[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7] , a18[ 7] , a19[ 7] , a20[ 7] , a21[ 7] , a22[ 7] , a23[ 7] , a24[ 7] , a25[ 7] , a26[ 7] , a27[ 7] , a28[ 7] , a29[ 7] , a30[ 7] , a31[ 7] , a32[ 7] , a33[ 7] , a34[ 7] , a35[ 7] , a36[ 7] , a37[ 7] , a38[ 7] , a39[ 7] , a40[ 7] , a41[ 7] , a42[ 7] , a43[ 7] , a44[ 7] , a45[ 7])) , details::maybe_genmask<stype>(a0(a1[ 8] , a2[ 8] , a3[ 8] , a4[ 8] , a5[ 8] , a6[ 8] , a7[ 8] , a8[ 8] , a9[ 8] , a10[ 8] , a11[ 8] , a12[ 8] , a13[ 8] , a14[ 8] , a15[ 8] , a16[ 8] , a17[ 8] , a18[ 8] , a19[ 8] , a20[ 8] , a21[ 8] , a22[ 8] , a23[ 8] , a24[ 8] , a25[ 8] , a26[ 8] , a27[ 8] , a28[ 8] , a29[ 8] , a30[ 8] , a31[ 8] , a32[ 8] , a33[ 8] , a34[ 8] , a35[ 8] , a36[ 8] , a37[ 8] , a38[ 8] , a39[ 8] , a40[ 8] , a41[ 8] , a42[ 8] , a43[ 8] , a44[ 8] , a45[ 8])) , details::maybe_genmask<stype>(a0(a1[ 9] , a2[ 9] , a3[ 9] , a4[ 9] , a5[ 9] , a6[ 9] , a7[ 9] , a8[ 9] , a9[ 9] , a10[ 9] , a11[ 9] , a12[ 9] , a13[ 9] , a14[ 9] , a15[ 9] , a16[ 9] , a17[ 9] , a18[ 9] , a19[ 9] , a20[ 9] , a21[ 9] , a22[ 9] , a23[ 9] , a24[ 9] , a25[ 9] , a26[ 9] , a27[ 9] , a28[ 9] , a29[ 9] , a30[ 9] , a31[ 9] , a32[ 9] , a33[ 9] , a34[ 9] , a35[ 9] , a36[ 9] , a37[ 9] , a38[ 9] , a39[ 9] , a40[ 9] , a41[ 9] , a42[ 9] , a43[ 9] , a44[ 9] , a45[ 9])) , details::maybe_genmask<stype>(a0(a1[ 10] , a2[ 10] , a3[ 10] , a4[ 10] , a5[ 10] , a6[ 10] , a7[ 10] , a8[ 10] , a9[ 10] , a10[ 10] , a11[ 10] , a12[ 10] , a13[ 10] , a14[ 10] , a15[ 10] , a16[ 10] , a17[ 10] , a18[ 10] , a19[ 10] , a20[ 10] , a21[ 10] , a22[ 10] , a23[ 10] , a24[ 10] , a25[ 10] , a26[ 10] , a27[ 10] , a28[ 10] , a29[ 10] , a30[ 10] , a31[ 10] , a32[ 10] , a33[ 10] , a34[ 10] , a35[ 10] , a36[ 10] , a37[ 10] , a38[ 10] , a39[ 10] , a40[ 10] , a41[ 10] , a42[ 10] , a43[ 10] , a44[ 10] , a45[ 10])) , details::maybe_genmask<stype>(a0(a1[ 11] , a2[ 11] , a3[ 11] , a4[ 11] , a5[ 11] , a6[ 11] , a7[ 11] , a8[ 11] , a9[ 11] , a10[ 11] , a11[ 11] , a12[ 11] , a13[ 11] , a14[ 11] , a15[ 11] , a16[ 11] , a17[ 11] , a18[ 11] , a19[ 11] , a20[ 11] , a21[ 11] , a22[ 11] , a23[ 11] , a24[ 11] , a25[ 11] , a26[ 11] , a27[ 11] , a28[ 11] , a29[ 11] , a30[ 11] , a31[ 11] , a32[ 11] , a33[ 11] , a34[ 11] , a35[ 11] , a36[ 11] , a37[ 11] , a38[ 11] , a39[ 11] , a40[ 11] , a41[ 11] , a42[ 11] , a43[ 11] , a44[ 11] , a45[ 11])) , details::maybe_genmask<stype>(a0(a1[ 12] , a2[ 12] , a3[ 12] , a4[ 12] , a5[ 12] , a6[ 12] , a7[ 12] , a8[ 12] , a9[ 12] , a10[ 12] , a11[ 12] , a12[ 12] , a13[ 12] , a14[ 12] , a15[ 12] , a16[ 12] , a17[ 12] , a18[ 12] , a19[ 12] , a20[ 12] , a21[ 12] , a22[ 12] , a23[ 12] , a24[ 12] , a25[ 12] , a26[ 12] , a27[ 12] , a28[ 12] , a29[ 12] , a30[ 12] , a31[ 12] , a32[ 12] , a33[ 12] , a34[ 12] , a35[ 12] , a36[ 12] , a37[ 12] , a38[ 12] , a39[ 12] , a40[ 12] , a41[ 12] , a42[ 12] , a43[ 12] , a44[ 12] , a45[ 12])) , details::maybe_genmask<stype>(a0(a1[ 13] , a2[ 13] , a3[ 13] , a4[ 13] , a5[ 13] , a6[ 13] , a7[ 13] , a8[ 13] , a9[ 13] , a10[ 13] , a11[ 13] , a12[ 13] , a13[ 13] , a14[ 13] , a15[ 13] , a16[ 13] , a17[ 13] , a18[ 13] , a19[ 13] , a20[ 13] , a21[ 13] , a22[ 13] , a23[ 13] , a24[ 13] , a25[ 13] , a26[ 13] , a27[ 13] , a28[ 13] , a29[ 13] , a30[ 13] , a31[ 13] , a32[ 13] , a33[ 13] , a34[ 13] , a35[ 13] , a36[ 13] , a37[ 13] , a38[ 13] , a39[ 13] , a40[ 13] , a41[ 13] , a42[ 13] , a43[ 13] , a44[ 13] , a45[ 13])) , details::maybe_genmask<stype>(a0(a1[ 14] , a2[ 14] , a3[ 14] , a4[ 14] , a5[ 14] , a6[ 14] , a7[ 14] , a8[ 14] , a9[ 14] , a10[ 14] , a11[ 14] , a12[ 14] , a13[ 14] , a14[ 14] , a15[ 14] , a16[ 14] , a17[ 14] , a18[ 14] , a19[ 14] , a20[ 14] , a21[ 14] , a22[ 14] , a23[ 14] , a24[ 14] , a25[ 14] , a26[ 14] , a27[ 14] , a28[ 14] , a29[ 14] , a30[ 14] , a31[ 14] , a32[ 14] , a33[ 14] , a34[ 14] , a35[ 14] , a36[ 14] , a37[ 14] , a38[ 14] , a39[ 14] , a40[ 14] , a41[ 14] , a42[ 14] , a43[ 14] , a44[ 14] , a45[ 14])) , details::maybe_genmask<stype>(a0(a1[ 15] , a2[ 15] , a3[ 15] , a4[ 15] , a5[ 15] , a6[ 15] , a7[ 15] , a8[ 15] , a9[ 15] , a10[ 15] , a11[ 15] , a12[ 15] , a13[ 15] , a14[ 15] , a15[ 15] , a16[ 15] , a17[ 15] , a18[ 15] , a19[ 15] , a20[ 15] , a21[ 15] , a22[ 15] , a23[ 15] , a24[ 15] , a25[ 15] , a26[ 15] , a27[ 15] , a28[ 15] , a29[ 15] , a30[ 15] , a31[ 15] , a32[ 15] , a33[ 15] , a34[ 15] , a35[ 15] , a36[ 15] , a37[ 15] , a38[ 15] , a39[ 15] , a40[ 15] , a41[ 15] , a42[ 15] , a43[ 15] , a44[ 15] , a45[ 15]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints8_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A39>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A40>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A41>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A42>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A43>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A44>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A45>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints8_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A39>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A40>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A41>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A42>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A43>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A44>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A45>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints8_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type , typename meta::scalar_of<A39>::type , typename meta::scalar_of<A40>::type , typename meta::scalar_of<A41>::type , typename meta::scalar_of<A42>::type , typename meta::scalar_of<A43>::type , typename meta::scalar_of<A44>::type , typename meta::scalar_of<A45>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const& , A41 const& , A42 const& , A43 const& , A44 const& , A45 const& , A46 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 , A41 const& a41 , A42 const& a42 , A43 const& a43 , A44 const& a44 , A45 const& a45 , A46 const& a46 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0] , a40[ 0] , a41[ 0] , a42[ 0] , a43[ 0] , a44[ 0] , a45[ 0] , a46[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1] , a40[ 1] , a41[ 1] , a42[ 1] , a43[ 1] , a44[ 1] , a45[ 1] , a46[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2] , a34[ 2] , a35[ 2] , a36[ 2] , a37[ 2] , a38[ 2] , a39[ 2] , a40[ 2] , a41[ 2] , a42[ 2] , a43[ 2] , a44[ 2] , a45[ 2] , a46[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3] , a34[ 3] , a35[ 3] , a36[ 3] , a37[ 3] , a38[ 3] , a39[ 3] , a40[ 3] , a41[ 3] , a42[ 3] , a43[ 3] , a44[ 3] , a45[ 3] , a46[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4] , a18[ 4] , a19[ 4] , a20[ 4] , a21[ 4] , a22[ 4] , a23[ 4] , a24[ 4] , a25[ 4] , a26[ 4] , a27[ 4] , a28[ 4] , a29[ 4] , a30[ 4] , a31[ 4] , a32[ 4] , a33[ 4] , a34[ 4] , a35[ 4] , a36[ 4] , a37[ 4] , a38[ 4] , a39[ 4] , a40[ 4] , a41[ 4] , a42[ 4] , a43[ 4] , a44[ 4] , a45[ 4] , a46[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5] , a18[ 5] , a19[ 5] , a20[ 5] , a21[ 5] , a22[ 5] , a23[ 5] , a24[ 5] , a25[ 5] , a26[ 5] , a27[ 5] , a28[ 5] , a29[ 5] , a30[ 5] , a31[ 5] , a32[ 5] , a33[ 5] , a34[ 5] , a35[ 5] , a36[ 5] , a37[ 5] , a38[ 5] , a39[ 5] , a40[ 5] , a41[ 5] , a42[ 5] , a43[ 5] , a44[ 5] , a45[ 5] , a46[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6] , a18[ 6] , a19[ 6] , a20[ 6] , a21[ 6] , a22[ 6] , a23[ 6] , a24[ 6] , a25[ 6] , a26[ 6] , a27[ 6] , a28[ 6] , a29[ 6] , a30[ 6] , a31[ 6] , a32[ 6] , a33[ 6] , a34[ 6] , a35[ 6] , a36[ 6] , a37[ 6] , a38[ 6] , a39[ 6] , a40[ 6] , a41[ 6] , a42[ 6] , a43[ 6] , a44[ 6] , a45[ 6] , a46[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7] , a18[ 7] , a19[ 7] , a20[ 7] , a21[ 7] , a22[ 7] , a23[ 7] , a24[ 7] , a25[ 7] , a26[ 7] , a27[ 7] , a28[ 7] , a29[ 7] , a30[ 7] , a31[ 7] , a32[ 7] , a33[ 7] , a34[ 7] , a35[ 7] , a36[ 7] , a37[ 7] , a38[ 7] , a39[ 7] , a40[ 7] , a41[ 7] , a42[ 7] , a43[ 7] , a44[ 7] , a45[ 7] , a46[ 7])) , details::maybe_genmask<stype>(a0(a1[ 8] , a2[ 8] , a3[ 8] , a4[ 8] , a5[ 8] , a6[ 8] , a7[ 8] , a8[ 8] , a9[ 8] , a10[ 8] , a11[ 8] , a12[ 8] , a13[ 8] , a14[ 8] , a15[ 8] , a16[ 8] , a17[ 8] , a18[ 8] , a19[ 8] , a20[ 8] , a21[ 8] , a22[ 8] , a23[ 8] , a24[ 8] , a25[ 8] , a26[ 8] , a27[ 8] , a28[ 8] , a29[ 8] , a30[ 8] , a31[ 8] , a32[ 8] , a33[ 8] , a34[ 8] , a35[ 8] , a36[ 8] , a37[ 8] , a38[ 8] , a39[ 8] , a40[ 8] , a41[ 8] , a42[ 8] , a43[ 8] , a44[ 8] , a45[ 8] , a46[ 8])) , details::maybe_genmask<stype>(a0(a1[ 9] , a2[ 9] , a3[ 9] , a4[ 9] , a5[ 9] , a6[ 9] , a7[ 9] , a8[ 9] , a9[ 9] , a10[ 9] , a11[ 9] , a12[ 9] , a13[ 9] , a14[ 9] , a15[ 9] , a16[ 9] , a17[ 9] , a18[ 9] , a19[ 9] , a20[ 9] , a21[ 9] , a22[ 9] , a23[ 9] , a24[ 9] , a25[ 9] , a26[ 9] , a27[ 9] , a28[ 9] , a29[ 9] , a30[ 9] , a31[ 9] , a32[ 9] , a33[ 9] , a34[ 9] , a35[ 9] , a36[ 9] , a37[ 9] , a38[ 9] , a39[ 9] , a40[ 9] , a41[ 9] , a42[ 9] , a43[ 9] , a44[ 9] , a45[ 9] , a46[ 9])) , details::maybe_genmask<stype>(a0(a1[ 10] , a2[ 10] , a3[ 10] , a4[ 10] , a5[ 10] , a6[ 10] , a7[ 10] , a8[ 10] , a9[ 10] , a10[ 10] , a11[ 10] , a12[ 10] , a13[ 10] , a14[ 10] , a15[ 10] , a16[ 10] , a17[ 10] , a18[ 10] , a19[ 10] , a20[ 10] , a21[ 10] , a22[ 10] , a23[ 10] , a24[ 10] , a25[ 10] , a26[ 10] , a27[ 10] , a28[ 10] , a29[ 10] , a30[ 10] , a31[ 10] , a32[ 10] , a33[ 10] , a34[ 10] , a35[ 10] , a36[ 10] , a37[ 10] , a38[ 10] , a39[ 10] , a40[ 10] , a41[ 10] , a42[ 10] , a43[ 10] , a44[ 10] , a45[ 10] , a46[ 10])) , details::maybe_genmask<stype>(a0(a1[ 11] , a2[ 11] , a3[ 11] , a4[ 11] , a5[ 11] , a6[ 11] , a7[ 11] , a8[ 11] , a9[ 11] , a10[ 11] , a11[ 11] , a12[ 11] , a13[ 11] , a14[ 11] , a15[ 11] , a16[ 11] , a17[ 11] , a18[ 11] , a19[ 11] , a20[ 11] , a21[ 11] , a22[ 11] , a23[ 11] , a24[ 11] , a25[ 11] , a26[ 11] , a27[ 11] , a28[ 11] , a29[ 11] , a30[ 11] , a31[ 11] , a32[ 11] , a33[ 11] , a34[ 11] , a35[ 11] , a36[ 11] , a37[ 11] , a38[ 11] , a39[ 11] , a40[ 11] , a41[ 11] , a42[ 11] , a43[ 11] , a44[ 11] , a45[ 11] , a46[ 11])) , details::maybe_genmask<stype>(a0(a1[ 12] , a2[ 12] , a3[ 12] , a4[ 12] , a5[ 12] , a6[ 12] , a7[ 12] , a8[ 12] , a9[ 12] , a10[ 12] , a11[ 12] , a12[ 12] , a13[ 12] , a14[ 12] , a15[ 12] , a16[ 12] , a17[ 12] , a18[ 12] , a19[ 12] , a20[ 12] , a21[ 12] , a22[ 12] , a23[ 12] , a24[ 12] , a25[ 12] , a26[ 12] , a27[ 12] , a28[ 12] , a29[ 12] , a30[ 12] , a31[ 12] , a32[ 12] , a33[ 12] , a34[ 12] , a35[ 12] , a36[ 12] , a37[ 12] , a38[ 12] , a39[ 12] , a40[ 12] , a41[ 12] , a42[ 12] , a43[ 12] , a44[ 12] , a45[ 12] , a46[ 12])) , details::maybe_genmask<stype>(a0(a1[ 13] , a2[ 13] , a3[ 13] , a4[ 13] , a5[ 13] , a6[ 13] , a7[ 13] , a8[ 13] , a9[ 13] , a10[ 13] , a11[ 13] , a12[ 13] , a13[ 13] , a14[ 13] , a15[ 13] , a16[ 13] , a17[ 13] , a18[ 13] , a19[ 13] , a20[ 13] , a21[ 13] , a22[ 13] , a23[ 13] , a24[ 13] , a25[ 13] , a26[ 13] , a27[ 13] , a28[ 13] , a29[ 13] , a30[ 13] , a31[ 13] , a32[ 13] , a33[ 13] , a34[ 13] , a35[ 13] , a36[ 13] , a37[ 13] , a38[ 13] , a39[ 13] , a40[ 13] , a41[ 13] , a42[ 13] , a43[ 13] , a44[ 13] , a45[ 13] , a46[ 13])) , details::maybe_genmask<stype>(a0(a1[ 14] , a2[ 14] , a3[ 14] , a4[ 14] , a5[ 14] , a6[ 14] , a7[ 14] , a8[ 14] , a9[ 14] , a10[ 14] , a11[ 14] , a12[ 14] , a13[ 14] , a14[ 14] , a15[ 14] , a16[ 14] , a17[ 14] , a18[ 14] , a19[ 14] , a20[ 14] , a21[ 14] , a22[ 14] , a23[ 14] , a24[ 14] , a25[ 14] , a26[ 14] , a27[ 14] , a28[ 14] , a29[ 14] , a30[ 14] , a31[ 14] , a32[ 14] , a33[ 14] , a34[ 14] , a35[ 14] , a36[ 14] , a37[ 14] , a38[ 14] , a39[ 14] , a40[ 14] , a41[ 14] , a42[ 14] , a43[ 14] , a44[ 14] , a45[ 14] , a46[ 14])) , details::maybe_genmask<stype>(a0(a1[ 15] , a2[ 15] , a3[ 15] , a4[ 15] , a5[ 15] , a6[ 15] , a7[ 15] , a8[ 15] , a9[ 15] , a10[ 15] , a11[ 15] , a12[ 15] , a13[ 15] , a14[ 15] , a15[ 15] , a16[ 15] , a17[ 15] , a18[ 15] , a19[ 15] , a20[ 15] , a21[ 15] , a22[ 15] , a23[ 15] , a24[ 15] , a25[ 15] , a26[ 15] , a27[ 15] , a28[ 15] , a29[ 15] , a30[ 15] , a31[ 15] , a32[ 15] , a33[ 15] , a34[ 15] , a35[ 15] , a36[ 15] , a37[ 15] , a38[ 15] , a39[ 15] , a40[ 15] , a41[ 15] , a42[ 15] , a43[ 15] , a44[ 15] , a45[ 15] , a46[ 15]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints8_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A39>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A40>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A41>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A42>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A43>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A44>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A45>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A46>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints8_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A39>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A40>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A41>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A42>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A43>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A44>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A45>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A46>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints8_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type , typename meta::scalar_of<A39>::type , typename meta::scalar_of<A40>::type , typename meta::scalar_of<A41>::type , typename meta::scalar_of<A42>::type , typename meta::scalar_of<A43>::type , typename meta::scalar_of<A44>::type , typename meta::scalar_of<A45>::type , typename meta::scalar_of<A46>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46 , class A47> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const& , A41 const& , A42 const& , A43 const& , A44 const& , A45 const& , A46 const& , A47 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 , A41 const& a41 , A42 const& a42 , A43 const& a43 , A44 const& a44 , A45 const& a45 , A46 const& a46 , A47 const& a47 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46 , A47)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46 , A47)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0] , a40[ 0] , a41[ 0] , a42[ 0] , a43[ 0] , a44[ 0] , a45[ 0] , a46[ 0] , a47[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1] , a40[ 1] , a41[ 1] , a42[ 1] , a43[ 1] , a44[ 1] , a45[ 1] , a46[ 1] , a47[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2] , a34[ 2] , a35[ 2] , a36[ 2] , a37[ 2] , a38[ 2] , a39[ 2] , a40[ 2] , a41[ 2] , a42[ 2] , a43[ 2] , a44[ 2] , a45[ 2] , a46[ 2] , a47[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3] , a34[ 3] , a35[ 3] , a36[ 3] , a37[ 3] , a38[ 3] , a39[ 3] , a40[ 3] , a41[ 3] , a42[ 3] , a43[ 3] , a44[ 3] , a45[ 3] , a46[ 3] , a47[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4] , a18[ 4] , a19[ 4] , a20[ 4] , a21[ 4] , a22[ 4] , a23[ 4] , a24[ 4] , a25[ 4] , a26[ 4] , a27[ 4] , a28[ 4] , a29[ 4] , a30[ 4] , a31[ 4] , a32[ 4] , a33[ 4] , a34[ 4] , a35[ 4] , a36[ 4] , a37[ 4] , a38[ 4] , a39[ 4] , a40[ 4] , a41[ 4] , a42[ 4] , a43[ 4] , a44[ 4] , a45[ 4] , a46[ 4] , a47[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5] , a18[ 5] , a19[ 5] , a20[ 5] , a21[ 5] , a22[ 5] , a23[ 5] , a24[ 5] , a25[ 5] , a26[ 5] , a27[ 5] , a28[ 5] , a29[ 5] , a30[ 5] , a31[ 5] , a32[ 5] , a33[ 5] , a34[ 5] , a35[ 5] , a36[ 5] , a37[ 5] , a38[ 5] , a39[ 5] , a40[ 5] , a41[ 5] , a42[ 5] , a43[ 5] , a44[ 5] , a45[ 5] , a46[ 5] , a47[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6] , a18[ 6] , a19[ 6] , a20[ 6] , a21[ 6] , a22[ 6] , a23[ 6] , a24[ 6] , a25[ 6] , a26[ 6] , a27[ 6] , a28[ 6] , a29[ 6] , a30[ 6] , a31[ 6] , a32[ 6] , a33[ 6] , a34[ 6] , a35[ 6] , a36[ 6] , a37[ 6] , a38[ 6] , a39[ 6] , a40[ 6] , a41[ 6] , a42[ 6] , a43[ 6] , a44[ 6] , a45[ 6] , a46[ 6] , a47[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7] , a18[ 7] , a19[ 7] , a20[ 7] , a21[ 7] , a22[ 7] , a23[ 7] , a24[ 7] , a25[ 7] , a26[ 7] , a27[ 7] , a28[ 7] , a29[ 7] , a30[ 7] , a31[ 7] , a32[ 7] , a33[ 7] , a34[ 7] , a35[ 7] , a36[ 7] , a37[ 7] , a38[ 7] , a39[ 7] , a40[ 7] , a41[ 7] , a42[ 7] , a43[ 7] , a44[ 7] , a45[ 7] , a46[ 7] , a47[ 7])) , details::maybe_genmask<stype>(a0(a1[ 8] , a2[ 8] , a3[ 8] , a4[ 8] , a5[ 8] , a6[ 8] , a7[ 8] , a8[ 8] , a9[ 8] , a10[ 8] , a11[ 8] , a12[ 8] , a13[ 8] , a14[ 8] , a15[ 8] , a16[ 8] , a17[ 8] , a18[ 8] , a19[ 8] , a20[ 8] , a21[ 8] , a22[ 8] , a23[ 8] , a24[ 8] , a25[ 8] , a26[ 8] , a27[ 8] , a28[ 8] , a29[ 8] , a30[ 8] , a31[ 8] , a32[ 8] , a33[ 8] , a34[ 8] , a35[ 8] , a36[ 8] , a37[ 8] , a38[ 8] , a39[ 8] , a40[ 8] , a41[ 8] , a42[ 8] , a43[ 8] , a44[ 8] , a45[ 8] , a46[ 8] , a47[ 8])) , details::maybe_genmask<stype>(a0(a1[ 9] , a2[ 9] , a3[ 9] , a4[ 9] , a5[ 9] , a6[ 9] , a7[ 9] , a8[ 9] , a9[ 9] , a10[ 9] , a11[ 9] , a12[ 9] , a13[ 9] , a14[ 9] , a15[ 9] , a16[ 9] , a17[ 9] , a18[ 9] , a19[ 9] , a20[ 9] , a21[ 9] , a22[ 9] , a23[ 9] , a24[ 9] , a25[ 9] , a26[ 9] , a27[ 9] , a28[ 9] , a29[ 9] , a30[ 9] , a31[ 9] , a32[ 9] , a33[ 9] , a34[ 9] , a35[ 9] , a36[ 9] , a37[ 9] , a38[ 9] , a39[ 9] , a40[ 9] , a41[ 9] , a42[ 9] , a43[ 9] , a44[ 9] , a45[ 9] , a46[ 9] , a47[ 9])) , details::maybe_genmask<stype>(a0(a1[ 10] , a2[ 10] , a3[ 10] , a4[ 10] , a5[ 10] , a6[ 10] , a7[ 10] , a8[ 10] , a9[ 10] , a10[ 10] , a11[ 10] , a12[ 10] , a13[ 10] , a14[ 10] , a15[ 10] , a16[ 10] , a17[ 10] , a18[ 10] , a19[ 10] , a20[ 10] , a21[ 10] , a22[ 10] , a23[ 10] , a24[ 10] , a25[ 10] , a26[ 10] , a27[ 10] , a28[ 10] , a29[ 10] , a30[ 10] , a31[ 10] , a32[ 10] , a33[ 10] , a34[ 10] , a35[ 10] , a36[ 10] , a37[ 10] , a38[ 10] , a39[ 10] , a40[ 10] , a41[ 10] , a42[ 10] , a43[ 10] , a44[ 10] , a45[ 10] , a46[ 10] , a47[ 10])) , details::maybe_genmask<stype>(a0(a1[ 11] , a2[ 11] , a3[ 11] , a4[ 11] , a5[ 11] , a6[ 11] , a7[ 11] , a8[ 11] , a9[ 11] , a10[ 11] , a11[ 11] , a12[ 11] , a13[ 11] , a14[ 11] , a15[ 11] , a16[ 11] , a17[ 11] , a18[ 11] , a19[ 11] , a20[ 11] , a21[ 11] , a22[ 11] , a23[ 11] , a24[ 11] , a25[ 11] , a26[ 11] , a27[ 11] , a28[ 11] , a29[ 11] , a30[ 11] , a31[ 11] , a32[ 11] , a33[ 11] , a34[ 11] , a35[ 11] , a36[ 11] , a37[ 11] , a38[ 11] , a39[ 11] , a40[ 11] , a41[ 11] , a42[ 11] , a43[ 11] , a44[ 11] , a45[ 11] , a46[ 11] , a47[ 11])) , details::maybe_genmask<stype>(a0(a1[ 12] , a2[ 12] , a3[ 12] , a4[ 12] , a5[ 12] , a6[ 12] , a7[ 12] , a8[ 12] , a9[ 12] , a10[ 12] , a11[ 12] , a12[ 12] , a13[ 12] , a14[ 12] , a15[ 12] , a16[ 12] , a17[ 12] , a18[ 12] , a19[ 12] , a20[ 12] , a21[ 12] , a22[ 12] , a23[ 12] , a24[ 12] , a25[ 12] , a26[ 12] , a27[ 12] , a28[ 12] , a29[ 12] , a30[ 12] , a31[ 12] , a32[ 12] , a33[ 12] , a34[ 12] , a35[ 12] , a36[ 12] , a37[ 12] , a38[ 12] , a39[ 12] , a40[ 12] , a41[ 12] , a42[ 12] , a43[ 12] , a44[ 12] , a45[ 12] , a46[ 12] , a47[ 12])) , details::maybe_genmask<stype>(a0(a1[ 13] , a2[ 13] , a3[ 13] , a4[ 13] , a5[ 13] , a6[ 13] , a7[ 13] , a8[ 13] , a9[ 13] , a10[ 13] , a11[ 13] , a12[ 13] , a13[ 13] , a14[ 13] , a15[ 13] , a16[ 13] , a17[ 13] , a18[ 13] , a19[ 13] , a20[ 13] , a21[ 13] , a22[ 13] , a23[ 13] , a24[ 13] , a25[ 13] , a26[ 13] , a27[ 13] , a28[ 13] , a29[ 13] , a30[ 13] , a31[ 13] , a32[ 13] , a33[ 13] , a34[ 13] , a35[ 13] , a36[ 13] , a37[ 13] , a38[ 13] , a39[ 13] , a40[ 13] , a41[ 13] , a42[ 13] , a43[ 13] , a44[ 13] , a45[ 13] , a46[ 13] , a47[ 13])) , details::maybe_genmask<stype>(a0(a1[ 14] , a2[ 14] , a3[ 14] , a4[ 14] , a5[ 14] , a6[ 14] , a7[ 14] , a8[ 14] , a9[ 14] , a10[ 14] , a11[ 14] , a12[ 14] , a13[ 14] , a14[ 14] , a15[ 14] , a16[ 14] , a17[ 14] , a18[ 14] , a19[ 14] , a20[ 14] , a21[ 14] , a22[ 14] , a23[ 14] , a24[ 14] , a25[ 14] , a26[ 14] , a27[ 14] , a28[ 14] , a29[ 14] , a30[ 14] , a31[ 14] , a32[ 14] , a33[ 14] , a34[ 14] , a35[ 14] , a36[ 14] , a37[ 14] , a38[ 14] , a39[ 14] , a40[ 14] , a41[ 14] , a42[ 14] , a43[ 14] , a44[ 14] , a45[ 14] , a46[ 14] , a47[ 14])) , details::maybe_genmask<stype>(a0(a1[ 15] , a2[ 15] , a3[ 15] , a4[ 15] , a5[ 15] , a6[ 15] , a7[ 15] , a8[ 15] , a9[ 15] , a10[ 15] , a11[ 15] , a12[ 15] , a13[ 15] , a14[ 15] , a15[ 15] , a16[ 15] , a17[ 15] , a18[ 15] , a19[ 15] , a20[ 15] , a21[ 15] , a22[ 15] , a23[ 15] , a24[ 15] , a25[ 15] , a26[ 15] , a27[ 15] , a28[ 15] , a29[ 15] , a30[ 15] , a31[ 15] , a32[ 15] , a33[ 15] , a34[ 15] , a35[ 15] , a36[ 15] , a37[ 15] , a38[ 15] , a39[ 15] , a40[ 15] , a41[ 15] , a42[ 15] , a43[ 15] , a44[ 15] , a45[ 15] , a46[ 15] , a47[ 15]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46 , class A47> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints8_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A39>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A40>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A41>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A42>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A43>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A44>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A45>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A46>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A47>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints8_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A39>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A40>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A41>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A42>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A43>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A44>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A45>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A46>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A47>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints8_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46 , class A47> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46 , A47)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type , typename meta::scalar_of<A39>::type , typename meta::scalar_of<A40>::type , typename meta::scalar_of<A41>::type , typename meta::scalar_of<A42>::type , typename meta::scalar_of<A43>::type , typename meta::scalar_of<A44>::type , typename meta::scalar_of<A45>::type , typename meta::scalar_of<A46>::type , typename meta::scalar_of<A47>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46 , class A47 , class A48> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const& , A41 const& , A42 const& , A43 const& , A44 const& , A45 const& , A46 const& , A47 const& , A48 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 , A41 const& a41 , A42 const& a42 , A43 const& a43 , A44 const& a44 , A45 const& a45 , A46 const& a46 , A47 const& a47 , A48 const& a48 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46 , A47 , A48)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46 , A47 , A48)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0] , a40[ 0] , a41[ 0] , a42[ 0] , a43[ 0] , a44[ 0] , a45[ 0] , a46[ 0] , a47[ 0] , a48[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1] , a40[ 1] , a41[ 1] , a42[ 1] , a43[ 1] , a44[ 1] , a45[ 1] , a46[ 1] , a47[ 1] , a48[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2] , a34[ 2] , a35[ 2] , a36[ 2] , a37[ 2] , a38[ 2] , a39[ 2] , a40[ 2] , a41[ 2] , a42[ 2] , a43[ 2] , a44[ 2] , a45[ 2] , a46[ 2] , a47[ 2] , a48[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3] , a34[ 3] , a35[ 3] , a36[ 3] , a37[ 3] , a38[ 3] , a39[ 3] , a40[ 3] , a41[ 3] , a42[ 3] , a43[ 3] , a44[ 3] , a45[ 3] , a46[ 3] , a47[ 3] , a48[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4] , a18[ 4] , a19[ 4] , a20[ 4] , a21[ 4] , a22[ 4] , a23[ 4] , a24[ 4] , a25[ 4] , a26[ 4] , a27[ 4] , a28[ 4] , a29[ 4] , a30[ 4] , a31[ 4] , a32[ 4] , a33[ 4] , a34[ 4] , a35[ 4] , a36[ 4] , a37[ 4] , a38[ 4] , a39[ 4] , a40[ 4] , a41[ 4] , a42[ 4] , a43[ 4] , a44[ 4] , a45[ 4] , a46[ 4] , a47[ 4] , a48[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5] , a18[ 5] , a19[ 5] , a20[ 5] , a21[ 5] , a22[ 5] , a23[ 5] , a24[ 5] , a25[ 5] , a26[ 5] , a27[ 5] , a28[ 5] , a29[ 5] , a30[ 5] , a31[ 5] , a32[ 5] , a33[ 5] , a34[ 5] , a35[ 5] , a36[ 5] , a37[ 5] , a38[ 5] , a39[ 5] , a40[ 5] , a41[ 5] , a42[ 5] , a43[ 5] , a44[ 5] , a45[ 5] , a46[ 5] , a47[ 5] , a48[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6] , a18[ 6] , a19[ 6] , a20[ 6] , a21[ 6] , a22[ 6] , a23[ 6] , a24[ 6] , a25[ 6] , a26[ 6] , a27[ 6] , a28[ 6] , a29[ 6] , a30[ 6] , a31[ 6] , a32[ 6] , a33[ 6] , a34[ 6] , a35[ 6] , a36[ 6] , a37[ 6] , a38[ 6] , a39[ 6] , a40[ 6] , a41[ 6] , a42[ 6] , a43[ 6] , a44[ 6] , a45[ 6] , a46[ 6] , a47[ 6] , a48[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7] , a18[ 7] , a19[ 7] , a20[ 7] , a21[ 7] , a22[ 7] , a23[ 7] , a24[ 7] , a25[ 7] , a26[ 7] , a27[ 7] , a28[ 7] , a29[ 7] , a30[ 7] , a31[ 7] , a32[ 7] , a33[ 7] , a34[ 7] , a35[ 7] , a36[ 7] , a37[ 7] , a38[ 7] , a39[ 7] , a40[ 7] , a41[ 7] , a42[ 7] , a43[ 7] , a44[ 7] , a45[ 7] , a46[ 7] , a47[ 7] , a48[ 7])) , details::maybe_genmask<stype>(a0(a1[ 8] , a2[ 8] , a3[ 8] , a4[ 8] , a5[ 8] , a6[ 8] , a7[ 8] , a8[ 8] , a9[ 8] , a10[ 8] , a11[ 8] , a12[ 8] , a13[ 8] , a14[ 8] , a15[ 8] , a16[ 8] , a17[ 8] , a18[ 8] , a19[ 8] , a20[ 8] , a21[ 8] , a22[ 8] , a23[ 8] , a24[ 8] , a25[ 8] , a26[ 8] , a27[ 8] , a28[ 8] , a29[ 8] , a30[ 8] , a31[ 8] , a32[ 8] , a33[ 8] , a34[ 8] , a35[ 8] , a36[ 8] , a37[ 8] , a38[ 8] , a39[ 8] , a40[ 8] , a41[ 8] , a42[ 8] , a43[ 8] , a44[ 8] , a45[ 8] , a46[ 8] , a47[ 8] , a48[ 8])) , details::maybe_genmask<stype>(a0(a1[ 9] , a2[ 9] , a3[ 9] , a4[ 9] , a5[ 9] , a6[ 9] , a7[ 9] , a8[ 9] , a9[ 9] , a10[ 9] , a11[ 9] , a12[ 9] , a13[ 9] , a14[ 9] , a15[ 9] , a16[ 9] , a17[ 9] , a18[ 9] , a19[ 9] , a20[ 9] , a21[ 9] , a22[ 9] , a23[ 9] , a24[ 9] , a25[ 9] , a26[ 9] , a27[ 9] , a28[ 9] , a29[ 9] , a30[ 9] , a31[ 9] , a32[ 9] , a33[ 9] , a34[ 9] , a35[ 9] , a36[ 9] , a37[ 9] , a38[ 9] , a39[ 9] , a40[ 9] , a41[ 9] , a42[ 9] , a43[ 9] , a44[ 9] , a45[ 9] , a46[ 9] , a47[ 9] , a48[ 9])) , details::maybe_genmask<stype>(a0(a1[ 10] , a2[ 10] , a3[ 10] , a4[ 10] , a5[ 10] , a6[ 10] , a7[ 10] , a8[ 10] , a9[ 10] , a10[ 10] , a11[ 10] , a12[ 10] , a13[ 10] , a14[ 10] , a15[ 10] , a16[ 10] , a17[ 10] , a18[ 10] , a19[ 10] , a20[ 10] , a21[ 10] , a22[ 10] , a23[ 10] , a24[ 10] , a25[ 10] , a26[ 10] , a27[ 10] , a28[ 10] , a29[ 10] , a30[ 10] , a31[ 10] , a32[ 10] , a33[ 10] , a34[ 10] , a35[ 10] , a36[ 10] , a37[ 10] , a38[ 10] , a39[ 10] , a40[ 10] , a41[ 10] , a42[ 10] , a43[ 10] , a44[ 10] , a45[ 10] , a46[ 10] , a47[ 10] , a48[ 10])) , details::maybe_genmask<stype>(a0(a1[ 11] , a2[ 11] , a3[ 11] , a4[ 11] , a5[ 11] , a6[ 11] , a7[ 11] , a8[ 11] , a9[ 11] , a10[ 11] , a11[ 11] , a12[ 11] , a13[ 11] , a14[ 11] , a15[ 11] , a16[ 11] , a17[ 11] , a18[ 11] , a19[ 11] , a20[ 11] , a21[ 11] , a22[ 11] , a23[ 11] , a24[ 11] , a25[ 11] , a26[ 11] , a27[ 11] , a28[ 11] , a29[ 11] , a30[ 11] , a31[ 11] , a32[ 11] , a33[ 11] , a34[ 11] , a35[ 11] , a36[ 11] , a37[ 11] , a38[ 11] , a39[ 11] , a40[ 11] , a41[ 11] , a42[ 11] , a43[ 11] , a44[ 11] , a45[ 11] , a46[ 11] , a47[ 11] , a48[ 11])) , details::maybe_genmask<stype>(a0(a1[ 12] , a2[ 12] , a3[ 12] , a4[ 12] , a5[ 12] , a6[ 12] , a7[ 12] , a8[ 12] , a9[ 12] , a10[ 12] , a11[ 12] , a12[ 12] , a13[ 12] , a14[ 12] , a15[ 12] , a16[ 12] , a17[ 12] , a18[ 12] , a19[ 12] , a20[ 12] , a21[ 12] , a22[ 12] , a23[ 12] , a24[ 12] , a25[ 12] , a26[ 12] , a27[ 12] , a28[ 12] , a29[ 12] , a30[ 12] , a31[ 12] , a32[ 12] , a33[ 12] , a34[ 12] , a35[ 12] , a36[ 12] , a37[ 12] , a38[ 12] , a39[ 12] , a40[ 12] , a41[ 12] , a42[ 12] , a43[ 12] , a44[ 12] , a45[ 12] , a46[ 12] , a47[ 12] , a48[ 12])) , details::maybe_genmask<stype>(a0(a1[ 13] , a2[ 13] , a3[ 13] , a4[ 13] , a5[ 13] , a6[ 13] , a7[ 13] , a8[ 13] , a9[ 13] , a10[ 13] , a11[ 13] , a12[ 13] , a13[ 13] , a14[ 13] , a15[ 13] , a16[ 13] , a17[ 13] , a18[ 13] , a19[ 13] , a20[ 13] , a21[ 13] , a22[ 13] , a23[ 13] , a24[ 13] , a25[ 13] , a26[ 13] , a27[ 13] , a28[ 13] , a29[ 13] , a30[ 13] , a31[ 13] , a32[ 13] , a33[ 13] , a34[ 13] , a35[ 13] , a36[ 13] , a37[ 13] , a38[ 13] , a39[ 13] , a40[ 13] , a41[ 13] , a42[ 13] , a43[ 13] , a44[ 13] , a45[ 13] , a46[ 13] , a47[ 13] , a48[ 13])) , details::maybe_genmask<stype>(a0(a1[ 14] , a2[ 14] , a3[ 14] , a4[ 14] , a5[ 14] , a6[ 14] , a7[ 14] , a8[ 14] , a9[ 14] , a10[ 14] , a11[ 14] , a12[ 14] , a13[ 14] , a14[ 14] , a15[ 14] , a16[ 14] , a17[ 14] , a18[ 14] , a19[ 14] , a20[ 14] , a21[ 14] , a22[ 14] , a23[ 14] , a24[ 14] , a25[ 14] , a26[ 14] , a27[ 14] , a28[ 14] , a29[ 14] , a30[ 14] , a31[ 14] , a32[ 14] , a33[ 14] , a34[ 14] , a35[ 14] , a36[ 14] , a37[ 14] , a38[ 14] , a39[ 14] , a40[ 14] , a41[ 14] , a42[ 14] , a43[ 14] , a44[ 14] , a45[ 14] , a46[ 14] , a47[ 14] , a48[ 14])) , details::maybe_genmask<stype>(a0(a1[ 15] , a2[ 15] , a3[ 15] , a4[ 15] , a5[ 15] , a6[ 15] , a7[ 15] , a8[ 15] , a9[ 15] , a10[ 15] , a11[ 15] , a12[ 15] , a13[ 15] , a14[ 15] , a15[ 15] , a16[ 15] , a17[ 15] , a18[ 15] , a19[ 15] , a20[ 15] , a21[ 15] , a22[ 15] , a23[ 15] , a24[ 15] , a25[ 15] , a26[ 15] , a27[ 15] , a28[ 15] , a29[ 15] , a30[ 15] , a31[ 15] , a32[ 15] , a33[ 15] , a34[ 15] , a35[ 15] , a36[ 15] , a37[ 15] , a38[ 15] , a39[ 15] , a40[ 15] , a41[ 15] , a42[ 15] , a43[ 15] , a44[ 15] , a45[ 15] , a46[ 15] , a47[ 15] , a48[ 15]))); } }; } } namespace nt2 { namespace meta { template<class Func , class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46 , class A47 , class A48> nt2::ext:: call< tag::map_(typename nt2::meta::unspecified_<Func>::type , typename nt2::meta::simd_<ints8_<A0>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A1>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A2>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A3>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A4>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A5>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A6>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A7>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A8>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A9>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A10>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A11>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A12>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A13>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A14>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A15>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A16>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A17>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A18>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A19>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A20>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A21>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A22>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A23>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A24>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A25>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A26>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A27>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A28>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A29>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A30>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A31>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A32>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A33>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A34>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A35>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A36>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A37>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A38>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A39>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A40>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A41>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A42>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A43>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A44>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A45>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A46>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A47>,tag::sse_>::type , typename nt2::meta::simd_< arithmetic_<A48>,tag::sse_>::type) , tag::cpu_ > dispatching( tag::map_ const&, tag::cpu_ const& , nt2::meta::unspecified_<Func> const& , nt2::meta::simd_<ints8_<A0>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A1>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A2>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A3>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A4>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A5>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A6>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A7>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A8>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A9>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A10>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A11>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A12>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A13>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A14>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A15>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A16>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A17>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A18>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A19>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A20>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A21>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A22>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A23>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A24>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A25>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A26>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A27>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A28>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A29>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A30>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A31>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A32>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A33>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A34>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A35>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A36>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A37>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A38>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A39>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A40>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A41>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A42>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A43>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A44>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A45>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A46>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A47>,tag::sse_> const& , nt2::meta::simd_< arithmetic_<A48>,tag::sse_> const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace ext { template<class Dummy> struct call < tag::map_ ( tag::unspecified_ , tag::simd_< tag::ints8_ , tag::sse_ > ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ,tag::simd_<tag::arithmetic_,tag::sse_> ) , tag::cpu_ , Dummy> : callable { template<class Sig> struct result; template<class This,class Func,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46 , class A47 , class A48> struct result<This(Func, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46 , A47 , A48)> { typedef typename meta:: result_of< typename meta:: strip<Func>::type const( typename meta::scalar_of<A0>::type , typename meta::scalar_of<A1>::type , typename meta::scalar_of<A2>::type , typename meta::scalar_of<A3>::type , typename meta::scalar_of<A4>::type , typename meta::scalar_of<A5>::type , typename meta::scalar_of<A6>::type , typename meta::scalar_of<A7>::type , typename meta::scalar_of<A8>::type , typename meta::scalar_of<A9>::type , typename meta::scalar_of<A10>::type , typename meta::scalar_of<A11>::type , typename meta::scalar_of<A12>::type , typename meta::scalar_of<A13>::type , typename meta::scalar_of<A14>::type , typename meta::scalar_of<A15>::type , typename meta::scalar_of<A16>::type , typename meta::scalar_of<A17>::type , typename meta::scalar_of<A18>::type , typename meta::scalar_of<A19>::type , typename meta::scalar_of<A20>::type , typename meta::scalar_of<A21>::type , typename meta::scalar_of<A22>::type , typename meta::scalar_of<A23>::type , typename meta::scalar_of<A24>::type , typename meta::scalar_of<A25>::type , typename meta::scalar_of<A26>::type , typename meta::scalar_of<A27>::type , typename meta::scalar_of<A28>::type , typename meta::scalar_of<A29>::type , typename meta::scalar_of<A30>::type , typename meta::scalar_of<A31>::type , typename meta::scalar_of<A32>::type , typename meta::scalar_of<A33>::type , typename meta::scalar_of<A34>::type , typename meta::scalar_of<A35>::type , typename meta::scalar_of<A36>::type , typename meta::scalar_of<A37>::type , typename meta::scalar_of<A38>::type , typename meta::scalar_of<A39>::type , typename meta::scalar_of<A40>::type , typename meta::scalar_of<A41>::type , typename meta::scalar_of<A42>::type , typename meta::scalar_of<A43>::type , typename meta::scalar_of<A44>::type , typename meta::scalar_of<A45>::type , typename meta::scalar_of<A46>::type , typename meta::scalar_of<A47>::type , typename meta::scalar_of<A48>::type ) >::type rtype; typedef typename details:: as_native< Func , rtype , typename meta::scalar_of<A0>::type >::type stype; typedef simd::native<stype, tag::sse_> type; }; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46 , class A47 , class A48 , class A49> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const& , A41 const& , A42 const& , A43 const& , A44 const& , A45 const& , A46 const& , A47 const& , A48 const& , A49 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 , A41 const& a41 , A42 const& a42 , A43 const& a43 , A44 const& a44 , A45 const& a45 , A46 const& a46 , A47 const& a47 , A48 const& a48 , A49 const& a49 ) const { typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46 , A47 , A48 , A49)>::type ntype; typedef typename result<call(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46 , A47 , A48 , A49)>::stype stype; return make<ntype>(details::maybe_genmask<stype>(a0(a1[ 0] , a2[ 0] , a3[ 0] , a4[ 0] , a5[ 0] , a6[ 0] , a7[ 0] , a8[ 0] , a9[ 0] , a10[ 0] , a11[ 0] , a12[ 0] , a13[ 0] , a14[ 0] , a15[ 0] , a16[ 0] , a17[ 0] , a18[ 0] , a19[ 0] , a20[ 0] , a21[ 0] , a22[ 0] , a23[ 0] , a24[ 0] , a25[ 0] , a26[ 0] , a27[ 0] , a28[ 0] , a29[ 0] , a30[ 0] , a31[ 0] , a32[ 0] , a33[ 0] , a34[ 0] , a35[ 0] , a36[ 0] , a37[ 0] , a38[ 0] , a39[ 0] , a40[ 0] , a41[ 0] , a42[ 0] , a43[ 0] , a44[ 0] , a45[ 0] , a46[ 0] , a47[ 0] , a48[ 0] , a49[ 0])) , details::maybe_genmask<stype>(a0(a1[ 1] , a2[ 1] , a3[ 1] , a4[ 1] , a5[ 1] , a6[ 1] , a7[ 1] , a8[ 1] , a9[ 1] , a10[ 1] , a11[ 1] , a12[ 1] , a13[ 1] , a14[ 1] , a15[ 1] , a16[ 1] , a17[ 1] , a18[ 1] , a19[ 1] , a20[ 1] , a21[ 1] , a22[ 1] , a23[ 1] , a24[ 1] , a25[ 1] , a26[ 1] , a27[ 1] , a28[ 1] , a29[ 1] , a30[ 1] , a31[ 1] , a32[ 1] , a33[ 1] , a34[ 1] , a35[ 1] , a36[ 1] , a37[ 1] , a38[ 1] , a39[ 1] , a40[ 1] , a41[ 1] , a42[ 1] , a43[ 1] , a44[ 1] , a45[ 1] , a46[ 1] , a47[ 1] , a48[ 1] , a49[ 1])) , details::maybe_genmask<stype>(a0(a1[ 2] , a2[ 2] , a3[ 2] , a4[ 2] , a5[ 2] , a6[ 2] , a7[ 2] , a8[ 2] , a9[ 2] , a10[ 2] , a11[ 2] , a12[ 2] , a13[ 2] , a14[ 2] , a15[ 2] , a16[ 2] , a17[ 2] , a18[ 2] , a19[ 2] , a20[ 2] , a21[ 2] , a22[ 2] , a23[ 2] , a24[ 2] , a25[ 2] , a26[ 2] , a27[ 2] , a28[ 2] , a29[ 2] , a30[ 2] , a31[ 2] , a32[ 2] , a33[ 2] , a34[ 2] , a35[ 2] , a36[ 2] , a37[ 2] , a38[ 2] , a39[ 2] , a40[ 2] , a41[ 2] , a42[ 2] , a43[ 2] , a44[ 2] , a45[ 2] , a46[ 2] , a47[ 2] , a48[ 2] , a49[ 2])) , details::maybe_genmask<stype>(a0(a1[ 3] , a2[ 3] , a3[ 3] , a4[ 3] , a5[ 3] , a6[ 3] , a7[ 3] , a8[ 3] , a9[ 3] , a10[ 3] , a11[ 3] , a12[ 3] , a13[ 3] , a14[ 3] , a15[ 3] , a16[ 3] , a17[ 3] , a18[ 3] , a19[ 3] , a20[ 3] , a21[ 3] , a22[ 3] , a23[ 3] , a24[ 3] , a25[ 3] , a26[ 3] , a27[ 3] , a28[ 3] , a29[ 3] , a30[ 3] , a31[ 3] , a32[ 3] , a33[ 3] , a34[ 3] , a35[ 3] , a36[ 3] , a37[ 3] , a38[ 3] , a39[ 3] , a40[ 3] , a41[ 3] , a42[ 3] , a43[ 3] , a44[ 3] , a45[ 3] , a46[ 3] , a47[ 3] , a48[ 3] , a49[ 3])) , details::maybe_genmask<stype>(a0(a1[ 4] , a2[ 4] , a3[ 4] , a4[ 4] , a5[ 4] , a6[ 4] , a7[ 4] , a8[ 4] , a9[ 4] , a10[ 4] , a11[ 4] , a12[ 4] , a13[ 4] , a14[ 4] , a15[ 4] , a16[ 4] , a17[ 4] , a18[ 4] , a19[ 4] , a20[ 4] , a21[ 4] , a22[ 4] , a23[ 4] , a24[ 4] , a25[ 4] , a26[ 4] , a27[ 4] , a28[ 4] , a29[ 4] , a30[ 4] , a31[ 4] , a32[ 4] , a33[ 4] , a34[ 4] , a35[ 4] , a36[ 4] , a37[ 4] , a38[ 4] , a39[ 4] , a40[ 4] , a41[ 4] , a42[ 4] , a43[ 4] , a44[ 4] , a45[ 4] , a46[ 4] , a47[ 4] , a48[ 4] , a49[ 4])) , details::maybe_genmask<stype>(a0(a1[ 5] , a2[ 5] , a3[ 5] , a4[ 5] , a5[ 5] , a6[ 5] , a7[ 5] , a8[ 5] , a9[ 5] , a10[ 5] , a11[ 5] , a12[ 5] , a13[ 5] , a14[ 5] , a15[ 5] , a16[ 5] , a17[ 5] , a18[ 5] , a19[ 5] , a20[ 5] , a21[ 5] , a22[ 5] , a23[ 5] , a24[ 5] , a25[ 5] , a26[ 5] , a27[ 5] , a28[ 5] , a29[ 5] , a30[ 5] , a31[ 5] , a32[ 5] , a33[ 5] , a34[ 5] , a35[ 5] , a36[ 5] , a37[ 5] , a38[ 5] , a39[ 5] , a40[ 5] , a41[ 5] , a42[ 5] , a43[ 5] , a44[ 5] , a45[ 5] , a46[ 5] , a47[ 5] , a48[ 5] , a49[ 5])) , details::maybe_genmask<stype>(a0(a1[ 6] , a2[ 6] , a3[ 6] , a4[ 6] , a5[ 6] , a6[ 6] , a7[ 6] , a8[ 6] , a9[ 6] , a10[ 6] , a11[ 6] , a12[ 6] , a13[ 6] , a14[ 6] , a15[ 6] , a16[ 6] , a17[ 6] , a18[ 6] , a19[ 6] , a20[ 6] , a21[ 6] , a22[ 6] , a23[ 6] , a24[ 6] , a25[ 6] , a26[ 6] , a27[ 6] , a28[ 6] , a29[ 6] , a30[ 6] , a31[ 6] , a32[ 6] , a33[ 6] , a34[ 6] , a35[ 6] , a36[ 6] , a37[ 6] , a38[ 6] , a39[ 6] , a40[ 6] , a41[ 6] , a42[ 6] , a43[ 6] , a44[ 6] , a45[ 6] , a46[ 6] , a47[ 6] , a48[ 6] , a49[ 6])) , details::maybe_genmask<stype>(a0(a1[ 7] , a2[ 7] , a3[ 7] , a4[ 7] , a5[ 7] , a6[ 7] , a7[ 7] , a8[ 7] , a9[ 7] , a10[ 7] , a11[ 7] , a12[ 7] , a13[ 7] , a14[ 7] , a15[ 7] , a16[ 7] , a17[ 7] , a18[ 7] , a19[ 7] , a20[ 7] , a21[ 7] , a22[ 7] , a23[ 7] , a24[ 7] , a25[ 7] , a26[ 7] , a27[ 7] , a28[ 7] , a29[ 7] , a30[ 7] , a31[ 7] , a32[ 7] , a33[ 7] , a34[ 7] , a35[ 7] , a36[ 7] , a37[ 7] , a38[ 7] , a39[ 7] , a40[ 7] , a41[ 7] , a42[ 7] , a43[ 7] , a44[ 7] , a45[ 7] , a46[ 7] , a47[ 7] , a48[ 7] , a49[ 7])) , details::maybe_genmask<stype>(a0(a1[ 8] , a2[ 8] , a3[ 8] , a4[ 8] , a5[ 8] , a6[ 8] , a7[ 8] , a8[ 8] , a9[ 8] , a10[ 8] , a11[ 8] , a12[ 8] , a13[ 8] , a14[ 8] , a15[ 8] , a16[ 8] , a17[ 8] , a18[ 8] , a19[ 8] , a20[ 8] , a21[ 8] , a22[ 8] , a23[ 8] , a24[ 8] , a25[ 8] , a26[ 8] , a27[ 8] , a28[ 8] , a29[ 8] , a30[ 8] , a31[ 8] , a32[ 8] , a33[ 8] , a34[ 8] , a35[ 8] , a36[ 8] , a37[ 8] , a38[ 8] , a39[ 8] , a40[ 8] , a41[ 8] , a42[ 8] , a43[ 8] , a44[ 8] , a45[ 8] , a46[ 8] , a47[ 8] , a48[ 8] , a49[ 8])) , details::maybe_genmask<stype>(a0(a1[ 9] , a2[ 9] , a3[ 9] , a4[ 9] , a5[ 9] , a6[ 9] , a7[ 9] , a8[ 9] , a9[ 9] , a10[ 9] , a11[ 9] , a12[ 9] , a13[ 9] , a14[ 9] , a15[ 9] , a16[ 9] , a17[ 9] , a18[ 9] , a19[ 9] , a20[ 9] , a21[ 9] , a22[ 9] , a23[ 9] , a24[ 9] , a25[ 9] , a26[ 9] , a27[ 9] , a28[ 9] , a29[ 9] , a30[ 9] , a31[ 9] , a32[ 9] , a33[ 9] , a34[ 9] , a35[ 9] , a36[ 9] , a37[ 9] , a38[ 9] , a39[ 9] , a40[ 9] , a41[ 9] , a42[ 9] , a43[ 9] , a44[ 9] , a45[ 9] , a46[ 9] , a47[ 9] , a48[ 9] , a49[ 9])) , details::maybe_genmask<stype>(a0(a1[ 10] , a2[ 10] , a3[ 10] , a4[ 10] , a5[ 10] , a6[ 10] , a7[ 10] , a8[ 10] , a9[ 10] , a10[ 10] , a11[ 10] , a12[ 10] , a13[ 10] , a14[ 10] , a15[ 10] , a16[ 10] , a17[ 10] , a18[ 10] , a19[ 10] , a20[ 10] , a21[ 10] , a22[ 10] , a23[ 10] , a24[ 10] , a25[ 10] , a26[ 10] , a27[ 10] , a28[ 10] , a29[ 10] , a30[ 10] , a31[ 10] , a32[ 10] , a33[ 10] , a34[ 10] , a35[ 10] , a36[ 10] , a37[ 10] , a38[ 10] , a39[ 10] , a40[ 10] , a41[ 10] , a42[ 10] , a43[ 10] , a44[ 10] , a45[ 10] , a46[ 10] , a47[ 10] , a48[ 10] , a49[ 10])) , details::maybe_genmask<stype>(a0(a1[ 11] , a2[ 11] , a3[ 11] , a4[ 11] , a5[ 11] , a6[ 11] , a7[ 11] , a8[ 11] , a9[ 11] , a10[ 11] , a11[ 11] , a12[ 11] , a13[ 11] , a14[ 11] , a15[ 11] , a16[ 11] , a17[ 11] , a18[ 11] , a19[ 11] , a20[ 11] , a21[ 11] , a22[ 11] , a23[ 11] , a24[ 11] , a25[ 11] , a26[ 11] , a27[ 11] , a28[ 11] , a29[ 11] , a30[ 11] , a31[ 11] , a32[ 11] , a33[ 11] , a34[ 11] , a35[ 11] , a36[ 11] , a37[ 11] , a38[ 11] , a39[ 11] , a40[ 11] , a41[ 11] , a42[ 11] , a43[ 11] , a44[ 11] , a45[ 11] , a46[ 11] , a47[ 11] , a48[ 11] , a49[ 11])) , details::maybe_genmask<stype>(a0(a1[ 12] , a2[ 12] , a3[ 12] , a4[ 12] , a5[ 12] , a6[ 12] , a7[ 12] , a8[ 12] , a9[ 12] , a10[ 12] , a11[ 12] , a12[ 12] , a13[ 12] , a14[ 12] , a15[ 12] , a16[ 12] , a17[ 12] , a18[ 12] , a19[ 12] , a20[ 12] , a21[ 12] , a22[ 12] , a23[ 12] , a24[ 12] , a25[ 12] , a26[ 12] , a27[ 12] , a28[ 12] , a29[ 12] , a30[ 12] , a31[ 12] , a32[ 12] , a33[ 12] , a34[ 12] , a35[ 12] , a36[ 12] , a37[ 12] , a38[ 12] , a39[ 12] , a40[ 12] , a41[ 12] , a42[ 12] , a43[ 12] , a44[ 12] , a45[ 12] , a46[ 12] , a47[ 12] , a48[ 12] , a49[ 12])) , details::maybe_genmask<stype>(a0(a1[ 13] , a2[ 13] , a3[ 13] , a4[ 13] , a5[ 13] , a6[ 13] , a7[ 13] , a8[ 13] , a9[ 13] , a10[ 13] , a11[ 13] , a12[ 13] , a13[ 13] , a14[ 13] , a15[ 13] , a16[ 13] , a17[ 13] , a18[ 13] , a19[ 13] , a20[ 13] , a21[ 13] , a22[ 13] , a23[ 13] , a24[ 13] , a25[ 13] , a26[ 13] , a27[ 13] , a28[ 13] , a29[ 13] , a30[ 13] , a31[ 13] , a32[ 13] , a33[ 13] , a34[ 13] , a35[ 13] , a36[ 13] , a37[ 13] , a38[ 13] , a39[ 13] , a40[ 13] , a41[ 13] , a42[ 13] , a43[ 13] , a44[ 13] , a45[ 13] , a46[ 13] , a47[ 13] , a48[ 13] , a49[ 13])) , details::maybe_genmask<stype>(a0(a1[ 14] , a2[ 14] , a3[ 14] , a4[ 14] , a5[ 14] , a6[ 14] , a7[ 14] , a8[ 14] , a9[ 14] , a10[ 14] , a11[ 14] , a12[ 14] , a13[ 14] , a14[ 14] , a15[ 14] , a16[ 14] , a17[ 14] , a18[ 14] , a19[ 14] , a20[ 14] , a21[ 14] , a22[ 14] , a23[ 14] , a24[ 14] , a25[ 14] , a26[ 14] , a27[ 14] , a28[ 14] , a29[ 14] , a30[ 14] , a31[ 14] , a32[ 14] , a33[ 14] , a34[ 14] , a35[ 14] , a36[ 14] , a37[ 14] , a38[ 14] , a39[ 14] , a40[ 14] , a41[ 14] , a42[ 14] , a43[ 14] , a44[ 14] , a45[ 14] , a46[ 14] , a47[ 14] , a48[ 14] , a49[ 14])) , details::maybe_genmask<stype>(a0(a1[ 15] , a2[ 15] , a3[ 15] , a4[ 15] , a5[ 15] , a6[ 15] , a7[ 15] , a8[ 15] , a9[ 15] , a10[ 15] , a11[ 15] , a12[ 15] , a13[ 15] , a14[ 15] , a15[ 15] , a16[ 15] , a17[ 15] , a18[ 15] , a19[ 15] , a20[ 15] , a21[ 15] , a22[ 15] , a23[ 15] , a24[ 15] , a25[ 15] , a26[ 15] , a27[ 15] , a28[ 15] , a29[ 15] , a30[ 15] , a31[ 15] , a32[ 15] , a33[ 15] , a34[ 15] , a35[ 15] , a36[ 15] , a37[ 15] , a38[ 15] , a39[ 15] , a40[ 15] , a41[ 15] , a42[ 15] , a43[ 15] , a44[ 15] , a45[ 15] , a46[ 15] , a47[ 15] , a48[ 15] , a49[ 15]))); } }; } }
