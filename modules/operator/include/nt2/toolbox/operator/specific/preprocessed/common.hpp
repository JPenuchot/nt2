////////////////////////////////////////////////////////////////////////////////
// Register all tag and extension agnostic call for common code sharing
////////////////////////////////////////////////////////////////////////////////
namespace nt2 { namespace meta { template<class A0 , class Tag , class X> nt2::ext:: call< Tag(typename nt2::meta::simd_< unspecified_<A0>, X >::type) , tag::cpu_ > dispatching( Tag const&, tag::cpu_ const& , nt2::meta::simd_< unspecified_<A0>, X > const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace meta { template<class A0 , class Tag , class X> nt2::ext:: call< Tag(typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type) , tag::cpu_ > dispatching( Tag const&, tag::cpu_ const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace meta { template<class A0 , class Tag , class X> nt2::ext:: call< Tag(typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type) , tag::cpu_ > dispatching( Tag const&, tag::cpu_ const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace meta { template<class A0 , class Tag , class X> nt2::ext:: call< Tag(typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type) , tag::cpu_ > dispatching( Tag const&, tag::cpu_ const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace meta { template<class A0 , class Tag , class X> nt2::ext:: call< Tag(typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type) , tag::cpu_ > dispatching( Tag const&, tag::cpu_ const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace meta { template<class A0 , class Tag , class X> nt2::ext:: call< Tag(typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type) , tag::cpu_ > dispatching( Tag const&, tag::cpu_ const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace meta { template<class A0 , class Tag , class X> nt2::ext:: call< Tag(typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type) , tag::cpu_ > dispatching( Tag const&, tag::cpu_ const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace meta { template<class A0 , class Tag , class X> nt2::ext:: call< Tag(typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type) , tag::cpu_ > dispatching( Tag const&, tag::cpu_ const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace meta { template<class A0 , class Tag , class X> nt2::ext:: call< Tag(typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type) , tag::cpu_ > dispatching( Tag const&, tag::cpu_ const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace meta { template<class A0 , class Tag , class X> nt2::ext:: call< Tag(typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type) , tag::cpu_ > dispatching( Tag const&, tag::cpu_ const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace meta { template<class A0 , class Tag , class X> nt2::ext:: call< Tag(typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type) , tag::cpu_ > dispatching( Tag const&, tag::cpu_ const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace meta { template<class A0 , class Tag , class X> nt2::ext:: call< Tag(typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type) , tag::cpu_ > dispatching( Tag const&, tag::cpu_ const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace meta { template<class A0 , class Tag , class X> nt2::ext:: call< Tag(typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type) , tag::cpu_ > dispatching( Tag const&, tag::cpu_ const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace meta { template<class A0 , class Tag , class X> nt2::ext:: call< Tag(typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type) , tag::cpu_ > dispatching( Tag const&, tag::cpu_ const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace meta { template<class A0 , class Tag , class X> nt2::ext:: call< Tag(typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type) , tag::cpu_ > dispatching( Tag const&, tag::cpu_ const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace meta { template<class A0 , class Tag , class X> nt2::ext:: call< Tag(typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type) , tag::cpu_ > dispatching( Tag const&, tag::cpu_ const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace meta { template<class A0 , class Tag , class X> nt2::ext:: call< Tag(typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type) , tag::cpu_ > dispatching( Tag const&, tag::cpu_ const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace meta { template<class A0 , class Tag , class X> nt2::ext:: call< Tag(typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type) , tag::cpu_ > dispatching( Tag const&, tag::cpu_ const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace meta { template<class A0 , class Tag , class X> nt2::ext:: call< Tag(typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type) , tag::cpu_ > dispatching( Tag const&, tag::cpu_ const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace meta { template<class A0 , class Tag , class X> nt2::ext:: call< Tag(typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type) , tag::cpu_ > dispatching( Tag const&, tag::cpu_ const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace meta { template<class A0 , class Tag , class X> nt2::ext:: call< Tag(typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type) , tag::cpu_ > dispatching( Tag const&, tag::cpu_ const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace meta { template<class A0 , class Tag , class X> nt2::ext:: call< Tag(typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type) , tag::cpu_ > dispatching( Tag const&, tag::cpu_ const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace meta { template<class A0 , class Tag , class X> nt2::ext:: call< Tag(typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type) , tag::cpu_ > dispatching( Tag const&, tag::cpu_ const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace meta { template<class A0 , class Tag , class X> nt2::ext:: call< Tag(typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type) , tag::cpu_ > dispatching( Tag const&, tag::cpu_ const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace meta { template<class A0 , class Tag , class X> nt2::ext:: call< Tag(typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type) , tag::cpu_ > dispatching( Tag const&, tag::cpu_ const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace meta { template<class A0 , class Tag , class X> nt2::ext:: call< Tag(typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type) , tag::cpu_ > dispatching( Tag const&, tag::cpu_ const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace meta { template<class A0 , class Tag , class X> nt2::ext:: call< Tag(typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type) , tag::cpu_ > dispatching( Tag const&, tag::cpu_ const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace meta { template<class A0 , class Tag , class X> nt2::ext:: call< Tag(typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type) , tag::cpu_ > dispatching( Tag const&, tag::cpu_ const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace meta { template<class A0 , class Tag , class X> nt2::ext:: call< Tag(typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type) , tag::cpu_ > dispatching( Tag const&, tag::cpu_ const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace meta { template<class A0 , class Tag , class X> nt2::ext:: call< Tag(typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type) , tag::cpu_ > dispatching( Tag const&, tag::cpu_ const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace meta { template<class A0 , class Tag , class X> nt2::ext:: call< Tag(typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type) , tag::cpu_ > dispatching( Tag const&, tag::cpu_ const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace meta { template<class A0 , class Tag , class X> nt2::ext:: call< Tag(typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type) , tag::cpu_ > dispatching( Tag const&, tag::cpu_ const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace meta { template<class A0 , class Tag , class X> nt2::ext:: call< Tag(typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type) , tag::cpu_ > dispatching( Tag const&, tag::cpu_ const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace meta { template<class A0 , class Tag , class X> nt2::ext:: call< Tag(typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type) , tag::cpu_ > dispatching( Tag const&, tag::cpu_ const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace meta { template<class A0 , class Tag , class X> nt2::ext:: call< Tag(typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type) , tag::cpu_ > dispatching( Tag const&, tag::cpu_ const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace meta { template<class A0 , class Tag , class X> nt2::ext:: call< Tag(typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type) , tag::cpu_ > dispatching( Tag const&, tag::cpu_ const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace meta { template<class A0 , class Tag , class X> nt2::ext:: call< Tag(typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type) , tag::cpu_ > dispatching( Tag const&, tag::cpu_ const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace meta { template<class A0 , class Tag , class X> nt2::ext:: call< Tag(typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type) , tag::cpu_ > dispatching( Tag const&, tag::cpu_ const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace meta { template<class A0 , class Tag , class X> nt2::ext:: call< Tag(typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type) , tag::cpu_ > dispatching( Tag const&, tag::cpu_ const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace meta { template<class A0 , class Tag , class X> nt2::ext:: call< Tag(typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type) , tag::cpu_ > dispatching( Tag const&, tag::cpu_ const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace meta { template<class A0 , class Tag , class X> nt2::ext:: call< Tag(typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type) , tag::cpu_ > dispatching( Tag const&, tag::cpu_ const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace meta { template<class A0 , class Tag , class X> nt2::ext:: call< Tag(typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type) , tag::cpu_ > dispatching( Tag const&, tag::cpu_ const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace meta { template<class A0 , class Tag , class X> nt2::ext:: call< Tag(typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type) , tag::cpu_ > dispatching( Tag const&, tag::cpu_ const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace meta { template<class A0 , class Tag , class X> nt2::ext:: call< Tag(typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type) , tag::cpu_ > dispatching( Tag const&, tag::cpu_ const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace meta { template<class A0 , class Tag , class X> nt2::ext:: call< Tag(typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type) , tag::cpu_ > dispatching( Tag const&, tag::cpu_ const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace meta { template<class A0 , class Tag , class X> nt2::ext:: call< Tag(typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type) , tag::cpu_ > dispatching( Tag const&, tag::cpu_ const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace meta { template<class A0 , class Tag , class X> nt2::ext:: call< Tag(typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type) , tag::cpu_ > dispatching( Tag const&, tag::cpu_ const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace meta { template<class A0 , class Tag , class X> nt2::ext:: call< Tag(typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type) , tag::cpu_ > dispatching( Tag const&, tag::cpu_ const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace meta { template<class A0 , class Tag , class X> nt2::ext:: call< Tag(typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type) , tag::cpu_ > dispatching( Tag const&, tag::cpu_ const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , adl_helper = adl_helper() ); } } namespace nt2 { namespace meta { template<class A0 , class Tag , class X> nt2::ext:: call< Tag(typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type , typename nt2::meta::simd_< unspecified_<A0>, X >::type) , tag::cpu_ > dispatching( Tag const&, tag::cpu_ const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , nt2::meta::simd_< unspecified_<A0>, X > const& , adl_helper = adl_helper() ); } }
////////////////////////////////////////////////////////////////////////////////
// Generate all the common map calls over Tag using nt2::map
////////////////////////////////////////////////////////////////////////////////
namespace nt2 { namespace ext { template<class Tag, class X, class Dummy> struct call<Tag( tag::simd_<tag::unspecified_,X> ), tag::cpu_, Dummy> : callable { template<class Sig> struct result; template<class This,class A0> struct result<This(A0)> : meta::call<tag::map_(functor<Tag>, A0)> {}; template<class A0> inline typename meta::result_of<call(A0 const&)>::type operator()( A0 const& a0 ) const { return nt2::map( functor<Tag>(), a0); } }; } } namespace nt2 { namespace ext { template<class Tag, class X, class Dummy> struct call<Tag( tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> ), tag::cpu_, Dummy> : callable { template<class Sig> struct result; template<class This,class A0 , class A1> struct result<This(A0 , A1)> : meta::call<tag::map_(functor<Tag>, A0 , A1)> {}; template<class A0 , class A1> inline typename meta::result_of<call(A0 const& , A1 const&)>::type operator()( A0 const& a0 , A1 const& a1 ) const { return nt2::map( functor<Tag>(), a0 , a1); } }; } } namespace nt2 { namespace ext { template<class Tag, class X, class Dummy> struct call<Tag( tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> ), tag::cpu_, Dummy> : callable { template<class Sig> struct result; template<class This,class A0 , class A1 , class A2> struct result<This(A0 , A1 , A2)> : meta::call<tag::map_(functor<Tag>, A0 , A1 , A2)> {}; template<class A0 , class A1 , class A2> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 ) const { return nt2::map( functor<Tag>(), a0 , a1 , a2); } }; } } namespace nt2 { namespace ext { template<class Tag, class X, class Dummy> struct call<Tag( tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> ), tag::cpu_, Dummy> : callable { template<class Sig> struct result; template<class This,class A0 , class A1 , class A2 , class A3> struct result<This(A0 , A1 , A2 , A3)> : meta::call<tag::map_(functor<Tag>, A0 , A1 , A2 , A3)> {}; template<class A0 , class A1 , class A2 , class A3> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 ) const { return nt2::map( functor<Tag>(), a0 , a1 , a2 , a3); } }; } } namespace nt2 { namespace ext { template<class Tag, class X, class Dummy> struct call<Tag( tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> ), tag::cpu_, Dummy> : callable { template<class Sig> struct result; template<class This,class A0 , class A1 , class A2 , class A3 , class A4> struct result<This(A0 , A1 , A2 , A3 , A4)> : meta::call<tag::map_(functor<Tag>, A0 , A1 , A2 , A3 , A4)> {}; template<class A0 , class A1 , class A2 , class A3 , class A4> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 ) const { return nt2::map( functor<Tag>(), a0 , a1 , a2 , a3 , a4); } }; } } namespace nt2 { namespace ext { template<class Tag, class X, class Dummy> struct call<Tag( tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> ), tag::cpu_, Dummy> : callable { template<class Sig> struct result; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5> struct result<This(A0 , A1 , A2 , A3 , A4 , A5)> : meta::call<tag::map_(functor<Tag>, A0 , A1 , A2 , A3 , A4 , A5)> {}; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 ) const { return nt2::map( functor<Tag>(), a0 , a1 , a2 , a3 , a4 , a5); } }; } } namespace nt2 { namespace ext { template<class Tag, class X, class Dummy> struct call<Tag( tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> ), tag::cpu_, Dummy> : callable { template<class Sig> struct result; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6)> : meta::call<tag::map_(functor<Tag>, A0 , A1 , A2 , A3 , A4 , A5 , A6)> {}; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 ) const { return nt2::map( functor<Tag>(), a0 , a1 , a2 , a3 , a4 , a5 , a6); } }; } } namespace nt2 { namespace ext { template<class Tag, class X, class Dummy> struct call<Tag( tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> ), tag::cpu_, Dummy> : callable { template<class Sig> struct result; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7)> : meta::call<tag::map_(functor<Tag>, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7)> {}; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 ) const { return nt2::map( functor<Tag>(), a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7); } }; } } namespace nt2 { namespace ext { template<class Tag, class X, class Dummy> struct call<Tag( tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> ), tag::cpu_, Dummy> : callable { template<class Sig> struct result; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8)> : meta::call<tag::map_(functor<Tag>, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8)> {}; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 ) const { return nt2::map( functor<Tag>(), a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8); } }; } } namespace nt2 { namespace ext { template<class Tag, class X, class Dummy> struct call<Tag( tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> ), tag::cpu_, Dummy> : callable { template<class Sig> struct result; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9)> : meta::call<tag::map_(functor<Tag>, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9)> {}; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 ) const { return nt2::map( functor<Tag>(), a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9); } }; } } namespace nt2 { namespace ext { template<class Tag, class X, class Dummy> struct call<Tag( tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> ), tag::cpu_, Dummy> : callable { template<class Sig> struct result; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10)> : meta::call<tag::map_(functor<Tag>, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10)> {}; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 ) const { return nt2::map( functor<Tag>(), a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10); } }; } } namespace nt2 { namespace ext { template<class Tag, class X, class Dummy> struct call<Tag( tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> ), tag::cpu_, Dummy> : callable { template<class Sig> struct result; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11)> : meta::call<tag::map_(functor<Tag>, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11)> {}; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 ) const { return nt2::map( functor<Tag>(), a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11); } }; } } namespace nt2 { namespace ext { template<class Tag, class X, class Dummy> struct call<Tag( tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> ), tag::cpu_, Dummy> : callable { template<class Sig> struct result; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12)> : meta::call<tag::map_(functor<Tag>, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12)> {}; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 ) const { return nt2::map( functor<Tag>(), a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11 , a12); } }; } } namespace nt2 { namespace ext { template<class Tag, class X, class Dummy> struct call<Tag( tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> ), tag::cpu_, Dummy> : callable { template<class Sig> struct result; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13)> : meta::call<tag::map_(functor<Tag>, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13)> {}; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 ) const { return nt2::map( functor<Tag>(), a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11 , a12 , a13); } }; } } namespace nt2 { namespace ext { template<class Tag, class X, class Dummy> struct call<Tag( tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> ), tag::cpu_, Dummy> : callable { template<class Sig> struct result; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14)> : meta::call<tag::map_(functor<Tag>, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14)> {}; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 ) const { return nt2::map( functor<Tag>(), a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11 , a12 , a13 , a14); } }; } } namespace nt2 { namespace ext { template<class Tag, class X, class Dummy> struct call<Tag( tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> ), tag::cpu_, Dummy> : callable { template<class Sig> struct result; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15)> : meta::call<tag::map_(functor<Tag>, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15)> {}; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 ) const { return nt2::map( functor<Tag>(), a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11 , a12 , a13 , a14 , a15); } }; } } namespace nt2 { namespace ext { template<class Tag, class X, class Dummy> struct call<Tag( tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> ), tag::cpu_, Dummy> : callable { template<class Sig> struct result; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16)> : meta::call<tag::map_(functor<Tag>, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16)> {}; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 ) const { return nt2::map( functor<Tag>(), a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11 , a12 , a13 , a14 , a15 , a16); } }; } } namespace nt2 { namespace ext { template<class Tag, class X, class Dummy> struct call<Tag( tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> ), tag::cpu_, Dummy> : callable { template<class Sig> struct result; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17)> : meta::call<tag::map_(functor<Tag>, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17)> {}; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 ) const { return nt2::map( functor<Tag>(), a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11 , a12 , a13 , a14 , a15 , a16 , a17); } }; } } namespace nt2 { namespace ext { template<class Tag, class X, class Dummy> struct call<Tag( tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> ), tag::cpu_, Dummy> : callable { template<class Sig> struct result; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18)> : meta::call<tag::map_(functor<Tag>, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18)> {}; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 ) const { return nt2::map( functor<Tag>(), a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11 , a12 , a13 , a14 , a15 , a16 , a17 , a18); } }; } } namespace nt2 { namespace ext { template<class Tag, class X, class Dummy> struct call<Tag( tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> ), tag::cpu_, Dummy> : callable { template<class Sig> struct result; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19)> : meta::call<tag::map_(functor<Tag>, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19)> {}; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 ) const { return nt2::map( functor<Tag>(), a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11 , a12 , a13 , a14 , a15 , a16 , a17 , a18 , a19); } }; } } namespace nt2 { namespace ext { template<class Tag, class X, class Dummy> struct call<Tag( tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> ), tag::cpu_, Dummy> : callable { template<class Sig> struct result; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20)> : meta::call<tag::map_(functor<Tag>, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20)> {}; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 ) const { return nt2::map( functor<Tag>(), a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11 , a12 , a13 , a14 , a15 , a16 , a17 , a18 , a19 , a20); } }; } } namespace nt2 { namespace ext { template<class Tag, class X, class Dummy> struct call<Tag( tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> ), tag::cpu_, Dummy> : callable { template<class Sig> struct result; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21)> : meta::call<tag::map_(functor<Tag>, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21)> {}; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 ) const { return nt2::map( functor<Tag>(), a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11 , a12 , a13 , a14 , a15 , a16 , a17 , a18 , a19 , a20 , a21); } }; } } namespace nt2 { namespace ext { template<class Tag, class X, class Dummy> struct call<Tag( tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> ), tag::cpu_, Dummy> : callable { template<class Sig> struct result; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22)> : meta::call<tag::map_(functor<Tag>, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22)> {}; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 ) const { return nt2::map( functor<Tag>(), a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11 , a12 , a13 , a14 , a15 , a16 , a17 , a18 , a19 , a20 , a21 , a22); } }; } } namespace nt2 { namespace ext { template<class Tag, class X, class Dummy> struct call<Tag( tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> ), tag::cpu_, Dummy> : callable { template<class Sig> struct result; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23)> : meta::call<tag::map_(functor<Tag>, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23)> {}; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 ) const { return nt2::map( functor<Tag>(), a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11 , a12 , a13 , a14 , a15 , a16 , a17 , a18 , a19 , a20 , a21 , a22 , a23); } }; } } namespace nt2 { namespace ext { template<class Tag, class X, class Dummy> struct call<Tag( tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> ), tag::cpu_, Dummy> : callable { template<class Sig> struct result; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24)> : meta::call<tag::map_(functor<Tag>, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24)> {}; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 ) const { return nt2::map( functor<Tag>(), a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11 , a12 , a13 , a14 , a15 , a16 , a17 , a18 , a19 , a20 , a21 , a22 , a23 , a24); } }; } } namespace nt2 { namespace ext { template<class Tag, class X, class Dummy> struct call<Tag( tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> ), tag::cpu_, Dummy> : callable { template<class Sig> struct result; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25)> : meta::call<tag::map_(functor<Tag>, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25)> {}; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 ) const { return nt2::map( functor<Tag>(), a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11 , a12 , a13 , a14 , a15 , a16 , a17 , a18 , a19 , a20 , a21 , a22 , a23 , a24 , a25); } }; } } namespace nt2 { namespace ext { template<class Tag, class X, class Dummy> struct call<Tag( tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> ), tag::cpu_, Dummy> : callable { template<class Sig> struct result; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26)> : meta::call<tag::map_(functor<Tag>, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26)> {}; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 ) const { return nt2::map( functor<Tag>(), a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11 , a12 , a13 , a14 , a15 , a16 , a17 , a18 , a19 , a20 , a21 , a22 , a23 , a24 , a25 , a26); } }; } } namespace nt2 { namespace ext { template<class Tag, class X, class Dummy> struct call<Tag( tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> ), tag::cpu_, Dummy> : callable { template<class Sig> struct result; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27)> : meta::call<tag::map_(functor<Tag>, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27)> {}; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 ) const { return nt2::map( functor<Tag>(), a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11 , a12 , a13 , a14 , a15 , a16 , a17 , a18 , a19 , a20 , a21 , a22 , a23 , a24 , a25 , a26 , a27); } }; } } namespace nt2 { namespace ext { template<class Tag, class X, class Dummy> struct call<Tag( tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> ), tag::cpu_, Dummy> : callable { template<class Sig> struct result; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28)> : meta::call<tag::map_(functor<Tag>, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28)> {}; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 ) const { return nt2::map( functor<Tag>(), a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11 , a12 , a13 , a14 , a15 , a16 , a17 , a18 , a19 , a20 , a21 , a22 , a23 , a24 , a25 , a26 , a27 , a28); } }; } } namespace nt2 { namespace ext { template<class Tag, class X, class Dummy> struct call<Tag( tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> ), tag::cpu_, Dummy> : callable { template<class Sig> struct result; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29)> : meta::call<tag::map_(functor<Tag>, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29)> {}; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 ) const { return nt2::map( functor<Tag>(), a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11 , a12 , a13 , a14 , a15 , a16 , a17 , a18 , a19 , a20 , a21 , a22 , a23 , a24 , a25 , a26 , a27 , a28 , a29); } }; } } namespace nt2 { namespace ext { template<class Tag, class X, class Dummy> struct call<Tag( tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> ), tag::cpu_, Dummy> : callable { template<class Sig> struct result; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30)> : meta::call<tag::map_(functor<Tag>, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30)> {}; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 ) const { return nt2::map( functor<Tag>(), a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11 , a12 , a13 , a14 , a15 , a16 , a17 , a18 , a19 , a20 , a21 , a22 , a23 , a24 , a25 , a26 , a27 , a28 , a29 , a30); } }; } } namespace nt2 { namespace ext { template<class Tag, class X, class Dummy> struct call<Tag( tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> ), tag::cpu_, Dummy> : callable { template<class Sig> struct result; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31)> : meta::call<tag::map_(functor<Tag>, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31)> {}; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 ) const { return nt2::map( functor<Tag>(), a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11 , a12 , a13 , a14 , a15 , a16 , a17 , a18 , a19 , a20 , a21 , a22 , a23 , a24 , a25 , a26 , a27 , a28 , a29 , a30 , a31); } }; } } namespace nt2 { namespace ext { template<class Tag, class X, class Dummy> struct call<Tag( tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> ), tag::cpu_, Dummy> : callable { template<class Sig> struct result; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32)> : meta::call<tag::map_(functor<Tag>, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32)> {}; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 ) const { return nt2::map( functor<Tag>(), a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11 , a12 , a13 , a14 , a15 , a16 , a17 , a18 , a19 , a20 , a21 , a22 , a23 , a24 , a25 , a26 , a27 , a28 , a29 , a30 , a31 , a32); } }; } } namespace nt2 { namespace ext { template<class Tag, class X, class Dummy> struct call<Tag( tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> ), tag::cpu_, Dummy> : callable { template<class Sig> struct result; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33)> : meta::call<tag::map_(functor<Tag>, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33)> {}; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 ) const { return nt2::map( functor<Tag>(), a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11 , a12 , a13 , a14 , a15 , a16 , a17 , a18 , a19 , a20 , a21 , a22 , a23 , a24 , a25 , a26 , a27 , a28 , a29 , a30 , a31 , a32 , a33); } }; } } namespace nt2 { namespace ext { template<class Tag, class X, class Dummy> struct call<Tag( tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> ), tag::cpu_, Dummy> : callable { template<class Sig> struct result; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34)> : meta::call<tag::map_(functor<Tag>, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34)> {}; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 ) const { return nt2::map( functor<Tag>(), a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11 , a12 , a13 , a14 , a15 , a16 , a17 , a18 , a19 , a20 , a21 , a22 , a23 , a24 , a25 , a26 , a27 , a28 , a29 , a30 , a31 , a32 , a33 , a34); } }; } } namespace nt2 { namespace ext { template<class Tag, class X, class Dummy> struct call<Tag( tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> ), tag::cpu_, Dummy> : callable { template<class Sig> struct result; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35)> : meta::call<tag::map_(functor<Tag>, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35)> {}; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 ) const { return nt2::map( functor<Tag>(), a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11 , a12 , a13 , a14 , a15 , a16 , a17 , a18 , a19 , a20 , a21 , a22 , a23 , a24 , a25 , a26 , a27 , a28 , a29 , a30 , a31 , a32 , a33 , a34 , a35); } }; } } namespace nt2 { namespace ext { template<class Tag, class X, class Dummy> struct call<Tag( tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> ), tag::cpu_, Dummy> : callable { template<class Sig> struct result; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36)> : meta::call<tag::map_(functor<Tag>, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36)> {}; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 ) const { return nt2::map( functor<Tag>(), a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11 , a12 , a13 , a14 , a15 , a16 , a17 , a18 , a19 , a20 , a21 , a22 , a23 , a24 , a25 , a26 , a27 , a28 , a29 , a30 , a31 , a32 , a33 , a34 , a35 , a36); } }; } } namespace nt2 { namespace ext { template<class Tag, class X, class Dummy> struct call<Tag( tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> ), tag::cpu_, Dummy> : callable { template<class Sig> struct result; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37)> : meta::call<tag::map_(functor<Tag>, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37)> {}; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 ) const { return nt2::map( functor<Tag>(), a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11 , a12 , a13 , a14 , a15 , a16 , a17 , a18 , a19 , a20 , a21 , a22 , a23 , a24 , a25 , a26 , a27 , a28 , a29 , a30 , a31 , a32 , a33 , a34 , a35 , a36 , a37); } }; } } namespace nt2 { namespace ext { template<class Tag, class X, class Dummy> struct call<Tag( tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> ), tag::cpu_, Dummy> : callable { template<class Sig> struct result; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38)> : meta::call<tag::map_(functor<Tag>, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38)> {}; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 ) const { return nt2::map( functor<Tag>(), a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11 , a12 , a13 , a14 , a15 , a16 , a17 , a18 , a19 , a20 , a21 , a22 , a23 , a24 , a25 , a26 , a27 , a28 , a29 , a30 , a31 , a32 , a33 , a34 , a35 , a36 , a37 , a38); } }; } } namespace nt2 { namespace ext { template<class Tag, class X, class Dummy> struct call<Tag( tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> ), tag::cpu_, Dummy> : callable { template<class Sig> struct result; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39)> : meta::call<tag::map_(functor<Tag>, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39)> {}; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 ) const { return nt2::map( functor<Tag>(), a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11 , a12 , a13 , a14 , a15 , a16 , a17 , a18 , a19 , a20 , a21 , a22 , a23 , a24 , a25 , a26 , a27 , a28 , a29 , a30 , a31 , a32 , a33 , a34 , a35 , a36 , a37 , a38 , a39); } }; } } namespace nt2 { namespace ext { template<class Tag, class X, class Dummy> struct call<Tag( tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> ), tag::cpu_, Dummy> : callable { template<class Sig> struct result; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40)> : meta::call<tag::map_(functor<Tag>, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40)> {}; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 ) const { return nt2::map( functor<Tag>(), a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11 , a12 , a13 , a14 , a15 , a16 , a17 , a18 , a19 , a20 , a21 , a22 , a23 , a24 , a25 , a26 , a27 , a28 , a29 , a30 , a31 , a32 , a33 , a34 , a35 , a36 , a37 , a38 , a39 , a40); } }; } } namespace nt2 { namespace ext { template<class Tag, class X, class Dummy> struct call<Tag( tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> ), tag::cpu_, Dummy> : callable { template<class Sig> struct result; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41)> : meta::call<tag::map_(functor<Tag>, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41)> {}; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const& , A41 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 , A41 const& a41 ) const { return nt2::map( functor<Tag>(), a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11 , a12 , a13 , a14 , a15 , a16 , a17 , a18 , a19 , a20 , a21 , a22 , a23 , a24 , a25 , a26 , a27 , a28 , a29 , a30 , a31 , a32 , a33 , a34 , a35 , a36 , a37 , a38 , a39 , a40 , a41); } }; } } namespace nt2 { namespace ext { template<class Tag, class X, class Dummy> struct call<Tag( tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> ), tag::cpu_, Dummy> : callable { template<class Sig> struct result; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42)> : meta::call<tag::map_(functor<Tag>, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42)> {}; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const& , A41 const& , A42 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 , A41 const& a41 , A42 const& a42 ) const { return nt2::map( functor<Tag>(), a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11 , a12 , a13 , a14 , a15 , a16 , a17 , a18 , a19 , a20 , a21 , a22 , a23 , a24 , a25 , a26 , a27 , a28 , a29 , a30 , a31 , a32 , a33 , a34 , a35 , a36 , a37 , a38 , a39 , a40 , a41 , a42); } }; } } namespace nt2 { namespace ext { template<class Tag, class X, class Dummy> struct call<Tag( tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> ), tag::cpu_, Dummy> : callable { template<class Sig> struct result; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43)> : meta::call<tag::map_(functor<Tag>, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43)> {}; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const& , A41 const& , A42 const& , A43 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 , A41 const& a41 , A42 const& a42 , A43 const& a43 ) const { return nt2::map( functor<Tag>(), a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11 , a12 , a13 , a14 , a15 , a16 , a17 , a18 , a19 , a20 , a21 , a22 , a23 , a24 , a25 , a26 , a27 , a28 , a29 , a30 , a31 , a32 , a33 , a34 , a35 , a36 , a37 , a38 , a39 , a40 , a41 , a42 , a43); } }; } } namespace nt2 { namespace ext { template<class Tag, class X, class Dummy> struct call<Tag( tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> ), tag::cpu_, Dummy> : callable { template<class Sig> struct result; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44)> : meta::call<tag::map_(functor<Tag>, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44)> {}; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const& , A41 const& , A42 const& , A43 const& , A44 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 , A41 const& a41 , A42 const& a42 , A43 const& a43 , A44 const& a44 ) const { return nt2::map( functor<Tag>(), a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11 , a12 , a13 , a14 , a15 , a16 , a17 , a18 , a19 , a20 , a21 , a22 , a23 , a24 , a25 , a26 , a27 , a28 , a29 , a30 , a31 , a32 , a33 , a34 , a35 , a36 , a37 , a38 , a39 , a40 , a41 , a42 , a43 , a44); } }; } } namespace nt2 { namespace ext { template<class Tag, class X, class Dummy> struct call<Tag( tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> ), tag::cpu_, Dummy> : callable { template<class Sig> struct result; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45)> : meta::call<tag::map_(functor<Tag>, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45)> {}; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const& , A41 const& , A42 const& , A43 const& , A44 const& , A45 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 , A41 const& a41 , A42 const& a42 , A43 const& a43 , A44 const& a44 , A45 const& a45 ) const { return nt2::map( functor<Tag>(), a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11 , a12 , a13 , a14 , a15 , a16 , a17 , a18 , a19 , a20 , a21 , a22 , a23 , a24 , a25 , a26 , a27 , a28 , a29 , a30 , a31 , a32 , a33 , a34 , a35 , a36 , a37 , a38 , a39 , a40 , a41 , a42 , a43 , a44 , a45); } }; } } namespace nt2 { namespace ext { template<class Tag, class X, class Dummy> struct call<Tag( tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> ), tag::cpu_, Dummy> : callable { template<class Sig> struct result; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46)> : meta::call<tag::map_(functor<Tag>, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46)> {}; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const& , A41 const& , A42 const& , A43 const& , A44 const& , A45 const& , A46 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 , A41 const& a41 , A42 const& a42 , A43 const& a43 , A44 const& a44 , A45 const& a45 , A46 const& a46 ) const { return nt2::map( functor<Tag>(), a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11 , a12 , a13 , a14 , a15 , a16 , a17 , a18 , a19 , a20 , a21 , a22 , a23 , a24 , a25 , a26 , a27 , a28 , a29 , a30 , a31 , a32 , a33 , a34 , a35 , a36 , a37 , a38 , a39 , a40 , a41 , a42 , a43 , a44 , a45 , a46); } }; } } namespace nt2 { namespace ext { template<class Tag, class X, class Dummy> struct call<Tag( tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> ), tag::cpu_, Dummy> : callable { template<class Sig> struct result; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46 , class A47> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46 , A47)> : meta::call<tag::map_(functor<Tag>, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46 , A47)> {}; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46 , class A47> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const& , A41 const& , A42 const& , A43 const& , A44 const& , A45 const& , A46 const& , A47 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 , A41 const& a41 , A42 const& a42 , A43 const& a43 , A44 const& a44 , A45 const& a45 , A46 const& a46 , A47 const& a47 ) const { return nt2::map( functor<Tag>(), a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11 , a12 , a13 , a14 , a15 , a16 , a17 , a18 , a19 , a20 , a21 , a22 , a23 , a24 , a25 , a26 , a27 , a28 , a29 , a30 , a31 , a32 , a33 , a34 , a35 , a36 , a37 , a38 , a39 , a40 , a41 , a42 , a43 , a44 , a45 , a46 , a47); } }; } } namespace nt2 { namespace ext { template<class Tag, class X, class Dummy> struct call<Tag( tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> ), tag::cpu_, Dummy> : callable { template<class Sig> struct result; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46 , class A47 , class A48> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46 , A47 , A48)> : meta::call<tag::map_(functor<Tag>, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46 , A47 , A48)> {}; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46 , class A47 , class A48> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const& , A41 const& , A42 const& , A43 const& , A44 const& , A45 const& , A46 const& , A47 const& , A48 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 , A41 const& a41 , A42 const& a42 , A43 const& a43 , A44 const& a44 , A45 const& a45 , A46 const& a46 , A47 const& a47 , A48 const& a48 ) const { return nt2::map( functor<Tag>(), a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11 , a12 , a13 , a14 , a15 , a16 , a17 , a18 , a19 , a20 , a21 , a22 , a23 , a24 , a25 , a26 , a27 , a28 , a29 , a30 , a31 , a32 , a33 , a34 , a35 , a36 , a37 , a38 , a39 , a40 , a41 , a42 , a43 , a44 , a45 , a46 , a47 , a48); } }; } } namespace nt2 { namespace ext { template<class Tag, class X, class Dummy> struct call<Tag( tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> , tag::simd_<tag::unspecified_,X> ), tag::cpu_, Dummy> : callable { template<class Sig> struct result; template<class This,class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46 , class A47 , class A48 , class A49> struct result<This(A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46 , A47 , A48 , A49)> : meta::call<tag::map_(functor<Tag>, A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9 , A10 , A11 , A12 , A13 , A14 , A15 , A16 , A17 , A18 , A19 , A20 , A21 , A22 , A23 , A24 , A25 , A26 , A27 , A28 , A29 , A30 , A31 , A32 , A33 , A34 , A35 , A36 , A37 , A38 , A39 , A40 , A41 , A42 , A43 , A44 , A45 , A46 , A47 , A48 , A49)> {}; template<class A0 , class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 , class A16 , class A17 , class A18 , class A19 , class A20 , class A21 , class A22 , class A23 , class A24 , class A25 , class A26 , class A27 , class A28 , class A29 , class A30 , class A31 , class A32 , class A33 , class A34 , class A35 , class A36 , class A37 , class A38 , class A39 , class A40 , class A41 , class A42 , class A43 , class A44 , class A45 , class A46 , class A47 , class A48 , class A49> inline typename meta::result_of<call(A0 const& , A1 const& , A2 const& , A3 const& , A4 const& , A5 const& , A6 const& , A7 const& , A8 const& , A9 const& , A10 const& , A11 const& , A12 const& , A13 const& , A14 const& , A15 const& , A16 const& , A17 const& , A18 const& , A19 const& , A20 const& , A21 const& , A22 const& , A23 const& , A24 const& , A25 const& , A26 const& , A27 const& , A28 const& , A29 const& , A30 const& , A31 const& , A32 const& , A33 const& , A34 const& , A35 const& , A36 const& , A37 const& , A38 const& , A39 const& , A40 const& , A41 const& , A42 const& , A43 const& , A44 const& , A45 const& , A46 const& , A47 const& , A48 const& , A49 const&)>::type operator()( A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9 , A10 const& a10 , A11 const& a11 , A12 const& a12 , A13 const& a13 , A14 const& a14 , A15 const& a15 , A16 const& a16 , A17 const& a17 , A18 const& a18 , A19 const& a19 , A20 const& a20 , A21 const& a21 , A22 const& a22 , A23 const& a23 , A24 const& a24 , A25 const& a25 , A26 const& a26 , A27 const& a27 , A28 const& a28 , A29 const& a29 , A30 const& a30 , A31 const& a31 , A32 const& a32 , A33 const& a33 , A34 const& a34 , A35 const& a35 , A36 const& a36 , A37 const& a37 , A38 const& a38 , A39 const& a39 , A40 const& a40 , A41 const& a41 , A42 const& a42 , A43 const& a43 , A44 const& a44 , A45 const& a45 , A46 const& a46 , A47 const& a47 , A48 const& a48 , A49 const& a49 ) const { return nt2::map( functor<Tag>(), a0 , a1 , a2 , a3 , a4 , a5 , a6 , a7 , a8 , a9 , a10 , a11 , a12 , a13 , a14 , a15 , a16 , a17 , a18 , a19 , a20 , a21 , a22 , a23 , a24 , a25 , a26 , a27 , a28 , a29 , a30 , a31 , a32 , a33 , a34 , a35 , a36 , a37 , a38 , a39 , a40 , a41 , a42 , a43 , a44 , a45 , a46 , a47 , a48 , a49); } }; } }
