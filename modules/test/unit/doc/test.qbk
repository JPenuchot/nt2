[section Tests Suite Definition]
A __NT2__ test suite is a C++ source file including:

[import source/test.cpp]
[test]

After compiling and launching the test, you should end up with the following
display:

[import source/test.result.cpp]
[test_result]

Once defined, a __NT2__ test suite has to be populated with test cases.

[endsect]

[section Test Case Definition]
Test cases can be defined either as:

* a single test function with [macroref NT2_TEST_CASE]
  [c++]
  ``
  #define NT2_MODULE "A sample test"
  #include <iostream>
  #include <nt2/sdk/unit/module.hpp>

  NT2_TEST_CASE(my_test)
  {
    std::cout << "nothing special here ..." << std::endl;
  }
  ``


* a familly of functions generated from a template function and a list of types
  passed as a Boost.Preprocessor sequence via the [macroref NT2_TEST_CASE_TPL]
  macro. Inside the test case itself, the current template type is accessible
  through the template parameter T.
  [c++]
  ``
  #define NT2_MODULE "A sample test"
  #include <nt2/sdk/unit/module.hpp>

  NT2_TEST_CASE_TPL(my_template_test, (double)(float)(char))
  {
    T value;
    std::cout << "nothing special here neither..." << std::endl;
  }
  ``


In both case, the test case name should be unique. Additionnaly, good testing
practices recommend to have fine grain test case to simplify test management.

[endsect]

[section Testing Macros]
__NT2__ provides a set of macro for performing usual tests operations and
reporting their success or failure to the test suite manager directly from
within a test case.

[heading Basic Tests]
Those macros provide a way to test if an arbitrary expression evaluate to true
or to force a test failure.

They are accessible in the [headerref nt2/sdk/unit/tests/basic.hpp] file.

* [macroref NT2_TEST]
* [macroref NT2_TEST_ERROR]

[heading Relationnal Tests]
Relationnal tests compares the equality, inequality or ordering of values. Test
is considered successful if values compares equal, non-equal or properly ordered.
Such tests include:

* [macroref NT2_TEST_EQUAL        ]
* [macroref NT2_TEST_NOT_EQUAL    ]
* [macroref NT2_TEST_LESSER       ]
* [macroref NT2_TEST_GREATER      ]
* [macroref NT2_TEST_LESSER_EQUAL ]
* [macroref NT2_TEST_GREATER_EQUAL]

They are accessible in the [headerref nt2/sdk/unit/tests/relation.hpp] file.

[heading Precision Tests]

*[macroref NT2_TEST_ULP_EQUAL]

[heading Runtime Error Tests]
Those tests check if a given expression exhibit a given runtime behavior with
respect to exception or assertion triggers. Expression can be tested for being
able to throw or trigger an assertion and for not throwing nor triggering any assertion.
Those tests require the Unit Test to be compiled with exception support and with
the option [macroref NT2_ASSERTS_AS_EXCEPTIONS] defined.

They are accessible in the [headerref nt2/sdk/unit/tests/exceptions.hpp] file.

* [macroref NT2_TEST_THROW    ]
* [macroref NT2_TEST_ASSERT   ]
* [macroref NT2_TEST_NO_THROW ]
* [macroref NT2_TEST_NO_ASSERT]

[heading Type Related Tests]

They are accessible in the [headerref nt2/sdk/unit/tests/type_expr.hpp] file.

* [macroref NT2_TEST_EXPR_TYPE  ]
* [macroref NT2_TEST_TYPE_INFO  ]
* [macroref NT2_TEST_TYPE_IS    ]

[endsect]

[section Example]

[endsect]
