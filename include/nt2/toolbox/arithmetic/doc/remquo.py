{ 'arity': 2,
  'dptch': ['fundamental_'],
  'incld': ['#include <boost/fusion/tuple.hpp>',
            '#include <nt2/include/functions/remainder.hpp>',
            '#include <nt2/include/functions/idivfix.hpp>'],
  'norst': False,
  'notes': [],
  'rnges': { 'real_': [['T(-10)', 'T(10)'], ['T(-10)', 'T(10)']],
             'signed_int_': [['-100', '100'], ['-100', '100']],
             'unsigned_int_': [['0', '100'], ['0', '100']]},
  'rturn': { 'default': 'boost::fusion::tuple<T,typename nt2::meta::as_integer<T,signed>::type>'},
  'specv': { 'default': { },
             'real_': { 'nt2::Inf<T>()': 'nt2::Inf<T>()',
                        'nt2::Minf<T>()': 'nt2::Minf<T>()',
                        'nt2::Mone<T>()': 'nt2::Mone<T>()',
                        'nt2::Nan<T>()': 'nt2::Nan<T>()',
                        'nt2::One<T>()': 'nt2::One<T>()',
                        'nt2::Zero<T>()': 'nt2::Zero<T>()'},
             } ,            
  'stamp': 'modified by jt the 01/12/2010',
  'tcall': 'boost::fusion::make_tuple(nt2::remainder(a0,a1), nt2::idivfix(a0,a1))',
  'types': ['real_'],
  'versn': "0.0"}
